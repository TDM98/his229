//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eHCMS.ReportLib.RptDrugDepts.DataSchema.Inwards {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsInwardBloodSupplier")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsInwardBloodSupplier : global::System.Data.DataSet {
        
        private spRpt_InwardBlood_ByIDDataTable tablespRpt_InwardBlood_ByID;
        
        private spRpt_InwardBloodInvoice_ByIDDataTable tablespRpt_InwardBloodInvoice_ByID;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public dsInwardBloodSupplier() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected dsInwardBloodSupplier(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spRpt_InwardBlood_ByID"] != null)) {
                    base.Tables.Add(new spRpt_InwardBlood_ByIDDataTable(ds.Tables["spRpt_InwardBlood_ByID"]));
                }
                if ((ds.Tables["spRpt_InwardBloodInvoice_ByID"] != null)) {
                    base.Tables.Add(new spRpt_InwardBloodInvoice_ByIDDataTable(ds.Tables["spRpt_InwardBloodInvoice_ByID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRpt_InwardBlood_ByIDDataTable spRpt_InwardBlood_ByID {
            get {
                return this.tablespRpt_InwardBlood_ByID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRpt_InwardBloodInvoice_ByIDDataTable spRpt_InwardBloodInvoice_ByID {
            get {
                return this.tablespRpt_InwardBloodInvoice_ByID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsInwardBloodSupplier cln = ((dsInwardBloodSupplier)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spRpt_InwardBlood_ByID"] != null)) {
                    base.Tables.Add(new spRpt_InwardBlood_ByIDDataTable(ds.Tables["spRpt_InwardBlood_ByID"]));
                }
                if ((ds.Tables["spRpt_InwardBloodInvoice_ByID"] != null)) {
                    base.Tables.Add(new spRpt_InwardBloodInvoice_ByIDDataTable(ds.Tables["spRpt_InwardBloodInvoice_ByID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespRpt_InwardBlood_ByID = ((spRpt_InwardBlood_ByIDDataTable)(base.Tables["spRpt_InwardBlood_ByID"]));
            if ((initTable == true)) {
                if ((this.tablespRpt_InwardBlood_ByID != null)) {
                    this.tablespRpt_InwardBlood_ByID.InitVars();
                }
            }
            this.tablespRpt_InwardBloodInvoice_ByID = ((spRpt_InwardBloodInvoice_ByIDDataTable)(base.Tables["spRpt_InwardBloodInvoice_ByID"]));
            if ((initTable == true)) {
                if ((this.tablespRpt_InwardBloodInvoice_ByID != null)) {
                    this.tablespRpt_InwardBloodInvoice_ByID.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsInwardBloodSupplier";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsInwardBloodSupplier.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespRpt_InwardBlood_ByID = new spRpt_InwardBlood_ByIDDataTable();
            base.Tables.Add(this.tablespRpt_InwardBlood_ByID);
            this.tablespRpt_InwardBloodInvoice_ByID = new spRpt_InwardBloodInvoice_ByIDDataTable();
            base.Tables.Add(this.tablespRpt_InwardBloodInvoice_ByID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializespRpt_InwardBlood_ByID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializespRpt_InwardBloodInvoice_ByID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsInwardBloodSupplier ds = new dsInwardBloodSupplier();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void spRpt_InwardBlood_ByIDRowChangeEventHandler(object sender, spRpt_InwardBlood_ByIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void spRpt_InwardBloodInvoice_ByIDRowChangeEventHandler(object sender, spRpt_InwardBloodInvoice_ByIDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRpt_InwardBlood_ByIDDataTable : global::System.Data.TypedTableBase<spRpt_InwardBlood_ByIDRow> {
            
            private global::System.Data.DataColumn columnInID;
            
            private global::System.Data.DataColumn columnSdlID;
            
            private global::System.Data.DataColumn columnStaffID;
            
            private global::System.Data.DataColumn columninviID;
            
            private global::System.Data.DataColumn columnInBatchNumber;
            
            private global::System.Data.DataColumn columnInProductionDate;
            
            private global::System.Data.DataColumn columnInExpiryDate;
            
            private global::System.Data.DataColumn columnInQuantity;
            
            private global::System.Data.DataColumn columnInBuyingPrice;
            
            private global::System.Data.DataColumn columnInCost;
            
            private global::System.Data.DataColumn columnNormalPrice;
            
            private global::System.Data.DataColumn columnHIPatientPrice;
            
            private global::System.Data.DataColumn columnHIAllowedPrice;
            
            private global::System.Data.DataColumn columnRemaining;
            
            private global::System.Data.DataColumn columnIsPercentage;
            
            private global::System.Data.DataColumn columnV_GoodsType;
            
            private global::System.Data.DataColumn columnDrugDeptPoDetailID;
            
            private global::System.Data.DataColumn columnDiscounting;
            
            private global::System.Data.DataColumn columnDiscountByPercent;
            
            private global::System.Data.DataColumn columnIsPercent;
            
            private global::System.Data.DataColumn columnIsBeginStockTakePeriod;
            
            private global::System.Data.DataColumn columnIsEndStockTakePeriod;
            
            private global::System.Data.DataColumn columnInIDOriginal;
            
            private global::System.Data.DataColumn columnNoPrint;
            
            private global::System.Data.DataColumn columnPackagePrice;
            
            private global::System.Data.DataColumn columnPackageQuantity;
            
            private global::System.Data.DataColumn columnIsUnitPackage;
            
            private global::System.Data.DataColumn columnGoodsTypeName;
            
            private global::System.Data.DataColumn columnSdlDescription;
            
            private global::System.Data.DataColumn columnPriceForHIPatient;
            
            private global::System.Data.DataColumn columnGenMedProductID;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnGenericName;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnHICode;
            
            private global::System.Data.DataColumn columnFunctions;
            
            private global::System.Data.DataColumn columnTechInfo;
            
            private global::System.Data.DataColumn columnMaterial;
            
            private global::System.Data.DataColumn columnVisa;
            
            private global::System.Data.DataColumn columnPCOID;
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnPackaging;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnUnitUseID;
            
            private global::System.Data.DataColumn columnUnitPackaging;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnAdministration;
            
            private global::System.Data.DataColumn columnInsuranceCover;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnV_MedProductType;
            
            private global::System.Data.DataColumn columnNumberOfEstimatedMonths;
            
            private global::System.Data.DataColumn columnMedGenDrugID;
            
            private global::System.Data.DataColumn columnContent;
            
            private global::System.Data.DataColumn columnDosage;
            
            private global::System.Data.DataColumn columnComposition;
            
            private global::System.Data.DataColumn columnActiveIngredient;
            
            private global::System.Data.DataColumn columnIndication;
            
            private global::System.Data.DataColumn columnContraindication;
            
            private global::System.Data.DataColumn columnPrecaution_Warn;
            
            private global::System.Data.DataColumn columnSideEffects;
            
            private global::System.Data.DataColumn columnInteraction;
            
            private global::System.Data.DataColumn columnAdvTimeBeforeExpire;
            
            private global::System.Data.DataColumn columnIsConsult;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnUnitCode;
            
            private global::System.Data.DataColumn columnCountryName;
            
            private global::System.Data.DataColumn columnCountryCode;
            
            private global::System.Data.DataColumn columnUnitUse;
            
            private global::System.Data.DataColumn columnUnitUseID_Code;
            
            private global::System.Data.DataColumn columnFactorSafety;
            
            private global::System.Data.DataColumn columnRefGenDrugCatID_1;
            
            private global::System.Data.DataColumn columnActiveIngredientCode;
            
            private global::System.Data.DataColumn columnProductCodeRefNum;
            
            private global::System.Data.DataColumn columnHosID;
            
            private global::System.Data.DataColumn columnKeepRefrigerated;
            
            private global::System.Data.DataColumn columnDrugClassID;
            
            private global::System.Data.DataColumn columnPCOName;
            
            private global::System.Data.DataColumn columnFaName;
            
            private global::System.Data.DataColumn columnRefGenDrugBHYT_CatID;
            
            private global::System.Data.DataColumn columnCategoryName;
            
            private global::System.Data.DataColumn columnCategoryDescription;
            
            private global::System.Data.DataColumn columnIngredientOrderNo;
            
            private global::System.Data.DataColumn columnDrugOrderNo;
            
            private global::System.Data.DataColumn columnGroupParentID;
            
            private global::System.Data.DataColumn columnGroupID;
            
            private global::System.Data.DataColumn columnShelfName;
            
            private global::System.Data.DataColumn columnHosName;
            
            private global::System.Data.DataColumn columnHospitalCode;
            
            private global::System.Data.DataColumn columnHosShortName;
            
            private global::System.Data.DataColumn columnMaxDayPrescribed;
            
            private global::System.Data.DataColumn columnDispenseVolume;
            
            private global::System.Data.DataColumn columnV_MedicalMaterial;
            
            private global::System.Data.DataColumn columnRefGenDrugCat_1;
            
            private global::System.Data.DataColumn columnRefGenDrugCat_2;
            
            private global::System.Data.DataColumn columnWinningHospitals;
            
            private global::System.Data.DataColumn columnHIPaymentPercent;
            
            private global::System.Data.DataColumn columnDosageForm;
            
            private global::System.Data.DataColumn columnDrugForm;
            
            private global::System.Data.DataColumn columnIsDonatedGoods;
            
            private global::System.Data.DataColumn columnMaxQtyHIAllowItem;
            
            private global::System.Data.DataColumn columnPaymentRateOfHIAddedItem;
            
            private global::System.Data.DataColumn columnDrugDeptProductGroupReportTypeID;
            
            private global::System.Data.DataColumn columnV_CatDrugType;
            
            private global::System.Data.DataColumn columnDrugID;
            
            private global::System.Data.DataColumn columnTotalPriceNotVAT;
            
            private global::System.Data.DataColumn columnDiscountingValue;
            
            private global::System.Data.DataColumn columnTotalPriceHaveDiscounting;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBlood_ByIDDataTable() {
                this.TableName = "spRpt_InwardBlood_ByID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spRpt_InwardBlood_ByIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected spRpt_InwardBlood_ByIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InIDColumn {
                get {
                    return this.columnInID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SdlIDColumn {
                get {
                    return this.columnSdlID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StaffIDColumn {
                get {
                    return this.columnStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn inviIDColumn {
                get {
                    return this.columninviID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InBatchNumberColumn {
                get {
                    return this.columnInBatchNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InProductionDateColumn {
                get {
                    return this.columnInProductionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InExpiryDateColumn {
                get {
                    return this.columnInExpiryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InQuantityColumn {
                get {
                    return this.columnInQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InBuyingPriceColumn {
                get {
                    return this.columnInBuyingPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InCostColumn {
                get {
                    return this.columnInCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NormalPriceColumn {
                get {
                    return this.columnNormalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HIPatientPriceColumn {
                get {
                    return this.columnHIPatientPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HIAllowedPriceColumn {
                get {
                    return this.columnHIAllowedPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RemainingColumn {
                get {
                    return this.columnRemaining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsPercentageColumn {
                get {
                    return this.columnIsPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_GoodsTypeColumn {
                get {
                    return this.columnV_GoodsType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DrugDeptPoDetailIDColumn {
                get {
                    return this.columnDrugDeptPoDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiscountingColumn {
                get {
                    return this.columnDiscounting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiscountByPercentColumn {
                get {
                    return this.columnDiscountByPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsPercentColumn {
                get {
                    return this.columnIsPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsBeginStockTakePeriodColumn {
                get {
                    return this.columnIsBeginStockTakePeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsEndStockTakePeriodColumn {
                get {
                    return this.columnIsEndStockTakePeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InIDOriginalColumn {
                get {
                    return this.columnInIDOriginal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NoPrintColumn {
                get {
                    return this.columnNoPrint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PackagePriceColumn {
                get {
                    return this.columnPackagePrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PackageQuantityColumn {
                get {
                    return this.columnPackageQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsUnitPackageColumn {
                get {
                    return this.columnIsUnitPackage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GoodsTypeNameColumn {
                get {
                    return this.columnGoodsTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SdlDescriptionColumn {
                get {
                    return this.columnSdlDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PriceForHIPatientColumn {
                get {
                    return this.columnPriceForHIPatient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GenMedProductIDColumn {
                get {
                    return this.columnGenMedProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GenericNameColumn {
                get {
                    return this.columnGenericName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HICodeColumn {
                get {
                    return this.columnHICode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FunctionsColumn {
                get {
                    return this.columnFunctions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TechInfoColumn {
                get {
                    return this.columnTechInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaterialColumn {
                get {
                    return this.columnMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VisaColumn {
                get {
                    return this.columnVisa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PCOIDColumn {
                get {
                    return this.columnPCOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PackagingColumn {
                get {
                    return this.columnPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnitUseIDColumn {
                get {
                    return this.columnUnitUseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnitPackagingColumn {
                get {
                    return this.columnUnitPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AdministrationColumn {
                get {
                    return this.columnAdministration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InsuranceCoverColumn {
                get {
                    return this.columnInsuranceCover;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_MedProductTypeColumn {
                get {
                    return this.columnV_MedProductType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NumberOfEstimatedMonthsColumn {
                get {
                    return this.columnNumberOfEstimatedMonths;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MedGenDrugIDColumn {
                get {
                    return this.columnMedGenDrugID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ContentColumn {
                get {
                    return this.columnContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DosageColumn {
                get {
                    return this.columnDosage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CompositionColumn {
                get {
                    return this.columnComposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ActiveIngredientColumn {
                get {
                    return this.columnActiveIngredient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IndicationColumn {
                get {
                    return this.columnIndication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ContraindicationColumn {
                get {
                    return this.columnContraindication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Precaution_WarnColumn {
                get {
                    return this.columnPrecaution_Warn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SideEffectsColumn {
                get {
                    return this.columnSideEffects;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InteractionColumn {
                get {
                    return this.columnInteraction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AdvTimeBeforeExpireColumn {
                get {
                    return this.columnAdvTimeBeforeExpire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsConsultColumn {
                get {
                    return this.columnIsConsult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnitCodeColumn {
                get {
                    return this.columnUnitCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CountryNameColumn {
                get {
                    return this.columnCountryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CountryCodeColumn {
                get {
                    return this.columnCountryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnitUseColumn {
                get {
                    return this.columnUnitUse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnitUseID_CodeColumn {
                get {
                    return this.columnUnitUseID_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FactorSafetyColumn {
                get {
                    return this.columnFactorSafety;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RefGenDrugCatID_1Column {
                get {
                    return this.columnRefGenDrugCatID_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ActiveIngredientCodeColumn {
                get {
                    return this.columnActiveIngredientCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProductCodeRefNumColumn {
                get {
                    return this.columnProductCodeRefNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HosIDColumn {
                get {
                    return this.columnHosID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn KeepRefrigeratedColumn {
                get {
                    return this.columnKeepRefrigerated;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DrugClassIDColumn {
                get {
                    return this.columnDrugClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PCONameColumn {
                get {
                    return this.columnPCOName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FaNameColumn {
                get {
                    return this.columnFaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RefGenDrugBHYT_CatIDColumn {
                get {
                    return this.columnRefGenDrugBHYT_CatID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CategoryNameColumn {
                get {
                    return this.columnCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CategoryDescriptionColumn {
                get {
                    return this.columnCategoryDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IngredientOrderNoColumn {
                get {
                    return this.columnIngredientOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DrugOrderNoColumn {
                get {
                    return this.columnDrugOrderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GroupParentIDColumn {
                get {
                    return this.columnGroupParentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GroupIDColumn {
                get {
                    return this.columnGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ShelfNameColumn {
                get {
                    return this.columnShelfName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HosNameColumn {
                get {
                    return this.columnHosName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HospitalCodeColumn {
                get {
                    return this.columnHospitalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HosShortNameColumn {
                get {
                    return this.columnHosShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaxDayPrescribedColumn {
                get {
                    return this.columnMaxDayPrescribed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DispenseVolumeColumn {
                get {
                    return this.columnDispenseVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_MedicalMaterialColumn {
                get {
                    return this.columnV_MedicalMaterial;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RefGenDrugCat_1Column {
                get {
                    return this.columnRefGenDrugCat_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RefGenDrugCat_2Column {
                get {
                    return this.columnRefGenDrugCat_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WinningHospitalsColumn {
                get {
                    return this.columnWinningHospitals;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HIPaymentPercentColumn {
                get {
                    return this.columnHIPaymentPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DosageFormColumn {
                get {
                    return this.columnDosageForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DrugFormColumn {
                get {
                    return this.columnDrugForm;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsDonatedGoodsColumn {
                get {
                    return this.columnIsDonatedGoods;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaxQtyHIAllowItemColumn {
                get {
                    return this.columnMaxQtyHIAllowItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PaymentRateOfHIAddedItemColumn {
                get {
                    return this.columnPaymentRateOfHIAddedItem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DrugDeptProductGroupReportTypeIDColumn {
                get {
                    return this.columnDrugDeptProductGroupReportTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_CatDrugTypeColumn {
                get {
                    return this.columnV_CatDrugType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DrugIDColumn {
                get {
                    return this.columnDrugID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalPriceNotVATColumn {
                get {
                    return this.columnTotalPriceNotVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiscountingValueColumn {
                get {
                    return this.columnDiscountingValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalPriceHaveDiscountingColumn {
                get {
                    return this.columnTotalPriceHaveDiscounting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBlood_ByIDRow this[int index] {
                get {
                    return ((spRpt_InwardBlood_ByIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRpt_InwardBlood_ByIDRowChangeEventHandler spRpt_InwardBlood_ByIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRpt_InwardBlood_ByIDRowChangeEventHandler spRpt_InwardBlood_ByIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRpt_InwardBlood_ByIDRowChangeEventHandler spRpt_InwardBlood_ByIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRpt_InwardBlood_ByIDRowChangeEventHandler spRpt_InwardBlood_ByIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddspRpt_InwardBlood_ByIDRow(spRpt_InwardBlood_ByIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBlood_ByIDRow AddspRpt_InwardBlood_ByIDRow(
                        long SdlID, 
                        long StaffID, 
                        long inviID, 
                        string InBatchNumber, 
                        System.DateTime InProductionDate, 
                        System.DateTime InExpiryDate, 
                        int InQuantity, 
                        decimal InBuyingPrice, 
                        decimal InCost, 
                        decimal NormalPrice, 
                        decimal HIPatientPrice, 
                        decimal HIAllowedPrice, 
                        int Remaining, 
                        bool IsPercentage, 
                        long V_GoodsType, 
                        long DrugDeptPoDetailID, 
                        decimal Discounting, 
                        double DiscountByPercent, 
                        bool IsPercent, 
                        bool IsBeginStockTakePeriod, 
                        bool IsEndStockTakePeriod, 
                        long InIDOriginal, 
                        bool NoPrint, 
                        decimal PackagePrice, 
                        double PackageQuantity, 
                        bool IsUnitPackage, 
                        string GoodsTypeName, 
                        string SdlDescription, 
                        decimal PriceForHIPatient, 
                        long GenMedProductID, 
                        string BrandName, 
                        string GenericName, 
                        string Code, 
                        string HICode, 
                        string Functions, 
                        string TechInfo, 
                        string Material, 
                        string Visa, 
                        long PCOID, 
                        long CountryID, 
                        string Packaging, 
                        long UnitID, 
                        long UnitUseID, 
                        int UnitPackaging, 
                        string Description, 
                        string Administration, 
                        bool InsuranceCover, 
                        bool IsActive, 
                        long V_MedProductType, 
                        double NumberOfEstimatedMonths, 
                        long MedGenDrugID, 
                        string Content, 
                        string Dosage, 
                        string Composition, 
                        string ActiveIngredient, 
                        string Indication, 
                        string Contraindication, 
                        string Precaution_Warn, 
                        string SideEffects, 
                        string Interaction, 
                        int AdvTimeBeforeExpire, 
                        bool IsConsult, 
                        string UnitName, 
                        string UnitCode, 
                        string CountryName, 
                        string CountryCode, 
                        string UnitUse, 
                        string UnitUseID_Code, 
                        int FactorSafety, 
                        long RefGenDrugCatID_1, 
                        string ActiveIngredientCode, 
                        string ProductCodeRefNum, 
                        long HosID, 
                        bool KeepRefrigerated, 
                        long DrugClassID, 
                        string PCOName, 
                        string FaName, 
                        long RefGenDrugBHYT_CatID, 
                        string CategoryName, 
                        string CategoryDescription, 
                        long IngredientOrderNo, 
                        string DrugOrderNo, 
                        long GroupParentID, 
                        long GroupID, 
                        string ShelfName, 
                        string HosName, 
                        string HospitalCode, 
                        string HosShortName, 
                        short MaxDayPrescribed, 
                        double DispenseVolume, 
                        long V_MedicalMaterial, 
                        string RefGenDrugCat_1, 
                        string RefGenDrugCat_2, 
                        string WinningHospitals, 
                        double HIPaymentPercent, 
                        string DosageForm, 
                        string DrugForm, 
                        bool IsDonatedGoods, 
                        int MaxQtyHIAllowItem, 
                        double PaymentRateOfHIAddedItem, 
                        long DrugDeptProductGroupReportTypeID, 
                        long V_CatDrugType, 
                        long DrugID, 
                        decimal TotalPriceNotVAT, 
                        decimal DiscountingValue, 
                        decimal TotalPriceHaveDiscounting) {
                spRpt_InwardBlood_ByIDRow rowspRpt_InwardBlood_ByIDRow = ((spRpt_InwardBlood_ByIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SdlID,
                        StaffID,
                        inviID,
                        InBatchNumber,
                        InProductionDate,
                        InExpiryDate,
                        InQuantity,
                        InBuyingPrice,
                        InCost,
                        NormalPrice,
                        HIPatientPrice,
                        HIAllowedPrice,
                        Remaining,
                        IsPercentage,
                        V_GoodsType,
                        DrugDeptPoDetailID,
                        Discounting,
                        DiscountByPercent,
                        IsPercent,
                        IsBeginStockTakePeriod,
                        IsEndStockTakePeriod,
                        InIDOriginal,
                        NoPrint,
                        PackagePrice,
                        PackageQuantity,
                        IsUnitPackage,
                        GoodsTypeName,
                        SdlDescription,
                        PriceForHIPatient,
                        GenMedProductID,
                        BrandName,
                        GenericName,
                        Code,
                        HICode,
                        Functions,
                        TechInfo,
                        Material,
                        Visa,
                        PCOID,
                        CountryID,
                        Packaging,
                        UnitID,
                        UnitUseID,
                        UnitPackaging,
                        Description,
                        Administration,
                        InsuranceCover,
                        IsActive,
                        V_MedProductType,
                        NumberOfEstimatedMonths,
                        MedGenDrugID,
                        Content,
                        Dosage,
                        Composition,
                        ActiveIngredient,
                        Indication,
                        Contraindication,
                        Precaution_Warn,
                        SideEffects,
                        Interaction,
                        AdvTimeBeforeExpire,
                        IsConsult,
                        UnitName,
                        UnitCode,
                        CountryName,
                        CountryCode,
                        UnitUse,
                        UnitUseID_Code,
                        FactorSafety,
                        RefGenDrugCatID_1,
                        ActiveIngredientCode,
                        ProductCodeRefNum,
                        HosID,
                        KeepRefrigerated,
                        DrugClassID,
                        PCOName,
                        FaName,
                        RefGenDrugBHYT_CatID,
                        CategoryName,
                        CategoryDescription,
                        IngredientOrderNo,
                        DrugOrderNo,
                        GroupParentID,
                        GroupID,
                        ShelfName,
                        HosName,
                        HospitalCode,
                        HosShortName,
                        MaxDayPrescribed,
                        DispenseVolume,
                        V_MedicalMaterial,
                        RefGenDrugCat_1,
                        RefGenDrugCat_2,
                        WinningHospitals,
                        HIPaymentPercent,
                        DosageForm,
                        DrugForm,
                        IsDonatedGoods,
                        MaxQtyHIAllowItem,
                        PaymentRateOfHIAddedItem,
                        DrugDeptProductGroupReportTypeID,
                        V_CatDrugType,
                        DrugID,
                        TotalPriceNotVAT,
                        DiscountingValue,
                        TotalPriceHaveDiscounting};
                rowspRpt_InwardBlood_ByIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRpt_InwardBlood_ByIDRow);
                return rowspRpt_InwardBlood_ByIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRpt_InwardBlood_ByIDDataTable cln = ((spRpt_InwardBlood_ByIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRpt_InwardBlood_ByIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnInID = base.Columns["InID"];
                this.columnSdlID = base.Columns["SdlID"];
                this.columnStaffID = base.Columns["StaffID"];
                this.columninviID = base.Columns["inviID"];
                this.columnInBatchNumber = base.Columns["InBatchNumber"];
                this.columnInProductionDate = base.Columns["InProductionDate"];
                this.columnInExpiryDate = base.Columns["InExpiryDate"];
                this.columnInQuantity = base.Columns["InQuantity"];
                this.columnInBuyingPrice = base.Columns["InBuyingPrice"];
                this.columnInCost = base.Columns["InCost"];
                this.columnNormalPrice = base.Columns["NormalPrice"];
                this.columnHIPatientPrice = base.Columns["HIPatientPrice"];
                this.columnHIAllowedPrice = base.Columns["HIAllowedPrice"];
                this.columnRemaining = base.Columns["Remaining"];
                this.columnIsPercentage = base.Columns["IsPercentage"];
                this.columnV_GoodsType = base.Columns["V_GoodsType"];
                this.columnDrugDeptPoDetailID = base.Columns["DrugDeptPoDetailID"];
                this.columnDiscounting = base.Columns["Discounting"];
                this.columnDiscountByPercent = base.Columns["DiscountByPercent"];
                this.columnIsPercent = base.Columns["IsPercent"];
                this.columnIsBeginStockTakePeriod = base.Columns["IsBeginStockTakePeriod"];
                this.columnIsEndStockTakePeriod = base.Columns["IsEndStockTakePeriod"];
                this.columnInIDOriginal = base.Columns["InIDOriginal"];
                this.columnNoPrint = base.Columns["NoPrint"];
                this.columnPackagePrice = base.Columns["PackagePrice"];
                this.columnPackageQuantity = base.Columns["PackageQuantity"];
                this.columnIsUnitPackage = base.Columns["IsUnitPackage"];
                this.columnGoodsTypeName = base.Columns["GoodsTypeName"];
                this.columnSdlDescription = base.Columns["SdlDescription"];
                this.columnPriceForHIPatient = base.Columns["PriceForHIPatient"];
                this.columnGenMedProductID = base.Columns["GenMedProductID"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnGenericName = base.Columns["GenericName"];
                this.columnCode = base.Columns["Code"];
                this.columnHICode = base.Columns["HICode"];
                this.columnFunctions = base.Columns["Functions"];
                this.columnTechInfo = base.Columns["TechInfo"];
                this.columnMaterial = base.Columns["Material"];
                this.columnVisa = base.Columns["Visa"];
                this.columnPCOID = base.Columns["PCOID"];
                this.columnCountryID = base.Columns["CountryID"];
                this.columnPackaging = base.Columns["Packaging"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnUnitUseID = base.Columns["UnitUseID"];
                this.columnUnitPackaging = base.Columns["UnitPackaging"];
                this.columnDescription = base.Columns["Description"];
                this.columnAdministration = base.Columns["Administration"];
                this.columnInsuranceCover = base.Columns["InsuranceCover"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnV_MedProductType = base.Columns["V_MedProductType"];
                this.columnNumberOfEstimatedMonths = base.Columns["NumberOfEstimatedMonths"];
                this.columnMedGenDrugID = base.Columns["MedGenDrugID"];
                this.columnContent = base.Columns["Content"];
                this.columnDosage = base.Columns["Dosage"];
                this.columnComposition = base.Columns["Composition"];
                this.columnActiveIngredient = base.Columns["ActiveIngredient"];
                this.columnIndication = base.Columns["Indication"];
                this.columnContraindication = base.Columns["Contraindication"];
                this.columnPrecaution_Warn = base.Columns["Precaution_Warn"];
                this.columnSideEffects = base.Columns["SideEffects"];
                this.columnInteraction = base.Columns["Interaction"];
                this.columnAdvTimeBeforeExpire = base.Columns["AdvTimeBeforeExpire"];
                this.columnIsConsult = base.Columns["IsConsult"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnUnitCode = base.Columns["UnitCode"];
                this.columnCountryName = base.Columns["CountryName"];
                this.columnCountryCode = base.Columns["CountryCode"];
                this.columnUnitUse = base.Columns["UnitUse"];
                this.columnUnitUseID_Code = base.Columns["UnitUseID_Code"];
                this.columnFactorSafety = base.Columns["FactorSafety"];
                this.columnRefGenDrugCatID_1 = base.Columns["RefGenDrugCatID_1"];
                this.columnActiveIngredientCode = base.Columns["ActiveIngredientCode"];
                this.columnProductCodeRefNum = base.Columns["ProductCodeRefNum"];
                this.columnHosID = base.Columns["HosID"];
                this.columnKeepRefrigerated = base.Columns["KeepRefrigerated"];
                this.columnDrugClassID = base.Columns["DrugClassID"];
                this.columnPCOName = base.Columns["PCOName"];
                this.columnFaName = base.Columns["FaName"];
                this.columnRefGenDrugBHYT_CatID = base.Columns["RefGenDrugBHYT_CatID"];
                this.columnCategoryName = base.Columns["CategoryName"];
                this.columnCategoryDescription = base.Columns["CategoryDescription"];
                this.columnIngredientOrderNo = base.Columns["IngredientOrderNo"];
                this.columnDrugOrderNo = base.Columns["DrugOrderNo"];
                this.columnGroupParentID = base.Columns["GroupParentID"];
                this.columnGroupID = base.Columns["GroupID"];
                this.columnShelfName = base.Columns["ShelfName"];
                this.columnHosName = base.Columns["HosName"];
                this.columnHospitalCode = base.Columns["HospitalCode"];
                this.columnHosShortName = base.Columns["HosShortName"];
                this.columnMaxDayPrescribed = base.Columns["MaxDayPrescribed"];
                this.columnDispenseVolume = base.Columns["DispenseVolume"];
                this.columnV_MedicalMaterial = base.Columns["V_MedicalMaterial"];
                this.columnRefGenDrugCat_1 = base.Columns["RefGenDrugCat_1"];
                this.columnRefGenDrugCat_2 = base.Columns["RefGenDrugCat_2"];
                this.columnWinningHospitals = base.Columns["WinningHospitals"];
                this.columnHIPaymentPercent = base.Columns["HIPaymentPercent"];
                this.columnDosageForm = base.Columns["DosageForm"];
                this.columnDrugForm = base.Columns["DrugForm"];
                this.columnIsDonatedGoods = base.Columns["IsDonatedGoods"];
                this.columnMaxQtyHIAllowItem = base.Columns["MaxQtyHIAllowItem"];
                this.columnPaymentRateOfHIAddedItem = base.Columns["PaymentRateOfHIAddedItem"];
                this.columnDrugDeptProductGroupReportTypeID = base.Columns["DrugDeptProductGroupReportTypeID"];
                this.columnV_CatDrugType = base.Columns["V_CatDrugType"];
                this.columnDrugID = base.Columns["DrugID"];
                this.columnTotalPriceNotVAT = base.Columns["TotalPriceNotVAT"];
                this.columnDiscountingValue = base.Columns["DiscountingValue"];
                this.columnTotalPriceHaveDiscounting = base.Columns["TotalPriceHaveDiscounting"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnInID = new global::System.Data.DataColumn("InID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInID);
                this.columnSdlID = new global::System.Data.DataColumn("SdlID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSdlID);
                this.columnStaffID = new global::System.Data.DataColumn("StaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID);
                this.columninviID = new global::System.Data.DataColumn("inviID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninviID);
                this.columnInBatchNumber = new global::System.Data.DataColumn("InBatchNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInBatchNumber);
                this.columnInProductionDate = new global::System.Data.DataColumn("InProductionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInProductionDate);
                this.columnInExpiryDate = new global::System.Data.DataColumn("InExpiryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInExpiryDate);
                this.columnInQuantity = new global::System.Data.DataColumn("InQuantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInQuantity);
                this.columnInBuyingPrice = new global::System.Data.DataColumn("InBuyingPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInBuyingPrice);
                this.columnInCost = new global::System.Data.DataColumn("InCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInCost);
                this.columnNormalPrice = new global::System.Data.DataColumn("NormalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormalPrice);
                this.columnHIPatientPrice = new global::System.Data.DataColumn("HIPatientPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPatientPrice);
                this.columnHIAllowedPrice = new global::System.Data.DataColumn("HIAllowedPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIAllowedPrice);
                this.columnRemaining = new global::System.Data.DataColumn("Remaining", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemaining);
                this.columnIsPercentage = new global::System.Data.DataColumn("IsPercentage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPercentage);
                this.columnV_GoodsType = new global::System.Data.DataColumn("V_GoodsType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_GoodsType);
                this.columnDrugDeptPoDetailID = new global::System.Data.DataColumn("DrugDeptPoDetailID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugDeptPoDetailID);
                this.columnDiscounting = new global::System.Data.DataColumn("Discounting", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscounting);
                this.columnDiscountByPercent = new global::System.Data.DataColumn("DiscountByPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountByPercent);
                this.columnIsPercent = new global::System.Data.DataColumn("IsPercent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPercent);
                this.columnIsBeginStockTakePeriod = new global::System.Data.DataColumn("IsBeginStockTakePeriod", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsBeginStockTakePeriod);
                this.columnIsEndStockTakePeriod = new global::System.Data.DataColumn("IsEndStockTakePeriod", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsEndStockTakePeriod);
                this.columnInIDOriginal = new global::System.Data.DataColumn("InIDOriginal", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInIDOriginal);
                this.columnNoPrint = new global::System.Data.DataColumn("NoPrint", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoPrint);
                this.columnPackagePrice = new global::System.Data.DataColumn("PackagePrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackagePrice);
                this.columnPackageQuantity = new global::System.Data.DataColumn("PackageQuantity", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackageQuantity);
                this.columnIsUnitPackage = new global::System.Data.DataColumn("IsUnitPackage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsUnitPackage);
                this.columnGoodsTypeName = new global::System.Data.DataColumn("GoodsTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGoodsTypeName);
                this.columnSdlDescription = new global::System.Data.DataColumn("SdlDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSdlDescription);
                this.columnPriceForHIPatient = new global::System.Data.DataColumn("PriceForHIPatient", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceForHIPatient);
                this.columnGenMedProductID = new global::System.Data.DataColumn("GenMedProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenMedProductID);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnGenericName = new global::System.Data.DataColumn("GenericName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenericName);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnHICode = new global::System.Data.DataColumn("HICode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHICode);
                this.columnFunctions = new global::System.Data.DataColumn("Functions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctions);
                this.columnTechInfo = new global::System.Data.DataColumn("TechInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechInfo);
                this.columnMaterial = new global::System.Data.DataColumn("Material", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaterial);
                this.columnVisa = new global::System.Data.DataColumn("Visa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisa);
                this.columnPCOID = new global::System.Data.DataColumn("PCOID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCOID);
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnPackaging = new global::System.Data.DataColumn("Packaging", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackaging);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnUnitUseID = new global::System.Data.DataColumn("UnitUseID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitUseID);
                this.columnUnitPackaging = new global::System.Data.DataColumn("UnitPackaging", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPackaging);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnAdministration = new global::System.Data.DataColumn("Administration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdministration);
                this.columnInsuranceCover = new global::System.Data.DataColumn("InsuranceCover", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceCover);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnV_MedProductType = new global::System.Data.DataColumn("V_MedProductType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_MedProductType);
                this.columnNumberOfEstimatedMonths = new global::System.Data.DataColumn("NumberOfEstimatedMonths", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfEstimatedMonths);
                this.columnMedGenDrugID = new global::System.Data.DataColumn("MedGenDrugID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedGenDrugID);
                this.columnContent = new global::System.Data.DataColumn("Content", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContent);
                this.columnDosage = new global::System.Data.DataColumn("Dosage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDosage);
                this.columnComposition = new global::System.Data.DataColumn("Composition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComposition);
                this.columnActiveIngredient = new global::System.Data.DataColumn("ActiveIngredient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActiveIngredient);
                this.columnIndication = new global::System.Data.DataColumn("Indication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndication);
                this.columnContraindication = new global::System.Data.DataColumn("Contraindication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContraindication);
                this.columnPrecaution_Warn = new global::System.Data.DataColumn("Precaution_Warn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecaution_Warn);
                this.columnSideEffects = new global::System.Data.DataColumn("SideEffects", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSideEffects);
                this.columnInteraction = new global::System.Data.DataColumn("Interaction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInteraction);
                this.columnAdvTimeBeforeExpire = new global::System.Data.DataColumn("AdvTimeBeforeExpire", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvTimeBeforeExpire);
                this.columnIsConsult = new global::System.Data.DataColumn("IsConsult", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsConsult);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnUnitCode = new global::System.Data.DataColumn("UnitCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCode);
                this.columnCountryName = new global::System.Data.DataColumn("CountryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryName);
                this.columnCountryCode = new global::System.Data.DataColumn("CountryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryCode);
                this.columnUnitUse = new global::System.Data.DataColumn("UnitUse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitUse);
                this.columnUnitUseID_Code = new global::System.Data.DataColumn("UnitUseID_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitUseID_Code);
                this.columnFactorSafety = new global::System.Data.DataColumn("FactorSafety", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactorSafety);
                this.columnRefGenDrugCatID_1 = new global::System.Data.DataColumn("RefGenDrugCatID_1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefGenDrugCatID_1);
                this.columnActiveIngredientCode = new global::System.Data.DataColumn("ActiveIngredientCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActiveIngredientCode);
                this.columnProductCodeRefNum = new global::System.Data.DataColumn("ProductCodeRefNum", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductCodeRefNum);
                this.columnHosID = new global::System.Data.DataColumn("HosID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHosID);
                this.columnKeepRefrigerated = new global::System.Data.DataColumn("KeepRefrigerated", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKeepRefrigerated);
                this.columnDrugClassID = new global::System.Data.DataColumn("DrugClassID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugClassID);
                this.columnPCOName = new global::System.Data.DataColumn("PCOName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCOName);
                this.columnFaName = new global::System.Data.DataColumn("FaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaName);
                this.columnRefGenDrugBHYT_CatID = new global::System.Data.DataColumn("RefGenDrugBHYT_CatID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefGenDrugBHYT_CatID);
                this.columnCategoryName = new global::System.Data.DataColumn("CategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryName);
                this.columnCategoryDescription = new global::System.Data.DataColumn("CategoryDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategoryDescription);
                this.columnIngredientOrderNo = new global::System.Data.DataColumn("IngredientOrderNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIngredientOrderNo);
                this.columnDrugOrderNo = new global::System.Data.DataColumn("DrugOrderNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugOrderNo);
                this.columnGroupParentID = new global::System.Data.DataColumn("GroupParentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupParentID);
                this.columnGroupID = new global::System.Data.DataColumn("GroupID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupID);
                this.columnShelfName = new global::System.Data.DataColumn("ShelfName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShelfName);
                this.columnHosName = new global::System.Data.DataColumn("HosName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHosName);
                this.columnHospitalCode = new global::System.Data.DataColumn("HospitalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHospitalCode);
                this.columnHosShortName = new global::System.Data.DataColumn("HosShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHosShortName);
                this.columnMaxDayPrescribed = new global::System.Data.DataColumn("MaxDayPrescribed", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxDayPrescribed);
                this.columnDispenseVolume = new global::System.Data.DataColumn("DispenseVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispenseVolume);
                this.columnV_MedicalMaterial = new global::System.Data.DataColumn("V_MedicalMaterial", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_MedicalMaterial);
                this.columnRefGenDrugCat_1 = new global::System.Data.DataColumn("RefGenDrugCat_1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefGenDrugCat_1);
                this.columnRefGenDrugCat_2 = new global::System.Data.DataColumn("RefGenDrugCat_2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefGenDrugCat_2);
                this.columnWinningHospitals = new global::System.Data.DataColumn("WinningHospitals", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWinningHospitals);
                this.columnHIPaymentPercent = new global::System.Data.DataColumn("HIPaymentPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPaymentPercent);
                this.columnDosageForm = new global::System.Data.DataColumn("DosageForm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDosageForm);
                this.columnDrugForm = new global::System.Data.DataColumn("DrugForm", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugForm);
                this.columnIsDonatedGoods = new global::System.Data.DataColumn("IsDonatedGoods", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDonatedGoods);
                this.columnMaxQtyHIAllowItem = new global::System.Data.DataColumn("MaxQtyHIAllowItem", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxQtyHIAllowItem);
                this.columnPaymentRateOfHIAddedItem = new global::System.Data.DataColumn("PaymentRateOfHIAddedItem", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaymentRateOfHIAddedItem);
                this.columnDrugDeptProductGroupReportTypeID = new global::System.Data.DataColumn("DrugDeptProductGroupReportTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugDeptProductGroupReportTypeID);
                this.columnV_CatDrugType = new global::System.Data.DataColumn("V_CatDrugType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_CatDrugType);
                this.columnDrugID = new global::System.Data.DataColumn("DrugID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugID);
                this.columnTotalPriceNotVAT = new global::System.Data.DataColumn("TotalPriceNotVAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPriceNotVAT);
                this.columnDiscountingValue = new global::System.Data.DataColumn("DiscountingValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountingValue);
                this.columnTotalPriceHaveDiscounting = new global::System.Data.DataColumn("TotalPriceHaveDiscounting", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPriceHaveDiscounting);
                this.columnInID.AutoIncrement = true;
                this.columnInID.AutoIncrementSeed = -1;
                this.columnInID.AutoIncrementStep = -1;
                this.columnInID.AllowDBNull = false;
                this.columnInID.ReadOnly = true;
                this.columnInBatchNumber.MaxLength = 15;
                this.columnInQuantity.AllowDBNull = false;
                this.columnInBuyingPrice.AllowDBNull = false;
                this.columnHIPatientPrice.AllowDBNull = false;
                this.columnRemaining.AllowDBNull = false;
                this.columnV_GoodsType.AllowDBNull = false;
                this.columnDiscounting.AllowDBNull = false;
                this.columnDiscountByPercent.AllowDBNull = false;
                this.columnIsBeginStockTakePeriod.AllowDBNull = false;
                this.columnIsEndStockTakePeriod.AllowDBNull = false;
                this.columnPackagePrice.AllowDBNull = false;
                this.columnPackageQuantity.AllowDBNull = false;
                this.columnGoodsTypeName.ReadOnly = true;
                this.columnGoodsTypeName.MaxLength = 125;
                this.columnSdlDescription.MaxLength = 512;
                this.columnPriceForHIPatient.AllowDBNull = false;
                this.columnBrandName.MaxLength = 512;
                this.columnGenericName.MaxLength = 256;
                this.columnCode.MaxLength = 20;
                this.columnHICode.MaxLength = 20;
                this.columnFunctions.MaxLength = 512;
                this.columnTechInfo.MaxLength = 128;
                this.columnMaterial.MaxLength = 50;
                this.columnVisa.MaxLength = 20;
                this.columnPackaging.MaxLength = 50;
                this.columnDescription.MaxLength = 2048;
                this.columnAdministration.MaxLength = 128;
                this.columnContent.MaxLength = 1024;
                this.columnDosage.MaxLength = 512;
                this.columnComposition.MaxLength = 128;
                this.columnActiveIngredient.MaxLength = 128;
                this.columnIndication.MaxLength = 128;
                this.columnContraindication.MaxLength = 756;
                this.columnPrecaution_Warn.MaxLength = 512;
                this.columnSideEffects.MaxLength = 255;
                this.columnInteraction.MaxLength = 512;
                this.columnUnitName.MaxLength = 64;
                this.columnUnitCode.MaxLength = 20;
                this.columnCountryName.MaxLength = 128;
                this.columnCountryCode.MaxLength = 3;
                this.columnUnitUse.MaxLength = 64;
                this.columnUnitUseID_Code.MaxLength = 20;
                this.columnActiveIngredientCode.MaxLength = 20;
                this.columnProductCodeRefNum.MaxLength = 50;
                this.columnPCOName.MaxLength = 128;
                this.columnFaName.MaxLength = 128;
                this.columnCategoryName.MaxLength = 256;
                this.columnCategoryDescription.MaxLength = 256;
                this.columnDrugOrderNo.MaxLength = 100;
                this.columnShelfName.MaxLength = 128;
                this.columnHosName.MaxLength = 128;
                this.columnHospitalCode.MaxLength = 9;
                this.columnHosShortName.MaxLength = 16;
                this.columnRefGenDrugCat_1.MaxLength = 100;
                this.columnRefGenDrugCat_2.MaxLength = 100;
                this.columnWinningHospitals.MaxLength = 1024;
                this.columnDosageForm.MaxLength = 40;
                this.columnDrugForm.MaxLength = 100;
                this.columnDrugDeptProductGroupReportTypeID.ReadOnly = true;
                this.columnTotalPriceNotVAT.AllowDBNull = false;
                this.columnDiscountingValue.ReadOnly = true;
                this.columnTotalPriceHaveDiscounting.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBlood_ByIDRow NewspRpt_InwardBlood_ByIDRow() {
                return ((spRpt_InwardBlood_ByIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRpt_InwardBlood_ByIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRpt_InwardBlood_ByIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRpt_InwardBlood_ByIDRowChanged != null)) {
                    this.spRpt_InwardBlood_ByIDRowChanged(this, new spRpt_InwardBlood_ByIDRowChangeEvent(((spRpt_InwardBlood_ByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRpt_InwardBlood_ByIDRowChanging != null)) {
                    this.spRpt_InwardBlood_ByIDRowChanging(this, new spRpt_InwardBlood_ByIDRowChangeEvent(((spRpt_InwardBlood_ByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRpt_InwardBlood_ByIDRowDeleted != null)) {
                    this.spRpt_InwardBlood_ByIDRowDeleted(this, new spRpt_InwardBlood_ByIDRowChangeEvent(((spRpt_InwardBlood_ByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRpt_InwardBlood_ByIDRowDeleting != null)) {
                    this.spRpt_InwardBlood_ByIDRowDeleting(this, new spRpt_InwardBlood_ByIDRowChangeEvent(((spRpt_InwardBlood_ByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemovespRpt_InwardBlood_ByIDRow(spRpt_InwardBlood_ByIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsInwardBloodSupplier ds = new dsInwardBloodSupplier();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRpt_InwardBlood_ByIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRpt_InwardBloodInvoice_ByIDDataTable : global::System.Data.TypedTableBase<spRpt_InwardBloodInvoice_ByIDRow> {
            
            private global::System.Data.DataColumn columninviID;
            
            private global::System.Data.DataColumn columnStaffID;
            
            private global::System.Data.DataColumn columnInvID;
            
            private global::System.Data.DataColumn columnInvInvoiceNumber;
            
            private global::System.Data.DataColumn columnInvDateInvoice;
            
            private global::System.Data.DataColumn columnDSPTModifiedDate;
            
            private global::System.Data.DataColumn columnTempRequireUpdate;
            
            private global::System.Data.DataColumn columnCustomTax;
            
            private global::System.Data.DataColumn columnVAT;
            
            private global::System.Data.DataColumn columnCurrencyID;
            
            private global::System.Data.DataColumn columnCurrencyName;
            
            private global::System.Data.DataColumn columnExchangeRates;
            
            private global::System.Data.DataColumn columnIsForeign;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnDiscounting;
            
            private global::System.Data.DataColumn columnDiscountByPercent;
            
            private global::System.Data.DataColumn columnIsPercent;
            
            private global::System.Data.DataColumn columnCheckedPoint;
            
            private global::System.Data.DataColumn columnStoreID;
            
            private global::System.Data.DataColumn columnswhlName;
            
            private global::System.Data.DataColumn columnSupplierCode;
            
            private global::System.Data.DataColumn columnSupplierID;
            
            private global::System.Data.DataColumn columnSupplierName;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnTotalNotVAT;
            
            private global::System.Data.DataColumn columnDiscountingOnProduct;
            
            private global::System.Data.DataColumn columnswhlNameOut;
            
            private global::System.Data.DataColumn columnOutInvID;
            
            private global::System.Data.DataColumn columnDifferenceValue;
            
            private global::System.Data.DataColumn columnTotalVATDifferenceAmount;
            
            private global::System.Data.DataColumn columnStaffXuat;
            
            private global::System.Data.DataColumn columnSerialNumber;
            
            private global::System.Data.DataColumn columnDiscountingPercentInvoice;
            
            private global::System.Data.DataColumn columnDiscountingInvoice;
            
            private global::System.Data.DataColumn columnTotalHaveDicounting;
            
            private global::System.Data.DataColumn columnVATValueInvoice;
            
            private global::System.Data.DataColumn columnMaDonHang;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBloodInvoice_ByIDDataTable() {
                this.TableName = "spRpt_InwardBloodInvoice_ByID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spRpt_InwardBloodInvoice_ByIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected spRpt_InwardBloodInvoice_ByIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn inviIDColumn {
                get {
                    return this.columninviID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StaffIDColumn {
                get {
                    return this.columnStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InvIDColumn {
                get {
                    return this.columnInvID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InvInvoiceNumberColumn {
                get {
                    return this.columnInvInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InvDateInvoiceColumn {
                get {
                    return this.columnInvDateInvoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DSPTModifiedDateColumn {
                get {
                    return this.columnDSPTModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TempRequireUpdateColumn {
                get {
                    return this.columnTempRequireUpdate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CustomTaxColumn {
                get {
                    return this.columnCustomTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VATColumn {
                get {
                    return this.columnVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CurrencyIDColumn {
                get {
                    return this.columnCurrencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CurrencyNameColumn {
                get {
                    return this.columnCurrencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ExchangeRatesColumn {
                get {
                    return this.columnExchangeRates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsForeignColumn {
                get {
                    return this.columnIsForeign;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiscountingColumn {
                get {
                    return this.columnDiscounting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiscountByPercentColumn {
                get {
                    return this.columnDiscountByPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsPercentColumn {
                get {
                    return this.columnIsPercent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CheckedPointColumn {
                get {
                    return this.columnCheckedPoint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StoreIDColumn {
                get {
                    return this.columnStoreID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn swhlNameColumn {
                get {
                    return this.columnswhlName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SupplierCodeColumn {
                get {
                    return this.columnSupplierCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SupplierIDColumn {
                get {
                    return this.columnSupplierID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SupplierNameColumn {
                get {
                    return this.columnSupplierName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalNotVATColumn {
                get {
                    return this.columnTotalNotVAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiscountingOnProductColumn {
                get {
                    return this.columnDiscountingOnProduct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn swhlNameOutColumn {
                get {
                    return this.columnswhlNameOut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutInvIDColumn {
                get {
                    return this.columnOutInvID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DifferenceValueColumn {
                get {
                    return this.columnDifferenceValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalVATDifferenceAmountColumn {
                get {
                    return this.columnTotalVATDifferenceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StaffXuatColumn {
                get {
                    return this.columnStaffXuat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SerialNumberColumn {
                get {
                    return this.columnSerialNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiscountingPercentInvoiceColumn {
                get {
                    return this.columnDiscountingPercentInvoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiscountingInvoiceColumn {
                get {
                    return this.columnDiscountingInvoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TotalHaveDicountingColumn {
                get {
                    return this.columnTotalHaveDicounting;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn VATValueInvoiceColumn {
                get {
                    return this.columnVATValueInvoice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MaDonHangColumn {
                get {
                    return this.columnMaDonHang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBloodInvoice_ByIDRow this[int index] {
                get {
                    return ((spRpt_InwardBloodInvoice_ByIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRpt_InwardBloodInvoice_ByIDRowChangeEventHandler spRpt_InwardBloodInvoice_ByIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRpt_InwardBloodInvoice_ByIDRowChangeEventHandler spRpt_InwardBloodInvoice_ByIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRpt_InwardBloodInvoice_ByIDRowChangeEventHandler spRpt_InwardBloodInvoice_ByIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRpt_InwardBloodInvoice_ByIDRowChangeEventHandler spRpt_InwardBloodInvoice_ByIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddspRpt_InwardBloodInvoice_ByIDRow(spRpt_InwardBloodInvoice_ByIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBloodInvoice_ByIDRow AddspRpt_InwardBloodInvoice_ByIDRow(
                        long StaffID, 
                        string InvID, 
                        string InvInvoiceNumber, 
                        System.DateTime InvDateInvoice, 
                        System.DateTime DSPTModifiedDate, 
                        bool TempRequireUpdate, 
                        decimal CustomTax, 
                        double VAT, 
                        long CurrencyID, 
                        string CurrencyName, 
                        double ExchangeRates, 
                        bool IsForeign, 
                        string Notes, 
                        decimal Discounting, 
                        double DiscountByPercent, 
                        bool IsPercent, 
                        bool CheckedPoint, 
                        long StoreID, 
                        string swhlName, 
                        string SupplierCode, 
                        string SupplierName, 
                        string FullName, 
                        decimal TotalNotVAT, 
                        decimal DiscountingOnProduct, 
                        string swhlNameOut, 
                        string OutInvID, 
                        decimal DifferenceValue, 
                        decimal TotalVATDifferenceAmount, 
                        string StaffXuat, 
                        string SerialNumber, 
                        decimal DiscountingPercentInvoice, 
                        decimal DiscountingInvoice, 
                        decimal TotalHaveDicounting, 
                        double VATValueInvoice, 
                        string MaDonHang) {
                spRpt_InwardBloodInvoice_ByIDRow rowspRpt_InwardBloodInvoice_ByIDRow = ((spRpt_InwardBloodInvoice_ByIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        StaffID,
                        InvID,
                        InvInvoiceNumber,
                        InvDateInvoice,
                        DSPTModifiedDate,
                        TempRequireUpdate,
                        CustomTax,
                        VAT,
                        CurrencyID,
                        CurrencyName,
                        ExchangeRates,
                        IsForeign,
                        Notes,
                        Discounting,
                        DiscountByPercent,
                        IsPercent,
                        CheckedPoint,
                        StoreID,
                        swhlName,
                        SupplierCode,
                        null,
                        SupplierName,
                        FullName,
                        TotalNotVAT,
                        DiscountingOnProduct,
                        swhlNameOut,
                        OutInvID,
                        DifferenceValue,
                        TotalVATDifferenceAmount,
                        StaffXuat,
                        SerialNumber,
                        DiscountingPercentInvoice,
                        DiscountingInvoice,
                        TotalHaveDicounting,
                        VATValueInvoice,
                        MaDonHang};
                rowspRpt_InwardBloodInvoice_ByIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRpt_InwardBloodInvoice_ByIDRow);
                return rowspRpt_InwardBloodInvoice_ByIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRpt_InwardBloodInvoice_ByIDDataTable cln = ((spRpt_InwardBloodInvoice_ByIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRpt_InwardBloodInvoice_ByIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columninviID = base.Columns["inviID"];
                this.columnStaffID = base.Columns["StaffID"];
                this.columnInvID = base.Columns["InvID"];
                this.columnInvInvoiceNumber = base.Columns["InvInvoiceNumber"];
                this.columnInvDateInvoice = base.Columns["InvDateInvoice"];
                this.columnDSPTModifiedDate = base.Columns["DSPTModifiedDate"];
                this.columnTempRequireUpdate = base.Columns["TempRequireUpdate"];
                this.columnCustomTax = base.Columns["CustomTax"];
                this.columnVAT = base.Columns["VAT"];
                this.columnCurrencyID = base.Columns["CurrencyID"];
                this.columnCurrencyName = base.Columns["CurrencyName"];
                this.columnExchangeRates = base.Columns["ExchangeRates"];
                this.columnIsForeign = base.Columns["IsForeign"];
                this.columnNotes = base.Columns["Notes"];
                this.columnDiscounting = base.Columns["Discounting"];
                this.columnDiscountByPercent = base.Columns["DiscountByPercent"];
                this.columnIsPercent = base.Columns["IsPercent"];
                this.columnCheckedPoint = base.Columns["CheckedPoint"];
                this.columnStoreID = base.Columns["StoreID"];
                this.columnswhlName = base.Columns["swhlName"];
                this.columnSupplierCode = base.Columns["SupplierCode"];
                this.columnSupplierID = base.Columns["SupplierID"];
                this.columnSupplierName = base.Columns["SupplierName"];
                this.columnFullName = base.Columns["FullName"];
                this.columnTotalNotVAT = base.Columns["TotalNotVAT"];
                this.columnDiscountingOnProduct = base.Columns["DiscountingOnProduct"];
                this.columnswhlNameOut = base.Columns["swhlNameOut"];
                this.columnOutInvID = base.Columns["OutInvID"];
                this.columnDifferenceValue = base.Columns["DifferenceValue"];
                this.columnTotalVATDifferenceAmount = base.Columns["TotalVATDifferenceAmount"];
                this.columnStaffXuat = base.Columns["StaffXuat"];
                this.columnSerialNumber = base.Columns["SerialNumber"];
                this.columnDiscountingPercentInvoice = base.Columns["DiscountingPercentInvoice"];
                this.columnDiscountingInvoice = base.Columns["DiscountingInvoice"];
                this.columnTotalHaveDicounting = base.Columns["TotalHaveDicounting"];
                this.columnVATValueInvoice = base.Columns["VATValueInvoice"];
                this.columnMaDonHang = base.Columns["MaDonHang"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columninviID = new global::System.Data.DataColumn("inviID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninviID);
                this.columnStaffID = new global::System.Data.DataColumn("StaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID);
                this.columnInvID = new global::System.Data.DataColumn("InvID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvID);
                this.columnInvInvoiceNumber = new global::System.Data.DataColumn("InvInvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvInvoiceNumber);
                this.columnInvDateInvoice = new global::System.Data.DataColumn("InvDateInvoice", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvDateInvoice);
                this.columnDSPTModifiedDate = new global::System.Data.DataColumn("DSPTModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDSPTModifiedDate);
                this.columnTempRequireUpdate = new global::System.Data.DataColumn("TempRequireUpdate", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempRequireUpdate);
                this.columnCustomTax = new global::System.Data.DataColumn("CustomTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomTax);
                this.columnVAT = new global::System.Data.DataColumn("VAT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT);
                this.columnCurrencyID = new global::System.Data.DataColumn("CurrencyID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyID);
                this.columnCurrencyName = new global::System.Data.DataColumn("CurrencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrencyName);
                this.columnExchangeRates = new global::System.Data.DataColumn("ExchangeRates", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExchangeRates);
                this.columnIsForeign = new global::System.Data.DataColumn("IsForeign", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsForeign);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnDiscounting = new global::System.Data.DataColumn("Discounting", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscounting);
                this.columnDiscountByPercent = new global::System.Data.DataColumn("DiscountByPercent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountByPercent);
                this.columnIsPercent = new global::System.Data.DataColumn("IsPercent", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPercent);
                this.columnCheckedPoint = new global::System.Data.DataColumn("CheckedPoint", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckedPoint);
                this.columnStoreID = new global::System.Data.DataColumn("StoreID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreID);
                this.columnswhlName = new global::System.Data.DataColumn("swhlName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnswhlName);
                this.columnSupplierCode = new global::System.Data.DataColumn("SupplierCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierCode);
                this.columnSupplierID = new global::System.Data.DataColumn("SupplierID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierID);
                this.columnSupplierName = new global::System.Data.DataColumn("SupplierName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupplierName);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnTotalNotVAT = new global::System.Data.DataColumn("TotalNotVAT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalNotVAT);
                this.columnDiscountingOnProduct = new global::System.Data.DataColumn("DiscountingOnProduct", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountingOnProduct);
                this.columnswhlNameOut = new global::System.Data.DataColumn("swhlNameOut", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnswhlNameOut);
                this.columnOutInvID = new global::System.Data.DataColumn("OutInvID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutInvID);
                this.columnDifferenceValue = new global::System.Data.DataColumn("DifferenceValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDifferenceValue);
                this.columnTotalVATDifferenceAmount = new global::System.Data.DataColumn("TotalVATDifferenceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalVATDifferenceAmount);
                this.columnStaffXuat = new global::System.Data.DataColumn("StaffXuat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffXuat);
                this.columnSerialNumber = new global::System.Data.DataColumn("SerialNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerialNumber);
                this.columnDiscountingPercentInvoice = new global::System.Data.DataColumn("DiscountingPercentInvoice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountingPercentInvoice);
                this.columnDiscountingInvoice = new global::System.Data.DataColumn("DiscountingInvoice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscountingInvoice);
                this.columnTotalHaveDicounting = new global::System.Data.DataColumn("TotalHaveDicounting", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHaveDicounting);
                this.columnVATValueInvoice = new global::System.Data.DataColumn("VATValueInvoice", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVATValueInvoice);
                this.columnMaDonHang = new global::System.Data.DataColumn("MaDonHang", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaDonHang);
                this.columninviID.AutoIncrement = true;
                this.columninviID.AutoIncrementSeed = -1;
                this.columninviID.AutoIncrementStep = -1;
                this.columninviID.AllowDBNull = false;
                this.columninviID.ReadOnly = true;
                this.columnInvID.AllowDBNull = false;
                this.columnInvID.MaxLength = 15;
                this.columnInvInvoiceNumber.AllowDBNull = false;
                this.columnInvInvoiceNumber.MaxLength = 50;
                this.columnInvDateInvoice.AllowDBNull = false;
                this.columnDSPTModifiedDate.AllowDBNull = false;
                this.columnTempRequireUpdate.AllowDBNull = false;
                this.columnCustomTax.AllowDBNull = false;
                this.columnVAT.ReadOnly = true;
                this.columnCurrencyName.MaxLength = 50;
                this.columnNotes.MaxLength = 256;
                this.columnDiscounting.AllowDBNull = false;
                this.columnDiscountByPercent.AllowDBNull = false;
                this.columnCheckedPoint.AllowDBNull = false;
                this.columnStoreID.AllowDBNull = false;
                this.columnswhlName.AllowDBNull = false;
                this.columnswhlName.MaxLength = 128;
                this.columnSupplierCode.MaxLength = 100;
                this.columnSupplierID.AutoIncrement = true;
                this.columnSupplierID.AutoIncrementSeed = -1;
                this.columnSupplierID.AutoIncrementStep = -1;
                this.columnSupplierID.ReadOnly = true;
                this.columnSupplierName.MaxLength = 128;
                this.columnFullName.MaxLength = 65;
                this.columnTotalNotVAT.ReadOnly = true;
                this.columnDiscountingOnProduct.ReadOnly = true;
                this.columnswhlNameOut.MaxLength = 128;
                this.columnOutInvID.MaxLength = 15;
                this.columnDifferenceValue.AllowDBNull = false;
                this.columnTotalVATDifferenceAmount.AllowDBNull = false;
                this.columnStaffXuat.ReadOnly = true;
                this.columnStaffXuat.MaxLength = 65;
                this.columnSerialNumber.MaxLength = 20;
                this.columnDiscountingPercentInvoice.ReadOnly = true;
                this.columnDiscountingInvoice.ReadOnly = true;
                this.columnTotalHaveDicounting.ReadOnly = true;
                this.columnVATValueInvoice.ReadOnly = true;
                this.columnMaDonHang.ReadOnly = true;
                this.columnMaDonHang.MaxLength = 8000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBloodInvoice_ByIDRow NewspRpt_InwardBloodInvoice_ByIDRow() {
                return ((spRpt_InwardBloodInvoice_ByIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRpt_InwardBloodInvoice_ByIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRpt_InwardBloodInvoice_ByIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRpt_InwardBloodInvoice_ByIDRowChanged != null)) {
                    this.spRpt_InwardBloodInvoice_ByIDRowChanged(this, new spRpt_InwardBloodInvoice_ByIDRowChangeEvent(((spRpt_InwardBloodInvoice_ByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRpt_InwardBloodInvoice_ByIDRowChanging != null)) {
                    this.spRpt_InwardBloodInvoice_ByIDRowChanging(this, new spRpt_InwardBloodInvoice_ByIDRowChangeEvent(((spRpt_InwardBloodInvoice_ByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRpt_InwardBloodInvoice_ByIDRowDeleted != null)) {
                    this.spRpt_InwardBloodInvoice_ByIDRowDeleted(this, new spRpt_InwardBloodInvoice_ByIDRowChangeEvent(((spRpt_InwardBloodInvoice_ByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRpt_InwardBloodInvoice_ByIDRowDeleting != null)) {
                    this.spRpt_InwardBloodInvoice_ByIDRowDeleting(this, new spRpt_InwardBloodInvoice_ByIDRowChangeEvent(((spRpt_InwardBloodInvoice_ByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemovespRpt_InwardBloodInvoice_ByIDRow(spRpt_InwardBloodInvoice_ByIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsInwardBloodSupplier ds = new dsInwardBloodSupplier();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRpt_InwardBloodInvoice_ByIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRpt_InwardBlood_ByIDRow : global::System.Data.DataRow {
            
            private spRpt_InwardBlood_ByIDDataTable tablespRpt_InwardBlood_ByID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spRpt_InwardBlood_ByIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRpt_InwardBlood_ByID = ((spRpt_InwardBlood_ByIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long InID {
                get {
                    return ((long)(this[this.tablespRpt_InwardBlood_ByID.InIDColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.InIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long SdlID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.SdlIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SdlID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.SdlIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long StaffID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.StaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.StaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long inviID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.inviIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inviID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.inviIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InBatchNumber {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.InBatchNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InBatchNumber\' in table \'spRpt_InwardBlood_ByID\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.InBatchNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime InProductionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRpt_InwardBlood_ByID.InProductionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InProductionDate\' in table \'spRpt_InwardBlood_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.InProductionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime InExpiryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRpt_InwardBlood_ByID.InExpiryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InExpiryDate\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.InExpiryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int InQuantity {
                get {
                    return ((int)(this[this.tablespRpt_InwardBlood_ByID.InQuantityColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.InQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal InBuyingPrice {
                get {
                    return ((decimal)(this[this.tablespRpt_InwardBlood_ByID.InBuyingPriceColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.InBuyingPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal InCost {
                get {
                    try {
                        return ((decimal)(this[this.tablespRpt_InwardBlood_ByID.InCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InCost\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.InCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal NormalPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablespRpt_InwardBlood_ByID.NormalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NormalPrice\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.NormalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal HIPatientPrice {
                get {
                    return ((decimal)(this[this.tablespRpt_InwardBlood_ByID.HIPatientPriceColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.HIPatientPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal HIAllowedPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablespRpt_InwardBlood_ByID.HIAllowedPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIAllowedPrice\' in table \'spRpt_InwardBlood_ByID\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.HIAllowedPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Remaining {
                get {
                    return ((int)(this[this.tablespRpt_InwardBlood_ByID.RemainingColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.RemainingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPercentage {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_InwardBlood_ByID.IsPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPercentage\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.IsPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_GoodsType {
                get {
                    return ((long)(this[this.tablespRpt_InwardBlood_ByID.V_GoodsTypeColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.V_GoodsTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long DrugDeptPoDetailID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.DrugDeptPoDetailIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugDeptPoDetailID\' in table \'spRpt_InwardBlood_ByID\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DrugDeptPoDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Discounting {
                get {
                    return ((decimal)(this[this.tablespRpt_InwardBlood_ByID.DiscountingColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DiscountingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double DiscountByPercent {
                get {
                    return ((double)(this[this.tablespRpt_InwardBlood_ByID.DiscountByPercentColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DiscountByPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPercent {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_InwardBlood_ByID.IsPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPercent\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.IsPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBeginStockTakePeriod {
                get {
                    return ((bool)(this[this.tablespRpt_InwardBlood_ByID.IsBeginStockTakePeriodColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.IsBeginStockTakePeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEndStockTakePeriod {
                get {
                    return ((bool)(this[this.tablespRpt_InwardBlood_ByID.IsEndStockTakePeriodColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.IsEndStockTakePeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long InIDOriginal {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.InIDOriginalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InIDOriginal\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.InIDOriginalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool NoPrint {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_InwardBlood_ByID.NoPrintColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoPrint\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.NoPrintColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal PackagePrice {
                get {
                    return ((decimal)(this[this.tablespRpt_InwardBlood_ByID.PackagePriceColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.PackagePriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double PackageQuantity {
                get {
                    return ((double)(this[this.tablespRpt_InwardBlood_ByID.PackageQuantityColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.PackageQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitPackage {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_InwardBlood_ByID.IsUnitPackageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsUnitPackage\' in table \'spRpt_InwardBlood_ByID\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.IsUnitPackageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GoodsTypeName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.GoodsTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GoodsTypeName\' in table \'spRpt_InwardBlood_ByID\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.GoodsTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SdlDescription {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.SdlDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SdlDescription\' in table \'spRpt_InwardBlood_ByID\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.SdlDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal PriceForHIPatient {
                get {
                    return ((decimal)(this[this.tablespRpt_InwardBlood_ByID.PriceForHIPatientColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.PriceForHIPatientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long GenMedProductID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.GenMedProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenMedProductID\' in table \'spRpt_InwardBlood_ByID\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.GenMedProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BrandName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.BrandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandName\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GenericName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.GenericNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenericName\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.GenericNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HICode {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.HICodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HICode\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.HICodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Functions {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.FunctionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Functions\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.FunctionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TechInfo {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.TechInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechInfo\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.TechInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Material {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.MaterialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Material\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.MaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Visa {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.VisaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Visa\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.VisaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long PCOID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.PCOIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCOID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.PCOIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long CountryID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.CountryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Packaging {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.PackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Packaging\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.PackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long UnitID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long UnitUseID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.UnitUseIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitUseID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.UnitUseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int UnitPackaging {
                get {
                    try {
                        return ((int)(this[this.tablespRpt_InwardBlood_ByID.UnitPackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPackaging\' in table \'spRpt_InwardBlood_ByID\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.UnitPackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Administration {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.AdministrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Administration\' in table \'spRpt_InwardBlood_ByID\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.AdministrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool InsuranceCover {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_InwardBlood_ByID.InsuranceCoverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceCover\' in table \'spRpt_InwardBlood_ByID\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.InsuranceCoverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsActive {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_InwardBlood_ByID.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_MedProductType {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.V_MedProductTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_MedProductType\' in table \'spRpt_InwardBlood_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.V_MedProductTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double NumberOfEstimatedMonths {
                get {
                    try {
                        return ((double)(this[this.tablespRpt_InwardBlood_ByID.NumberOfEstimatedMonthsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfEstimatedMonths\' in table \'spRpt_InwardBlood_ByID\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.NumberOfEstimatedMonthsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long MedGenDrugID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.MedGenDrugIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedGenDrugID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.MedGenDrugIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Content {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.ContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Content\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.ContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Dosage {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.DosageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dosage\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DosageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Composition {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.CompositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Composition\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.CompositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ActiveIngredient {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.ActiveIngredientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActiveIngredient\' in table \'spRpt_InwardBlood_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.ActiveIngredientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Indication {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.IndicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Indication\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.IndicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Contraindication {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.ContraindicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contraindication\' in table \'spRpt_InwardBlood_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.ContraindicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Precaution_Warn {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.Precaution_WarnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Precaution_Warn\' in table \'spRpt_InwardBlood_ByID\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.Precaution_WarnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SideEffects {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.SideEffectsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SideEffects\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.SideEffectsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Interaction {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.InteractionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Interaction\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.InteractionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int AdvTimeBeforeExpire {
                get {
                    try {
                        return ((int)(this[this.tablespRpt_InwardBlood_ByID.AdvTimeBeforeExpireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvTimeBeforeExpire\' in table \'spRpt_InwardBlood_ByID\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.AdvTimeBeforeExpireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConsult {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_InwardBlood_ByID.IsConsultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsConsult\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.IsConsultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitName\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UnitCode {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.UnitCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitCode\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.UnitCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CountryName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.CountryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryName\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.CountryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CountryCode {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.CountryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryCode\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.CountryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UnitUse {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.UnitUseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitUse\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.UnitUseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UnitUseID_Code {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.UnitUseID_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitUseID_Code\' in table \'spRpt_InwardBlood_ByID\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.UnitUseID_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int FactorSafety {
                get {
                    try {
                        return ((int)(this[this.tablespRpt_InwardBlood_ByID.FactorSafetyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactorSafety\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.FactorSafetyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long RefGenDrugCatID_1 {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.RefGenDrugCatID_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefGenDrugCatID_1\' in table \'spRpt_InwardBlood_ByID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.RefGenDrugCatID_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ActiveIngredientCode {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.ActiveIngredientCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActiveIngredientCode\' in table \'spRpt_InwardBlood_ByID\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.ActiveIngredientCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProductCodeRefNum {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.ProductCodeRefNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductCodeRefNum\' in table \'spRpt_InwardBlood_ByID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.ProductCodeRefNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long HosID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.HosIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HosID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.HosIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool KeepRefrigerated {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_InwardBlood_ByID.KeepRefrigeratedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'KeepRefrigerated\' in table \'spRpt_InwardBlood_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.KeepRefrigeratedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long DrugClassID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.DrugClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugClassID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DrugClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PCOName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.PCONameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCOName\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.PCONameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FaName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.FaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FaName\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.FaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long RefGenDrugBHYT_CatID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.RefGenDrugBHYT_CatIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefGenDrugBHYT_CatID\' in table \'spRpt_InwardBlood_ByID\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.RefGenDrugBHYT_CatIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CategoryName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.CategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryName\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.CategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CategoryDescription {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.CategoryDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CategoryDescription\' in table \'spRpt_InwardBlood_ByID\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.CategoryDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long IngredientOrderNo {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.IngredientOrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IngredientOrderNo\' in table \'spRpt_InwardBlood_ByID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.IngredientOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DrugOrderNo {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.DrugOrderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugOrderNo\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DrugOrderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long GroupParentID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.GroupParentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupParentID\' in table \'spRpt_InwardBlood_ByID\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.GroupParentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long GroupID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.GroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GroupID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.GroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ShelfName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.ShelfNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShelfName\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.ShelfNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HosName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.HosNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HosName\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.HosNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HospitalCode {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.HospitalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HospitalCode\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.HospitalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HosShortName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.HosShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HosShortName\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.HosShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short MaxDayPrescribed {
                get {
                    try {
                        return ((short)(this[this.tablespRpt_InwardBlood_ByID.MaxDayPrescribedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxDayPrescribed\' in table \'spRpt_InwardBlood_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.MaxDayPrescribedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double DispenseVolume {
                get {
                    try {
                        return ((double)(this[this.tablespRpt_InwardBlood_ByID.DispenseVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DispenseVolume\' in table \'spRpt_InwardBlood_ByID\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DispenseVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_MedicalMaterial {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.V_MedicalMaterialColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_MedicalMaterial\' in table \'spRpt_InwardBlood_ByID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.V_MedicalMaterialColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RefGenDrugCat_1 {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.RefGenDrugCat_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefGenDrugCat_1\' in table \'spRpt_InwardBlood_ByID\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.RefGenDrugCat_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string RefGenDrugCat_2 {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.RefGenDrugCat_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefGenDrugCat_2\' in table \'spRpt_InwardBlood_ByID\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.RefGenDrugCat_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WinningHospitals {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.WinningHospitalsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WinningHospitals\' in table \'spRpt_InwardBlood_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.WinningHospitalsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double HIPaymentPercent {
                get {
                    try {
                        return ((double)(this[this.tablespRpt_InwardBlood_ByID.HIPaymentPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIPaymentPercent\' in table \'spRpt_InwardBlood_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.HIPaymentPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DosageForm {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.DosageFormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DosageForm\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DosageFormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DrugForm {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBlood_ByID.DrugFormColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugForm\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DrugFormColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDonatedGoods {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_InwardBlood_ByID.IsDonatedGoodsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDonatedGoods\' in table \'spRpt_InwardBlood_ByID\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.IsDonatedGoodsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int MaxQtyHIAllowItem {
                get {
                    try {
                        return ((int)(this[this.tablespRpt_InwardBlood_ByID.MaxQtyHIAllowItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxQtyHIAllowItem\' in table \'spRpt_InwardBlood_ByID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.MaxQtyHIAllowItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double PaymentRateOfHIAddedItem {
                get {
                    try {
                        return ((double)(this[this.tablespRpt_InwardBlood_ByID.PaymentRateOfHIAddedItemColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaymentRateOfHIAddedItem\' in table \'spRpt_InwardBlood_ByID\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.PaymentRateOfHIAddedItemColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long DrugDeptProductGroupReportTypeID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.DrugDeptProductGroupReportTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugDeptProductGroupReportTypeID\' in table \'spRpt_InwardBlo" +
                                "od_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DrugDeptProductGroupReportTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_CatDrugType {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.V_CatDrugTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_CatDrugType\' in table \'spRpt_InwardBlood_ByID\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.V_CatDrugTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long DrugID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBlood_ByID.DrugIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugID\' in table \'spRpt_InwardBlood_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DrugIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TotalPriceNotVAT {
                get {
                    return ((decimal)(this[this.tablespRpt_InwardBlood_ByID.TotalPriceNotVATColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.TotalPriceNotVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DiscountingValue {
                get {
                    try {
                        return ((decimal)(this[this.tablespRpt_InwardBlood_ByID.DiscountingValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountingValue\' in table \'spRpt_InwardBlood_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.DiscountingValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TotalPriceHaveDiscounting {
                get {
                    try {
                        return ((decimal)(this[this.tablespRpt_InwardBlood_ByID.TotalPriceHaveDiscountingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPriceHaveDiscounting\' in table \'spRpt_InwardBlood_ByID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBlood_ByID.TotalPriceHaveDiscountingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSdlIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.SdlIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSdlIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.SdlIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStaffIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.StaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStaffIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.StaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsinviIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.inviIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetinviIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.inviIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInBatchNumberNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.InBatchNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInBatchNumberNull() {
                this[this.tablespRpt_InwardBlood_ByID.InBatchNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInProductionDateNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.InProductionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInProductionDateNull() {
                this[this.tablespRpt_InwardBlood_ByID.InProductionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInExpiryDateNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.InExpiryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInExpiryDateNull() {
                this[this.tablespRpt_InwardBlood_ByID.InExpiryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInCostNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.InCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInCostNull() {
                this[this.tablespRpt_InwardBlood_ByID.InCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNormalPriceNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.NormalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNormalPriceNull() {
                this[this.tablespRpt_InwardBlood_ByID.NormalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHIAllowedPriceNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.HIAllowedPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHIAllowedPriceNull() {
                this[this.tablespRpt_InwardBlood_ByID.HIAllowedPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsPercentageNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.IsPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsPercentageNull() {
                this[this.tablespRpt_InwardBlood_ByID.IsPercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDrugDeptPoDetailIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.DrugDeptPoDetailIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDrugDeptPoDetailIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.DrugDeptPoDetailIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsPercentNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.IsPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsPercentNull() {
                this[this.tablespRpt_InwardBlood_ByID.IsPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInIDOriginalNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.InIDOriginalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInIDOriginalNull() {
                this[this.tablespRpt_InwardBlood_ByID.InIDOriginalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNoPrintNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.NoPrintColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNoPrintNull() {
                this[this.tablespRpt_InwardBlood_ByID.NoPrintColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsUnitPackageNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.IsUnitPackageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsUnitPackageNull() {
                this[this.tablespRpt_InwardBlood_ByID.IsUnitPackageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGoodsTypeNameNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.GoodsTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGoodsTypeNameNull() {
                this[this.tablespRpt_InwardBlood_ByID.GoodsTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSdlDescriptionNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.SdlDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSdlDescriptionNull() {
                this[this.tablespRpt_InwardBlood_ByID.SdlDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGenMedProductIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.GenMedProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGenMedProductIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.GenMedProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBrandNameNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.BrandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBrandNameNull() {
                this[this.tablespRpt_InwardBlood_ByID.BrandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGenericNameNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.GenericNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGenericNameNull() {
                this[this.tablespRpt_InwardBlood_ByID.GenericNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCodeNull() {
                this[this.tablespRpt_InwardBlood_ByID.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHICodeNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.HICodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHICodeNull() {
                this[this.tablespRpt_InwardBlood_ByID.HICodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFunctionsNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.FunctionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFunctionsNull() {
                this[this.tablespRpt_InwardBlood_ByID.FunctionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTechInfoNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.TechInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTechInfoNull() {
                this[this.tablespRpt_InwardBlood_ByID.TechInfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaterialNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.MaterialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaterialNull() {
                this[this.tablespRpt_InwardBlood_ByID.MaterialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVisaNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.VisaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVisaNull() {
                this[this.tablespRpt_InwardBlood_ByID.VisaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPCOIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.PCOIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPCOIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.PCOIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCountryIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.CountryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCountryIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.CountryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPackagingNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.PackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPackagingNull() {
                this[this.tablespRpt_InwardBlood_ByID.PackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnitIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitUseIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.UnitUseIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnitUseIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.UnitUseIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitPackagingNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.UnitPackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnitPackagingNull() {
                this[this.tablespRpt_InwardBlood_ByID.UnitPackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tablespRpt_InwardBlood_ByID.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAdministrationNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.AdministrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAdministrationNull() {
                this[this.tablespRpt_InwardBlood_ByID.AdministrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInsuranceCoverNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.InsuranceCoverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInsuranceCoverNull() {
                this[this.tablespRpt_InwardBlood_ByID.InsuranceCoverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsActiveNull() {
                this[this.tablespRpt_InwardBlood_ByID.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_MedProductTypeNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.V_MedProductTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_MedProductTypeNull() {
                this[this.tablespRpt_InwardBlood_ByID.V_MedProductTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNumberOfEstimatedMonthsNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.NumberOfEstimatedMonthsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNumberOfEstimatedMonthsNull() {
                this[this.tablespRpt_InwardBlood_ByID.NumberOfEstimatedMonthsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMedGenDrugIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.MedGenDrugIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMedGenDrugIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.MedGenDrugIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsContentNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.ContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetContentNull() {
                this[this.tablespRpt_InwardBlood_ByID.ContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDosageNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.DosageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDosageNull() {
                this[this.tablespRpt_InwardBlood_ByID.DosageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCompositionNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.CompositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCompositionNull() {
                this[this.tablespRpt_InwardBlood_ByID.CompositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsActiveIngredientNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.ActiveIngredientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetActiveIngredientNull() {
                this[this.tablespRpt_InwardBlood_ByID.ActiveIngredientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIndicationNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.IndicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIndicationNull() {
                this[this.tablespRpt_InwardBlood_ByID.IndicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsContraindicationNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.ContraindicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetContraindicationNull() {
                this[this.tablespRpt_InwardBlood_ByID.ContraindicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPrecaution_WarnNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.Precaution_WarnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPrecaution_WarnNull() {
                this[this.tablespRpt_InwardBlood_ByID.Precaution_WarnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSideEffectsNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.SideEffectsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSideEffectsNull() {
                this[this.tablespRpt_InwardBlood_ByID.SideEffectsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsInteractionNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.InteractionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetInteractionNull() {
                this[this.tablespRpt_InwardBlood_ByID.InteractionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAdvTimeBeforeExpireNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.AdvTimeBeforeExpireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAdvTimeBeforeExpireNull() {
                this[this.tablespRpt_InwardBlood_ByID.AdvTimeBeforeExpireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsConsultNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.IsConsultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsConsultNull() {
                this[this.tablespRpt_InwardBlood_ByID.IsConsultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnitNameNull() {
                this[this.tablespRpt_InwardBlood_ByID.UnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitCodeNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.UnitCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnitCodeNull() {
                this[this.tablespRpt_InwardBlood_ByID.UnitCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCountryNameNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.CountryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCountryNameNull() {
                this[this.tablespRpt_InwardBlood_ByID.CountryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCountryCodeNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.CountryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCountryCodeNull() {
                this[this.tablespRpt_InwardBlood_ByID.CountryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitUseNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.UnitUseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnitUseNull() {
                this[this.tablespRpt_InwardBlood_ByID.UnitUseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitUseID_CodeNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.UnitUseID_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnitUseID_CodeNull() {
                this[this.tablespRpt_InwardBlood_ByID.UnitUseID_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFactorSafetyNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.FactorSafetyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFactorSafetyNull() {
                this[this.tablespRpt_InwardBlood_ByID.FactorSafetyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRefGenDrugCatID_1Null() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.RefGenDrugCatID_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRefGenDrugCatID_1Null() {
                this[this.tablespRpt_InwardBlood_ByID.RefGenDrugCatID_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsActiveIngredientCodeNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.ActiveIngredientCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetActiveIngredientCodeNull() {
                this[this.tablespRpt_InwardBlood_ByID.ActiveIngredientCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProductCodeRefNumNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.ProductCodeRefNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProductCodeRefNumNull() {
                this[this.tablespRpt_InwardBlood_ByID.ProductCodeRefNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHosIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.HosIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHosIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.HosIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsKeepRefrigeratedNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.KeepRefrigeratedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetKeepRefrigeratedNull() {
                this[this.tablespRpt_InwardBlood_ByID.KeepRefrigeratedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDrugClassIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.DrugClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDrugClassIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.DrugClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPCONameNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.PCONameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPCONameNull() {
                this[this.tablespRpt_InwardBlood_ByID.PCONameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFaNameNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.FaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFaNameNull() {
                this[this.tablespRpt_InwardBlood_ByID.FaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRefGenDrugBHYT_CatIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.RefGenDrugBHYT_CatIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRefGenDrugBHYT_CatIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.RefGenDrugBHYT_CatIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCategoryNameNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.CategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCategoryNameNull() {
                this[this.tablespRpt_InwardBlood_ByID.CategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCategoryDescriptionNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.CategoryDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCategoryDescriptionNull() {
                this[this.tablespRpt_InwardBlood_ByID.CategoryDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIngredientOrderNoNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.IngredientOrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIngredientOrderNoNull() {
                this[this.tablespRpt_InwardBlood_ByID.IngredientOrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDrugOrderNoNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.DrugOrderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDrugOrderNoNull() {
                this[this.tablespRpt_InwardBlood_ByID.DrugOrderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGroupParentIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.GroupParentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGroupParentIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.GroupParentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGroupIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.GroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGroupIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.GroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsShelfNameNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.ShelfNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetShelfNameNull() {
                this[this.tablespRpt_InwardBlood_ByID.ShelfNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHosNameNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.HosNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHosNameNull() {
                this[this.tablespRpt_InwardBlood_ByID.HosNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHospitalCodeNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.HospitalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHospitalCodeNull() {
                this[this.tablespRpt_InwardBlood_ByID.HospitalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHosShortNameNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.HosShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHosShortNameNull() {
                this[this.tablespRpt_InwardBlood_ByID.HosShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaxDayPrescribedNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.MaxDayPrescribedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaxDayPrescribedNull() {
                this[this.tablespRpt_InwardBlood_ByID.MaxDayPrescribedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDispenseVolumeNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.DispenseVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDispenseVolumeNull() {
                this[this.tablespRpt_InwardBlood_ByID.DispenseVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_MedicalMaterialNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.V_MedicalMaterialColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_MedicalMaterialNull() {
                this[this.tablespRpt_InwardBlood_ByID.V_MedicalMaterialColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRefGenDrugCat_1Null() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.RefGenDrugCat_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRefGenDrugCat_1Null() {
                this[this.tablespRpt_InwardBlood_ByID.RefGenDrugCat_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRefGenDrugCat_2Null() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.RefGenDrugCat_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRefGenDrugCat_2Null() {
                this[this.tablespRpt_InwardBlood_ByID.RefGenDrugCat_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWinningHospitalsNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.WinningHospitalsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWinningHospitalsNull() {
                this[this.tablespRpt_InwardBlood_ByID.WinningHospitalsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHIPaymentPercentNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.HIPaymentPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHIPaymentPercentNull() {
                this[this.tablespRpt_InwardBlood_ByID.HIPaymentPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDosageFormNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.DosageFormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDosageFormNull() {
                this[this.tablespRpt_InwardBlood_ByID.DosageFormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDrugFormNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.DrugFormColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDrugFormNull() {
                this[this.tablespRpt_InwardBlood_ByID.DrugFormColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsDonatedGoodsNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.IsDonatedGoodsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsDonatedGoodsNull() {
                this[this.tablespRpt_InwardBlood_ByID.IsDonatedGoodsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaxQtyHIAllowItemNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.MaxQtyHIAllowItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaxQtyHIAllowItemNull() {
                this[this.tablespRpt_InwardBlood_ByID.MaxQtyHIAllowItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPaymentRateOfHIAddedItemNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.PaymentRateOfHIAddedItemColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPaymentRateOfHIAddedItemNull() {
                this[this.tablespRpt_InwardBlood_ByID.PaymentRateOfHIAddedItemColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDrugDeptProductGroupReportTypeIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.DrugDeptProductGroupReportTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDrugDeptProductGroupReportTypeIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.DrugDeptProductGroupReportTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_CatDrugTypeNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.V_CatDrugTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_CatDrugTypeNull() {
                this[this.tablespRpt_InwardBlood_ByID.V_CatDrugTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDrugIDNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.DrugIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDrugIDNull() {
                this[this.tablespRpt_InwardBlood_ByID.DrugIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDiscountingValueNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.DiscountingValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDiscountingValueNull() {
                this[this.tablespRpt_InwardBlood_ByID.DiscountingValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalPriceHaveDiscountingNull() {
                return this.IsNull(this.tablespRpt_InwardBlood_ByID.TotalPriceHaveDiscountingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalPriceHaveDiscountingNull() {
                this[this.tablespRpt_InwardBlood_ByID.TotalPriceHaveDiscountingColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRpt_InwardBloodInvoice_ByIDRow : global::System.Data.DataRow {
            
            private spRpt_InwardBloodInvoice_ByIDDataTable tablespRpt_InwardBloodInvoice_ByID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spRpt_InwardBloodInvoice_ByIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRpt_InwardBloodInvoice_ByID = ((spRpt_InwardBloodInvoice_ByIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long inviID {
                get {
                    return ((long)(this[this.tablespRpt_InwardBloodInvoice_ByID.inviIDColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.inviIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long StaffID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBloodInvoice_ByID.StaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffID\' in table \'spRpt_InwardBloodInvoice_ByID\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.StaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InvID {
                get {
                    return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.InvIDColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.InvIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InvInvoiceNumber {
                get {
                    return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.InvInvoiceNumberColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.InvInvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime InvDateInvoice {
                get {
                    return ((global::System.DateTime)(this[this.tablespRpt_InwardBloodInvoice_ByID.InvDateInvoiceColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.InvDateInvoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DSPTModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespRpt_InwardBloodInvoice_ByID.DSPTModifiedDateColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.DSPTModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool TempRequireUpdate {
                get {
                    return ((bool)(this[this.tablespRpt_InwardBloodInvoice_ByID.TempRequireUpdateColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.TempRequireUpdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal CustomTax {
                get {
                    return ((decimal)(this[this.tablespRpt_InwardBloodInvoice_ByID.CustomTaxColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.CustomTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double VAT {
                get {
                    try {
                        return ((double)(this[this.tablespRpt_InwardBloodInvoice_ByID.VATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT\' in table \'spRpt_InwardBloodInvoice_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.VATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long CurrencyID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBloodInvoice_ByID.CurrencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyID\' in table \'spRpt_InwardBloodInvoice_ByID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.CurrencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CurrencyName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.CurrencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CurrencyName\' in table \'spRpt_InwardBloodInvoice_ByID\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.CurrencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double ExchangeRates {
                get {
                    try {
                        return ((double)(this[this.tablespRpt_InwardBloodInvoice_ByID.ExchangeRatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExchangeRates\' in table \'spRpt_InwardBloodInvoice_ByID\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.ExchangeRatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsForeign {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_InwardBloodInvoice_ByID.IsForeignColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsForeign\' in table \'spRpt_InwardBloodInvoice_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.IsForeignColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'spRpt_InwardBloodInvoice_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal Discounting {
                get {
                    return ((decimal)(this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountingColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double DiscountByPercent {
                get {
                    return ((double)(this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountByPercentColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountByPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPercent {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_InwardBloodInvoice_ByID.IsPercentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPercent\' in table \'spRpt_InwardBloodInvoice_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.IsPercentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool CheckedPoint {
                get {
                    return ((bool)(this[this.tablespRpt_InwardBloodInvoice_ByID.CheckedPointColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.CheckedPointColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long StoreID {
                get {
                    return ((long)(this[this.tablespRpt_InwardBloodInvoice_ByID.StoreIDColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.StoreIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string swhlName {
                get {
                    return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.swhlNameColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.swhlNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SupplierCode {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.SupplierCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierCode\' in table \'spRpt_InwardBloodInvoice_ByID\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.SupplierCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long SupplierID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_InwardBloodInvoice_ByID.SupplierIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierID\' in table \'spRpt_InwardBloodInvoice_ByID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.SupplierIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SupplierName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.SupplierNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SupplierName\' in table \'spRpt_InwardBloodInvoice_ByID\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.SupplierNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'spRpt_InwardBloodInvoice_ByID\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TotalNotVAT {
                get {
                    try {
                        return ((decimal)(this[this.tablespRpt_InwardBloodInvoice_ByID.TotalNotVATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalNotVAT\' in table \'spRpt_InwardBloodInvoice_ByID\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.TotalNotVATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DiscountingOnProduct {
                get {
                    try {
                        return ((decimal)(this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountingOnProductColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountingOnProduct\' in table \'spRpt_InwardBloodInvoice_By" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountingOnProductColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string swhlNameOut {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.swhlNameOutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'swhlNameOut\' in table \'spRpt_InwardBloodInvoice_ByID\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.swhlNameOutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OutInvID {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.OutInvIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutInvID\' in table \'spRpt_InwardBloodInvoice_ByID\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.OutInvIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DifferenceValue {
                get {
                    return ((decimal)(this[this.tablespRpt_InwardBloodInvoice_ByID.DifferenceValueColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.DifferenceValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TotalVATDifferenceAmount {
                get {
                    return ((decimal)(this[this.tablespRpt_InwardBloodInvoice_ByID.TotalVATDifferenceAmountColumn]));
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.TotalVATDifferenceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string StaffXuat {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.StaffXuatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffXuat\' in table \'spRpt_InwardBloodInvoice_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.StaffXuatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SerialNumber {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.SerialNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SerialNumber\' in table \'spRpt_InwardBloodInvoice_ByID\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.SerialNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DiscountingPercentInvoice {
                get {
                    try {
                        return ((decimal)(this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountingPercentInvoiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountingPercentInvoice\' in table \'spRpt_InwardBloodInvoi" +
                                "ce_ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountingPercentInvoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal DiscountingInvoice {
                get {
                    try {
                        return ((decimal)(this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountingInvoiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiscountingInvoice\' in table \'spRpt_InwardBloodInvoice_ByID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountingInvoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal TotalHaveDicounting {
                get {
                    try {
                        return ((decimal)(this[this.tablespRpt_InwardBloodInvoice_ByID.TotalHaveDicountingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHaveDicounting\' in table \'spRpt_InwardBloodInvoice_ByI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.TotalHaveDicountingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double VATValueInvoice {
                get {
                    try {
                        return ((double)(this[this.tablespRpt_InwardBloodInvoice_ByID.VATValueInvoiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VATValueInvoice\' in table \'spRpt_InwardBloodInvoice_ByID\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.VATValueInvoiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MaDonHang {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_InwardBloodInvoice_ByID.MaDonHangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaDonHang\' in table \'spRpt_InwardBloodInvoice_ByID\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRpt_InwardBloodInvoice_ByID.MaDonHangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStaffIDNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.StaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStaffIDNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.StaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVATNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.VATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVATNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.VATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCurrencyIDNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.CurrencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCurrencyIDNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.CurrencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCurrencyNameNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.CurrencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCurrencyNameNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.CurrencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsExchangeRatesNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.ExchangeRatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetExchangeRatesNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.ExchangeRatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsForeignNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.IsForeignColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsForeignNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.IsForeignColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNotesNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsPercentNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.IsPercentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsPercentNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.IsPercentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSupplierCodeNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.SupplierCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSupplierCodeNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.SupplierCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSupplierIDNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.SupplierIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSupplierIDNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.SupplierIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSupplierNameNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.SupplierNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSupplierNameNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.SupplierNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFullNameNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalNotVATNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.TotalNotVATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalNotVATNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.TotalNotVATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDiscountingOnProductNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.DiscountingOnProductColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDiscountingOnProductNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountingOnProductColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsswhlNameOutNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.swhlNameOutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetswhlNameOutNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.swhlNameOutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutInvIDNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.OutInvIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutInvIDNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.OutInvIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStaffXuatNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.StaffXuatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStaffXuatNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.StaffXuatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSerialNumberNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.SerialNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSerialNumberNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.SerialNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDiscountingPercentInvoiceNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.DiscountingPercentInvoiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDiscountingPercentInvoiceNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountingPercentInvoiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDiscountingInvoiceNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.DiscountingInvoiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDiscountingInvoiceNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.DiscountingInvoiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTotalHaveDicountingNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.TotalHaveDicountingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTotalHaveDicountingNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.TotalHaveDicountingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsVATValueInvoiceNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.VATValueInvoiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetVATValueInvoiceNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.VATValueInvoiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMaDonHangNull() {
                return this.IsNull(this.tablespRpt_InwardBloodInvoice_ByID.MaDonHangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMaDonHangNull() {
                this[this.tablespRpt_InwardBloodInvoice_ByID.MaDonHangColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class spRpt_InwardBlood_ByIDRowChangeEvent : global::System.EventArgs {
            
            private spRpt_InwardBlood_ByIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBlood_ByIDRowChangeEvent(spRpt_InwardBlood_ByIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBlood_ByIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class spRpt_InwardBloodInvoice_ByIDRowChangeEvent : global::System.EventArgs {
            
            private spRpt_InwardBloodInvoice_ByIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBloodInvoice_ByIDRowChangeEvent(spRpt_InwardBloodInvoice_ByIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRpt_InwardBloodInvoice_ByIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace eHCMS.ReportLib.RptDrugDepts.DataSchema.Inwards.dsInwardBloodSupplierTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRpt_InwardBlood_ByIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public spRpt_InwardBlood_ByIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRpt_InwardBlood_ByID";
            tableMapping.ColumnMappings.Add("InID", "InID");
            tableMapping.ColumnMappings.Add("SdlID", "SdlID");
            tableMapping.ColumnMappings.Add("StaffID", "StaffID");
            tableMapping.ColumnMappings.Add("inviID", "inviID");
            tableMapping.ColumnMappings.Add("InBatchNumber", "InBatchNumber");
            tableMapping.ColumnMappings.Add("InProductionDate", "InProductionDate");
            tableMapping.ColumnMappings.Add("InExpiryDate", "InExpiryDate");
            tableMapping.ColumnMappings.Add("InQuantity", "InQuantity");
            tableMapping.ColumnMappings.Add("InBuyingPrice", "InBuyingPrice");
            tableMapping.ColumnMappings.Add("InCost", "InCost");
            tableMapping.ColumnMappings.Add("NormalPrice", "NormalPrice");
            tableMapping.ColumnMappings.Add("HIPatientPrice", "HIPatientPrice");
            tableMapping.ColumnMappings.Add("HIAllowedPrice", "HIAllowedPrice");
            tableMapping.ColumnMappings.Add("Remaining", "Remaining");
            tableMapping.ColumnMappings.Add("IsPercentage", "IsPercentage");
            tableMapping.ColumnMappings.Add("V_GoodsType", "V_GoodsType");
            tableMapping.ColumnMappings.Add("DrugDeptPoDetailID", "DrugDeptPoDetailID");
            tableMapping.ColumnMappings.Add("Discounting", "Discounting");
            tableMapping.ColumnMappings.Add("DiscountByPercent", "DiscountByPercent");
            tableMapping.ColumnMappings.Add("IsPercent", "IsPercent");
            tableMapping.ColumnMappings.Add("IsBeginStockTakePeriod", "IsBeginStockTakePeriod");
            tableMapping.ColumnMappings.Add("IsEndStockTakePeriod", "IsEndStockTakePeriod");
            tableMapping.ColumnMappings.Add("InIDOriginal", "InIDOriginal");
            tableMapping.ColumnMappings.Add("NoPrint", "NoPrint");
            tableMapping.ColumnMappings.Add("PackagePrice", "PackagePrice");
            tableMapping.ColumnMappings.Add("PackageQuantity", "PackageQuantity");
            tableMapping.ColumnMappings.Add("IsUnitPackage", "IsUnitPackage");
            tableMapping.ColumnMappings.Add("GoodsTypeName", "GoodsTypeName");
            tableMapping.ColumnMappings.Add("SdlDescription", "SdlDescription");
            tableMapping.ColumnMappings.Add("PriceForHIPatient", "PriceForHIPatient");
            tableMapping.ColumnMappings.Add("GenMedProductID", "GenMedProductID");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("GenericName", "GenericName");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("HICode", "HICode");
            tableMapping.ColumnMappings.Add("Functions", "Functions");
            tableMapping.ColumnMappings.Add("TechInfo", "TechInfo");
            tableMapping.ColumnMappings.Add("Material", "Material");
            tableMapping.ColumnMappings.Add("Visa", "Visa");
            tableMapping.ColumnMappings.Add("PCOID", "PCOID");
            tableMapping.ColumnMappings.Add("CountryID", "CountryID");
            tableMapping.ColumnMappings.Add("Packaging", "Packaging");
            tableMapping.ColumnMappings.Add("UnitID", "UnitID");
            tableMapping.ColumnMappings.Add("UnitUseID", "UnitUseID");
            tableMapping.ColumnMappings.Add("UnitPackaging", "UnitPackaging");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Administration", "Administration");
            tableMapping.ColumnMappings.Add("InsuranceCover", "InsuranceCover");
            tableMapping.ColumnMappings.Add("IsActive", "IsActive");
            tableMapping.ColumnMappings.Add("V_MedProductType", "V_MedProductType");
            tableMapping.ColumnMappings.Add("NumberOfEstimatedMonths", "NumberOfEstimatedMonths");
            tableMapping.ColumnMappings.Add("MedGenDrugID", "MedGenDrugID");
            tableMapping.ColumnMappings.Add("Content", "Content");
            tableMapping.ColumnMappings.Add("Dosage", "Dosage");
            tableMapping.ColumnMappings.Add("Composition", "Composition");
            tableMapping.ColumnMappings.Add("ActiveIngredient", "ActiveIngredient");
            tableMapping.ColumnMappings.Add("Indication", "Indication");
            tableMapping.ColumnMappings.Add("Contraindication", "Contraindication");
            tableMapping.ColumnMappings.Add("Precaution_Warn", "Precaution_Warn");
            tableMapping.ColumnMappings.Add("SideEffects", "SideEffects");
            tableMapping.ColumnMappings.Add("Interaction", "Interaction");
            tableMapping.ColumnMappings.Add("AdvTimeBeforeExpire", "AdvTimeBeforeExpire");
            tableMapping.ColumnMappings.Add("IsConsult", "IsConsult");
            tableMapping.ColumnMappings.Add("UnitName", "UnitName");
            tableMapping.ColumnMappings.Add("UnitCode", "UnitCode");
            tableMapping.ColumnMappings.Add("CountryName", "CountryName");
            tableMapping.ColumnMappings.Add("CountryCode", "CountryCode");
            tableMapping.ColumnMappings.Add("UnitUse", "UnitUse");
            tableMapping.ColumnMappings.Add("UnitUseID_Code", "UnitUseID_Code");
            tableMapping.ColumnMappings.Add("FactorSafety", "FactorSafety");
            tableMapping.ColumnMappings.Add("RefGenDrugCatID_1", "RefGenDrugCatID_1");
            tableMapping.ColumnMappings.Add("ActiveIngredientCode", "ActiveIngredientCode");
            tableMapping.ColumnMappings.Add("ProductCodeRefNum", "ProductCodeRefNum");
            tableMapping.ColumnMappings.Add("HosID", "HosID");
            tableMapping.ColumnMappings.Add("KeepRefrigerated", "KeepRefrigerated");
            tableMapping.ColumnMappings.Add("DrugClassID", "DrugClassID");
            tableMapping.ColumnMappings.Add("PCOName", "PCOName");
            tableMapping.ColumnMappings.Add("FaName", "FaName");
            tableMapping.ColumnMappings.Add("RefGenDrugBHYT_CatID", "RefGenDrugBHYT_CatID");
            tableMapping.ColumnMappings.Add("CategoryName", "CategoryName");
            tableMapping.ColumnMappings.Add("CategoryDescription", "CategoryDescription");
            tableMapping.ColumnMappings.Add("IngredientOrderNo", "IngredientOrderNo");
            tableMapping.ColumnMappings.Add("DrugOrderNo", "DrugOrderNo");
            tableMapping.ColumnMappings.Add("GroupParentID", "GroupParentID");
            tableMapping.ColumnMappings.Add("GroupID", "GroupID");
            tableMapping.ColumnMappings.Add("ShelfName", "ShelfName");
            tableMapping.ColumnMappings.Add("HosName", "HosName");
            tableMapping.ColumnMappings.Add("HospitalCode", "HospitalCode");
            tableMapping.ColumnMappings.Add("HosShortName", "HosShortName");
            tableMapping.ColumnMappings.Add("MaxDayPrescribed", "MaxDayPrescribed");
            tableMapping.ColumnMappings.Add("DispenseVolume", "DispenseVolume");
            tableMapping.ColumnMappings.Add("V_MedicalMaterial", "V_MedicalMaterial");
            tableMapping.ColumnMappings.Add("RefGenDrugCat_1", "RefGenDrugCat_1");
            tableMapping.ColumnMappings.Add("RefGenDrugCat_2", "RefGenDrugCat_2");
            tableMapping.ColumnMappings.Add("WinningHospitals", "WinningHospitals");
            tableMapping.ColumnMappings.Add("HIPaymentPercent", "HIPaymentPercent");
            tableMapping.ColumnMappings.Add("DosageForm", "DosageForm");
            tableMapping.ColumnMappings.Add("DrugForm", "DrugForm");
            tableMapping.ColumnMappings.Add("IsDonatedGoods", "IsDonatedGoods");
            tableMapping.ColumnMappings.Add("MaxQtyHIAllowItem", "MaxQtyHIAllowItem");
            tableMapping.ColumnMappings.Add("PaymentRateOfHIAddedItem", "PaymentRateOfHIAddedItem");
            tableMapping.ColumnMappings.Add("DrugDeptProductGroupReportTypeID", "DrugDeptProductGroupReportTypeID");
            tableMapping.ColumnMappings.Add("V_CatDrugType", "V_CatDrugType");
            tableMapping.ColumnMappings.Add("DrugID", "DrugID");
            tableMapping.ColumnMappings.Add("TotalPriceNotVAT", "TotalPriceNotVAT");
            tableMapping.ColumnMappings.Add("DiscountingValue", "DiscountingValue");
            tableMapping.ColumnMappings.Add("TotalPriceHaveDiscounting", "TotalPriceHaveDiscounting");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRpt_InwardBlood_ByID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inviID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsInwardBloodSupplier.spRpt_InwardBlood_ByIDDataTable dataTable, global::System.Nullable<long> inviID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inviID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(inviID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsInwardBloodSupplier.spRpt_InwardBlood_ByIDDataTable GetData(global::System.Nullable<long> inviID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inviID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(inviID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsInwardBloodSupplier.spRpt_InwardBlood_ByIDDataTable dataTable = new dsInwardBloodSupplier.spRpt_InwardBlood_ByIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRpt_InwardBloodInvoice_ByIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public spRpt_InwardBloodInvoice_ByIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRpt_InwardBloodInvoice_ByID";
            tableMapping.ColumnMappings.Add("inviID", "inviID");
            tableMapping.ColumnMappings.Add("StaffID", "StaffID");
            tableMapping.ColumnMappings.Add("InvID", "InvID");
            tableMapping.ColumnMappings.Add("InvInvoiceNumber", "InvInvoiceNumber");
            tableMapping.ColumnMappings.Add("InvDateInvoice", "InvDateInvoice");
            tableMapping.ColumnMappings.Add("DSPTModifiedDate", "DSPTModifiedDate");
            tableMapping.ColumnMappings.Add("TempRequireUpdate", "TempRequireUpdate");
            tableMapping.ColumnMappings.Add("CustomTax", "CustomTax");
            tableMapping.ColumnMappings.Add("VAT", "VAT");
            tableMapping.ColumnMappings.Add("CurrencyID", "CurrencyID");
            tableMapping.ColumnMappings.Add("CurrencyName", "CurrencyName");
            tableMapping.ColumnMappings.Add("ExchangeRates", "ExchangeRates");
            tableMapping.ColumnMappings.Add("IsForeign", "IsForeign");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("Discounting", "Discounting");
            tableMapping.ColumnMappings.Add("DiscountByPercent", "DiscountByPercent");
            tableMapping.ColumnMappings.Add("IsPercent", "IsPercent");
            tableMapping.ColumnMappings.Add("CheckedPoint", "CheckedPoint");
            tableMapping.ColumnMappings.Add("StoreID", "StoreID");
            tableMapping.ColumnMappings.Add("swhlName", "swhlName");
            tableMapping.ColumnMappings.Add("SupplierCode", "SupplierCode");
            tableMapping.ColumnMappings.Add("SupplierID", "SupplierID");
            tableMapping.ColumnMappings.Add("SupplierName", "SupplierName");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("TotalNotVAT", "TotalNotVAT");
            tableMapping.ColumnMappings.Add("DiscountingOnProduct", "DiscountingOnProduct");
            tableMapping.ColumnMappings.Add("swhlNameOut", "swhlNameOut");
            tableMapping.ColumnMappings.Add("OutInvID", "OutInvID");
            tableMapping.ColumnMappings.Add("DifferenceValue", "DifferenceValue");
            tableMapping.ColumnMappings.Add("TotalVATDifferenceAmount", "TotalVATDifferenceAmount");
            tableMapping.ColumnMappings.Add("StaffXuat", "StaffXuat");
            tableMapping.ColumnMappings.Add("SerialNumber", "SerialNumber");
            tableMapping.ColumnMappings.Add("DiscountingPercentInvoice", "DiscountingPercentInvoice");
            tableMapping.ColumnMappings.Add("DiscountingInvoice", "DiscountingInvoice");
            tableMapping.ColumnMappings.Add("TotalHaveDicounting", "TotalHaveDicounting");
            tableMapping.ColumnMappings.Add("VATValueInvoice", "VATValueInvoice");
            tableMapping.ColumnMappings.Add("MaDonHang", "MaDonHang");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRpt_InwardBloodInvoice_ByID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inviID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsInwardBloodSupplier.spRpt_InwardBloodInvoice_ByIDDataTable dataTable, global::System.Nullable<long> inviID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inviID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(inviID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsInwardBloodSupplier.spRpt_InwardBloodInvoice_ByIDDataTable GetData(global::System.Nullable<long> inviID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inviID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(inviID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsInwardBloodSupplier.spRpt_InwardBloodInvoice_ByIDDataTable dataTable = new dsInwardBloodSupplier.spRpt_InwardBloodInvoice_ByIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(dsInwardBloodSupplier dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(dsInwardBloodSupplier dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(dsInwardBloodSupplier dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(dsInwardBloodSupplier dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591