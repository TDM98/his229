//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eHCMS.ReportLib.RptDrugDepts.DataSchema.Request {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRequestDrugDept")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsRequestDrugDept : global::System.Data.DataSet {
        
        private spRequestDrugInwardClinicDept_GetByIDDataTable tablespRequestDrugInwardClinicDept_GetByID;
        
        private spReqOutwardDrugClinicDeptPatient_GetByIDDataTable tablespReqOutwardDrugClinicDeptPatient_GetByID;
        
        private spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable tablespReqOutwardDrugClinicDeptPatient_SumGetByID;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsRequestDrugDept() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsRequestDrugDept(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spRequestDrugInwardClinicDept_GetByID"] != null)) {
                    base.Tables.Add(new spRequestDrugInwardClinicDept_GetByIDDataTable(ds.Tables["spRequestDrugInwardClinicDept_GetByID"]));
                }
                if ((ds.Tables["spReqOutwardDrugClinicDeptPatient_GetByID"] != null)) {
                    base.Tables.Add(new spReqOutwardDrugClinicDeptPatient_GetByIDDataTable(ds.Tables["spReqOutwardDrugClinicDeptPatient_GetByID"]));
                }
                if ((ds.Tables["spReqOutwardDrugClinicDeptPatient_SumGetByID"] != null)) {
                    base.Tables.Add(new spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable(ds.Tables["spReqOutwardDrugClinicDeptPatient_SumGetByID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRequestDrugInwardClinicDept_GetByIDDataTable spRequestDrugInwardClinicDept_GetByID {
            get {
                return this.tablespRequestDrugInwardClinicDept_GetByID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spReqOutwardDrugClinicDeptPatient_GetByIDDataTable spReqOutwardDrugClinicDeptPatient_GetByID {
            get {
                return this.tablespReqOutwardDrugClinicDeptPatient_GetByID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable spReqOutwardDrugClinicDeptPatient_SumGetByID {
            get {
                return this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsRequestDrugDept cln = ((dsRequestDrugDept)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spRequestDrugInwardClinicDept_GetByID"] != null)) {
                    base.Tables.Add(new spRequestDrugInwardClinicDept_GetByIDDataTable(ds.Tables["spRequestDrugInwardClinicDept_GetByID"]));
                }
                if ((ds.Tables["spReqOutwardDrugClinicDeptPatient_GetByID"] != null)) {
                    base.Tables.Add(new spReqOutwardDrugClinicDeptPatient_GetByIDDataTable(ds.Tables["spReqOutwardDrugClinicDeptPatient_GetByID"]));
                }
                if ((ds.Tables["spReqOutwardDrugClinicDeptPatient_SumGetByID"] != null)) {
                    base.Tables.Add(new spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable(ds.Tables["spReqOutwardDrugClinicDeptPatient_SumGetByID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespRequestDrugInwardClinicDept_GetByID = ((spRequestDrugInwardClinicDept_GetByIDDataTable)(base.Tables["spRequestDrugInwardClinicDept_GetByID"]));
            if ((initTable == true)) {
                if ((this.tablespRequestDrugInwardClinicDept_GetByID != null)) {
                    this.tablespRequestDrugInwardClinicDept_GetByID.InitVars();
                }
            }
            this.tablespReqOutwardDrugClinicDeptPatient_GetByID = ((spReqOutwardDrugClinicDeptPatient_GetByIDDataTable)(base.Tables["spReqOutwardDrugClinicDeptPatient_GetByID"]));
            if ((initTable == true)) {
                if ((this.tablespReqOutwardDrugClinicDeptPatient_GetByID != null)) {
                    this.tablespReqOutwardDrugClinicDeptPatient_GetByID.InitVars();
                }
            }
            this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID = ((spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable)(base.Tables["spReqOutwardDrugClinicDeptPatient_SumGetByID"]));
            if ((initTable == true)) {
                if ((this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID != null)) {
                    this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsRequestDrugDept";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRequestDrugDept.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespRequestDrugInwardClinicDept_GetByID = new spRequestDrugInwardClinicDept_GetByIDDataTable();
            base.Tables.Add(this.tablespRequestDrugInwardClinicDept_GetByID);
            this.tablespReqOutwardDrugClinicDeptPatient_GetByID = new spReqOutwardDrugClinicDeptPatient_GetByIDDataTable();
            base.Tables.Add(this.tablespReqOutwardDrugClinicDeptPatient_GetByID);
            this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID = new spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable();
            base.Tables.Add(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespRequestDrugInwardClinicDept_GetByID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespReqOutwardDrugClinicDeptPatient_GetByID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespReqOutwardDrugClinicDeptPatient_SumGetByID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRequestDrugDept ds = new dsRequestDrugDept();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spRequestDrugInwardClinicDept_GetByIDRowChangeEventHandler(object sender, spRequestDrugInwardClinicDept_GetByIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEventHandler(object sender, spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEventHandler(object sender, spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRequestDrugInwardClinicDept_GetByIDDataTable : global::System.Data.TypedTableBase<spRequestDrugInwardClinicDept_GetByIDRow> {
            
            private global::System.Data.DataColumn columnReqDrugInClinicDeptID;
            
            private global::System.Data.DataColumn columnStaffID;
            
            private global::System.Data.DataColumn columnDeptID;
            
            private global::System.Data.DataColumn columnReqDate;
            
            private global::System.Data.DataColumn columnReqNumCode;
            
            private global::System.Data.DataColumn columnOutFromStoreID;
            
            private global::System.Data.DataColumn columnInDeptStoreID;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnReqStatus;
            
            private global::System.Data.DataColumn columnV_MedProductType;
            
            private global::System.Data.DataColumn columnRefGenDrugCatID_1;
            
            private global::System.Data.DataColumn columnIsApproved;
            
            private global::System.Data.DataColumn columnApprovedStaffID;
            
            private global::System.Data.DataColumn columnApprovedDate;
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnToDate;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnInDeptStoreName;
            
            private global::System.Data.DataColumn columnOutFromStoreName;
            
            private global::System.Data.DataColumn columnDaNhanHang;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRequestDrugInwardClinicDept_GetByIDDataTable() {
                this.TableName = "spRequestDrugInwardClinicDept_GetByID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRequestDrugInwardClinicDept_GetByIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spRequestDrugInwardClinicDept_GetByIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqDrugInClinicDeptIDColumn {
                get {
                    return this.columnReqDrugInClinicDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StaffIDColumn {
                get {
                    return this.columnStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeptIDColumn {
                get {
                    return this.columnDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqDateColumn {
                get {
                    return this.columnReqDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqNumCodeColumn {
                get {
                    return this.columnReqNumCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutFromStoreIDColumn {
                get {
                    return this.columnOutFromStoreID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InDeptStoreIDColumn {
                get {
                    return this.columnInDeptStoreID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqStatusColumn {
                get {
                    return this.columnReqStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_MedProductTypeColumn {
                get {
                    return this.columnV_MedProductType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefGenDrugCatID_1Column {
                get {
                    return this.columnRefGenDrugCatID_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsApprovedColumn {
                get {
                    return this.columnIsApproved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApprovedStaffIDColumn {
                get {
                    return this.columnApprovedStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApprovedDateColumn {
                get {
                    return this.columnApprovedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InDeptStoreNameColumn {
                get {
                    return this.columnInDeptStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutFromStoreNameColumn {
                get {
                    return this.columnOutFromStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DaNhanHangColumn {
                get {
                    return this.columnDaNhanHang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRequestDrugInwardClinicDept_GetByIDRow this[int index] {
                get {
                    return ((spRequestDrugInwardClinicDept_GetByIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRequestDrugInwardClinicDept_GetByIDRowChangeEventHandler spRequestDrugInwardClinicDept_GetByIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRequestDrugInwardClinicDept_GetByIDRowChangeEventHandler spRequestDrugInwardClinicDept_GetByIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRequestDrugInwardClinicDept_GetByIDRowChangeEventHandler spRequestDrugInwardClinicDept_GetByIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRequestDrugInwardClinicDept_GetByIDRowChangeEventHandler spRequestDrugInwardClinicDept_GetByIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspRequestDrugInwardClinicDept_GetByIDRow(spRequestDrugInwardClinicDept_GetByIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRequestDrugInwardClinicDept_GetByIDRow AddspRequestDrugInwardClinicDept_GetByIDRow(
                        long StaffID, 
                        long DeptID, 
                        System.DateTime ReqDate, 
                        string ReqNumCode, 
                        long OutFromStoreID, 
                        long InDeptStoreID, 
                        string Comment, 
                        long ReqStatus, 
                        long V_MedProductType, 
                        long RefGenDrugCatID_1, 
                        bool IsApproved, 
                        long ApprovedStaffID, 
                        System.DateTime ApprovedDate, 
                        System.DateTime FromDate, 
                        System.DateTime ToDate, 
                        string FullName, 
                        string InDeptStoreName, 
                        string OutFromStoreName, 
                        bool DaNhanHang) {
                spRequestDrugInwardClinicDept_GetByIDRow rowspRequestDrugInwardClinicDept_GetByIDRow = ((spRequestDrugInwardClinicDept_GetByIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        StaffID,
                        DeptID,
                        ReqDate,
                        ReqNumCode,
                        OutFromStoreID,
                        InDeptStoreID,
                        Comment,
                        ReqStatus,
                        V_MedProductType,
                        RefGenDrugCatID_1,
                        IsApproved,
                        ApprovedStaffID,
                        ApprovedDate,
                        FromDate,
                        ToDate,
                        FullName,
                        InDeptStoreName,
                        OutFromStoreName,
                        DaNhanHang};
                rowspRequestDrugInwardClinicDept_GetByIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRequestDrugInwardClinicDept_GetByIDRow);
                return rowspRequestDrugInwardClinicDept_GetByIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRequestDrugInwardClinicDept_GetByIDDataTable cln = ((spRequestDrugInwardClinicDept_GetByIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRequestDrugInwardClinicDept_GetByIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnReqDrugInClinicDeptID = base.Columns["ReqDrugInClinicDeptID"];
                this.columnStaffID = base.Columns["StaffID"];
                this.columnDeptID = base.Columns["DeptID"];
                this.columnReqDate = base.Columns["ReqDate"];
                this.columnReqNumCode = base.Columns["ReqNumCode"];
                this.columnOutFromStoreID = base.Columns["OutFromStoreID"];
                this.columnInDeptStoreID = base.Columns["InDeptStoreID"];
                this.columnComment = base.Columns["Comment"];
                this.columnReqStatus = base.Columns["ReqStatus"];
                this.columnV_MedProductType = base.Columns["V_MedProductType"];
                this.columnRefGenDrugCatID_1 = base.Columns["RefGenDrugCatID_1"];
                this.columnIsApproved = base.Columns["IsApproved"];
                this.columnApprovedStaffID = base.Columns["ApprovedStaffID"];
                this.columnApprovedDate = base.Columns["ApprovedDate"];
                this.columnFromDate = base.Columns["FromDate"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnFullName = base.Columns["FullName"];
                this.columnInDeptStoreName = base.Columns["InDeptStoreName"];
                this.columnOutFromStoreName = base.Columns["OutFromStoreName"];
                this.columnDaNhanHang = base.Columns["DaNhanHang"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnReqDrugInClinicDeptID = new global::System.Data.DataColumn("ReqDrugInClinicDeptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqDrugInClinicDeptID);
                this.columnStaffID = new global::System.Data.DataColumn("StaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID);
                this.columnDeptID = new global::System.Data.DataColumn("DeptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptID);
                this.columnReqDate = new global::System.Data.DataColumn("ReqDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqDate);
                this.columnReqNumCode = new global::System.Data.DataColumn("ReqNumCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqNumCode);
                this.columnOutFromStoreID = new global::System.Data.DataColumn("OutFromStoreID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutFromStoreID);
                this.columnInDeptStoreID = new global::System.Data.DataColumn("InDeptStoreID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDeptStoreID);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnReqStatus = new global::System.Data.DataColumn("ReqStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqStatus);
                this.columnV_MedProductType = new global::System.Data.DataColumn("V_MedProductType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_MedProductType);
                this.columnRefGenDrugCatID_1 = new global::System.Data.DataColumn("RefGenDrugCatID_1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefGenDrugCatID_1);
                this.columnIsApproved = new global::System.Data.DataColumn("IsApproved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsApproved);
                this.columnApprovedStaffID = new global::System.Data.DataColumn("ApprovedStaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedStaffID);
                this.columnApprovedDate = new global::System.Data.DataColumn("ApprovedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedDate);
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnToDate = new global::System.Data.DataColumn("ToDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnInDeptStoreName = new global::System.Data.DataColumn("InDeptStoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDeptStoreName);
                this.columnOutFromStoreName = new global::System.Data.DataColumn("OutFromStoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutFromStoreName);
                this.columnDaNhanHang = new global::System.Data.DataColumn("DaNhanHang", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaNhanHang);
                this.columnReqDrugInClinicDeptID.AutoIncrement = true;
                this.columnReqDrugInClinicDeptID.AutoIncrementSeed = -1;
                this.columnReqDrugInClinicDeptID.AutoIncrementStep = -1;
                this.columnReqDrugInClinicDeptID.ReadOnly = true;
                this.columnReqNumCode.MaxLength = 25;
                this.columnFullName.MaxLength = 65;
                this.columnInDeptStoreName.MaxLength = 128;
                this.columnOutFromStoreName.MaxLength = 128;
                this.columnDaNhanHang.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRequestDrugInwardClinicDept_GetByIDRow NewspRequestDrugInwardClinicDept_GetByIDRow() {
                return ((spRequestDrugInwardClinicDept_GetByIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRequestDrugInwardClinicDept_GetByIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRequestDrugInwardClinicDept_GetByIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRequestDrugInwardClinicDept_GetByIDRowChanged != null)) {
                    this.spRequestDrugInwardClinicDept_GetByIDRowChanged(this, new spRequestDrugInwardClinicDept_GetByIDRowChangeEvent(((spRequestDrugInwardClinicDept_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRequestDrugInwardClinicDept_GetByIDRowChanging != null)) {
                    this.spRequestDrugInwardClinicDept_GetByIDRowChanging(this, new spRequestDrugInwardClinicDept_GetByIDRowChangeEvent(((spRequestDrugInwardClinicDept_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRequestDrugInwardClinicDept_GetByIDRowDeleted != null)) {
                    this.spRequestDrugInwardClinicDept_GetByIDRowDeleted(this, new spRequestDrugInwardClinicDept_GetByIDRowChangeEvent(((spRequestDrugInwardClinicDept_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRequestDrugInwardClinicDept_GetByIDRowDeleting != null)) {
                    this.spRequestDrugInwardClinicDept_GetByIDRowDeleting(this, new spRequestDrugInwardClinicDept_GetByIDRowChangeEvent(((spRequestDrugInwardClinicDept_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespRequestDrugInwardClinicDept_GetByIDRow(spRequestDrugInwardClinicDept_GetByIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRequestDrugDept ds = new dsRequestDrugDept();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRequestDrugInwardClinicDept_GetByIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spReqOutwardDrugClinicDeptPatient_GetByIDDataTable : global::System.Data.TypedTableBase<spReqOutwardDrugClinicDeptPatient_GetByIDRow> {
            
            private global::System.Data.DataColumn columnOutClinicDeptReqID;
            
            private global::System.Data.DataColumn columnReqDrugInClinicDeptID;
            
            private global::System.Data.DataColumn columnGenMedProductID;
            
            private global::System.Data.DataColumn columnReqQty;
            
            private global::System.Data.DataColumn columnApprovedQty;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnPtRegistrationID;
            
            private global::System.Data.DataColumn columnApprovedNotes;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnGenericName;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnHICode;
            
            private global::System.Data.DataColumn columnUnitPackaging;
            
            private global::System.Data.DataColumn columnPackaging;
            
            private global::System.Data.DataColumn columnContent;
            
            private global::System.Data.DataColumn columnRegTypeID;
            
            private global::System.Data.DataColumn columnDeptID;
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnEmergRecID;
            
            private global::System.Data.DataColumn columnStaffID;
            
            private global::System.Data.DataColumn columnExamDate;
            
            private global::System.Data.DataColumn columnV_DocumentTypeOnHold;
            
            private global::System.Data.DataColumn columnSequenceNo;
            
            private global::System.Data.DataColumn columnV_RegistrationStatus;
            
            private global::System.Data.DataColumn columnHisID;
            
            private global::System.Data.DataColumn columnPtInsuranceBenefit;
            
            private global::System.Data.DataColumn columnIsCrossRegion;
            
            private global::System.Data.DataColumn columnPaperReferalID;
            
            private global::System.Data.DataColumn columnPtRegistrationCode;
            
            private global::System.Data.DataColumn columnPatientClassID;
            
            private global::System.Data.DataColumn columnMarkedAsDeleted;
            
            private global::System.Data.DataColumn columnSomeRegDetailsRemoved;
            
            private global::System.Data.DataColumn columnV_RegistrationType;
            
            private global::System.Data.DataColumn columnIsCorrectRoute;
            
            private global::System.Data.DataColumn columnProgSumMinusMinHI;
            
            private global::System.Data.DataColumn columnV_RegistrationPaymentStatus;
            
            private global::System.Data.DataColumn columnV_RegistrationClosingStatus;
            
            private global::System.Data.DataColumn columnUpdateFlagLocked;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnPatientCode;
            
            private global::System.Data.DataColumn columnPatientBarcode;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnIDNumber;
            
            private global::System.Data.DataColumn columnPatientEmailAddress;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnPatientPhoneNumber;
            
            private global::System.Data.DataColumn columnPatientStreetAddress;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_GetByIDDataTable() {
                this.TableName = "spReqOutwardDrugClinicDeptPatient_GetByID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spReqOutwardDrugClinicDeptPatient_GetByIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spReqOutwardDrugClinicDeptPatient_GetByIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutClinicDeptReqIDColumn {
                get {
                    return this.columnOutClinicDeptReqID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqDrugInClinicDeptIDColumn {
                get {
                    return this.columnReqDrugInClinicDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenMedProductIDColumn {
                get {
                    return this.columnGenMedProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqQtyColumn {
                get {
                    return this.columnReqQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApprovedQtyColumn {
                get {
                    return this.columnApprovedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PtRegistrationIDColumn {
                get {
                    return this.columnPtRegistrationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApprovedNotesColumn {
                get {
                    return this.columnApprovedNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenericNameColumn {
                get {
                    return this.columnGenericName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HICodeColumn {
                get {
                    return this.columnHICode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitPackagingColumn {
                get {
                    return this.columnUnitPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackagingColumn {
                get {
                    return this.columnPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContentColumn {
                get {
                    return this.columnContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegTypeIDColumn {
                get {
                    return this.columnRegTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeptIDColumn {
                get {
                    return this.columnDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmergRecIDColumn {
                get {
                    return this.columnEmergRecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StaffIDColumn {
                get {
                    return this.columnStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamDateColumn {
                get {
                    return this.columnExamDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_DocumentTypeOnHoldColumn {
                get {
                    return this.columnV_DocumentTypeOnHold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SequenceNoColumn {
                get {
                    return this.columnSequenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_RegistrationStatusColumn {
                get {
                    return this.columnV_RegistrationStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HisIDColumn {
                get {
                    return this.columnHisID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PtInsuranceBenefitColumn {
                get {
                    return this.columnPtInsuranceBenefit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCrossRegionColumn {
                get {
                    return this.columnIsCrossRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaperReferalIDColumn {
                get {
                    return this.columnPaperReferalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PtRegistrationCodeColumn {
                get {
                    return this.columnPtRegistrationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientClassIDColumn {
                get {
                    return this.columnPatientClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkedAsDeletedColumn {
                get {
                    return this.columnMarkedAsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SomeRegDetailsRemovedColumn {
                get {
                    return this.columnSomeRegDetailsRemoved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_RegistrationTypeColumn {
                get {
                    return this.columnV_RegistrationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsCorrectRouteColumn {
                get {
                    return this.columnIsCorrectRoute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProgSumMinusMinHIColumn {
                get {
                    return this.columnProgSumMinusMinHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_RegistrationPaymentStatusColumn {
                get {
                    return this.columnV_RegistrationPaymentStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_RegistrationClosingStatusColumn {
                get {
                    return this.columnV_RegistrationClosingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateFlagLockedColumn {
                get {
                    return this.columnUpdateFlagLocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientCodeColumn {
                get {
                    return this.columnPatientCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientBarcodeColumn {
                get {
                    return this.columnPatientBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDNumberColumn {
                get {
                    return this.columnIDNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientEmailAddressColumn {
                get {
                    return this.columnPatientEmailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientPhoneNumberColumn {
                get {
                    return this.columnPatientPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientStreetAddressColumn {
                get {
                    return this.columnPatientStreetAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_GetByIDRow this[int index] {
                get {
                    return ((spReqOutwardDrugClinicDeptPatient_GetByIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatient_GetByIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatient_GetByIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatient_GetByIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatient_GetByIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspReqOutwardDrugClinicDeptPatient_GetByIDRow(spReqOutwardDrugClinicDeptPatient_GetByIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_GetByIDRow AddspReqOutwardDrugClinicDeptPatient_GetByIDRow(
                        long ReqDrugInClinicDeptID, 
                        long GenMedProductID, 
                        decimal ReqQty, 
                        decimal ApprovedQty, 
                        string Notes, 
                        long PtRegistrationID, 
                        string ApprovedNotes, 
                        string BrandName, 
                        string GenericName, 
                        long UnitID, 
                        string UnitName, 
                        string Code, 
                        string HICode, 
                        int UnitPackaging, 
                        string Packaging, 
                        string Content, 
                        byte RegTypeID, 
                        long DeptID, 
                        long PatientID, 
                        long EmergRecID, 
                        long StaffID, 
                        System.DateTime ExamDate, 
                        long V_DocumentTypeOnHold, 
                        int SequenceNo, 
                        long V_RegistrationStatus, 
                        long HisID, 
                        double PtInsuranceBenefit, 
                        bool IsCrossRegion, 
                        long PaperReferalID, 
                        string PtRegistrationCode, 
                        long PatientClassID, 
                        bool MarkedAsDeleted, 
                        bool SomeRegDetailsRemoved, 
                        long V_RegistrationType, 
                        bool IsCorrectRoute, 
                        decimal ProgSumMinusMinHI, 
                        long V_RegistrationPaymentStatus, 
                        long V_RegistrationClosingStatus, 
                        bool UpdateFlagLocked, 
                        string FullName, 
                        string PatientCode, 
                        string PatientBarcode, 
                        System.DateTime DOB, 
                        string IDNumber, 
                        string PatientEmailAddress, 
                        string Gender, 
                        string PatientPhoneNumber, 
                        string PatientStreetAddress) {
                spReqOutwardDrugClinicDeptPatient_GetByIDRow rowspReqOutwardDrugClinicDeptPatient_GetByIDRow = ((spReqOutwardDrugClinicDeptPatient_GetByIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ReqDrugInClinicDeptID,
                        GenMedProductID,
                        ReqQty,
                        ApprovedQty,
                        Notes,
                        PtRegistrationID,
                        ApprovedNotes,
                        BrandName,
                        GenericName,
                        UnitID,
                        UnitName,
                        Code,
                        HICode,
                        UnitPackaging,
                        Packaging,
                        Content,
                        RegTypeID,
                        DeptID,
                        PatientID,
                        EmergRecID,
                        StaffID,
                        ExamDate,
                        V_DocumentTypeOnHold,
                        SequenceNo,
                        V_RegistrationStatus,
                        HisID,
                        PtInsuranceBenefit,
                        IsCrossRegion,
                        PaperReferalID,
                        PtRegistrationCode,
                        PatientClassID,
                        MarkedAsDeleted,
                        SomeRegDetailsRemoved,
                        V_RegistrationType,
                        IsCorrectRoute,
                        ProgSumMinusMinHI,
                        V_RegistrationPaymentStatus,
                        V_RegistrationClosingStatus,
                        UpdateFlagLocked,
                        FullName,
                        PatientCode,
                        PatientBarcode,
                        DOB,
                        IDNumber,
                        PatientEmailAddress,
                        Gender,
                        PatientPhoneNumber,
                        PatientStreetAddress};
                rowspReqOutwardDrugClinicDeptPatient_GetByIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspReqOutwardDrugClinicDeptPatient_GetByIDRow);
                return rowspReqOutwardDrugClinicDeptPatient_GetByIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spReqOutwardDrugClinicDeptPatient_GetByIDDataTable cln = ((spReqOutwardDrugClinicDeptPatient_GetByIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spReqOutwardDrugClinicDeptPatient_GetByIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnOutClinicDeptReqID = base.Columns["OutClinicDeptReqID"];
                this.columnReqDrugInClinicDeptID = base.Columns["ReqDrugInClinicDeptID"];
                this.columnGenMedProductID = base.Columns["GenMedProductID"];
                this.columnReqQty = base.Columns["ReqQty"];
                this.columnApprovedQty = base.Columns["ApprovedQty"];
                this.columnNotes = base.Columns["Notes"];
                this.columnPtRegistrationID = base.Columns["PtRegistrationID"];
                this.columnApprovedNotes = base.Columns["ApprovedNotes"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnGenericName = base.Columns["GenericName"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnCode = base.Columns["Code"];
                this.columnHICode = base.Columns["HICode"];
                this.columnUnitPackaging = base.Columns["UnitPackaging"];
                this.columnPackaging = base.Columns["Packaging"];
                this.columnContent = base.Columns["Content"];
                this.columnRegTypeID = base.Columns["RegTypeID"];
                this.columnDeptID = base.Columns["DeptID"];
                this.columnPatientID = base.Columns["PatientID"];
                this.columnEmergRecID = base.Columns["EmergRecID"];
                this.columnStaffID = base.Columns["StaffID"];
                this.columnExamDate = base.Columns["ExamDate"];
                this.columnV_DocumentTypeOnHold = base.Columns["V_DocumentTypeOnHold"];
                this.columnSequenceNo = base.Columns["SequenceNo"];
                this.columnV_RegistrationStatus = base.Columns["V_RegistrationStatus"];
                this.columnHisID = base.Columns["HisID"];
                this.columnPtInsuranceBenefit = base.Columns["PtInsuranceBenefit"];
                this.columnIsCrossRegion = base.Columns["IsCrossRegion"];
                this.columnPaperReferalID = base.Columns["PaperReferalID"];
                this.columnPtRegistrationCode = base.Columns["PtRegistrationCode"];
                this.columnPatientClassID = base.Columns["PatientClassID"];
                this.columnMarkedAsDeleted = base.Columns["MarkedAsDeleted"];
                this.columnSomeRegDetailsRemoved = base.Columns["SomeRegDetailsRemoved"];
                this.columnV_RegistrationType = base.Columns["V_RegistrationType"];
                this.columnIsCorrectRoute = base.Columns["IsCorrectRoute"];
                this.columnProgSumMinusMinHI = base.Columns["ProgSumMinusMinHI"];
                this.columnV_RegistrationPaymentStatus = base.Columns["V_RegistrationPaymentStatus"];
                this.columnV_RegistrationClosingStatus = base.Columns["V_RegistrationClosingStatus"];
                this.columnUpdateFlagLocked = base.Columns["UpdateFlagLocked"];
                this.columnFullName = base.Columns["FullName"];
                this.columnPatientCode = base.Columns["PatientCode"];
                this.columnPatientBarcode = base.Columns["PatientBarcode"];
                this.columnDOB = base.Columns["DOB"];
                this.columnIDNumber = base.Columns["IDNumber"];
                this.columnPatientEmailAddress = base.Columns["PatientEmailAddress"];
                this.columnGender = base.Columns["Gender"];
                this.columnPatientPhoneNumber = base.Columns["PatientPhoneNumber"];
                this.columnPatientStreetAddress = base.Columns["PatientStreetAddress"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnOutClinicDeptReqID = new global::System.Data.DataColumn("OutClinicDeptReqID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutClinicDeptReqID);
                this.columnReqDrugInClinicDeptID = new global::System.Data.DataColumn("ReqDrugInClinicDeptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqDrugInClinicDeptID);
                this.columnGenMedProductID = new global::System.Data.DataColumn("GenMedProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenMedProductID);
                this.columnReqQty = new global::System.Data.DataColumn("ReqQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqQty);
                this.columnApprovedQty = new global::System.Data.DataColumn("ApprovedQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedQty);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnPtRegistrationID = new global::System.Data.DataColumn("PtRegistrationID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegistrationID);
                this.columnApprovedNotes = new global::System.Data.DataColumn("ApprovedNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedNotes);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnGenericName = new global::System.Data.DataColumn("GenericName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenericName);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnHICode = new global::System.Data.DataColumn("HICode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHICode);
                this.columnUnitPackaging = new global::System.Data.DataColumn("UnitPackaging", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPackaging);
                this.columnPackaging = new global::System.Data.DataColumn("Packaging", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackaging);
                this.columnContent = new global::System.Data.DataColumn("Content", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContent);
                this.columnRegTypeID = new global::System.Data.DataColumn("RegTypeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegTypeID);
                this.columnDeptID = new global::System.Data.DataColumn("DeptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptID);
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnEmergRecID = new global::System.Data.DataColumn("EmergRecID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmergRecID);
                this.columnStaffID = new global::System.Data.DataColumn("StaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID);
                this.columnExamDate = new global::System.Data.DataColumn("ExamDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamDate);
                this.columnV_DocumentTypeOnHold = new global::System.Data.DataColumn("V_DocumentTypeOnHold", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_DocumentTypeOnHold);
                this.columnSequenceNo = new global::System.Data.DataColumn("SequenceNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequenceNo);
                this.columnV_RegistrationStatus = new global::System.Data.DataColumn("V_RegistrationStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegistrationStatus);
                this.columnHisID = new global::System.Data.DataColumn("HisID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHisID);
                this.columnPtInsuranceBenefit = new global::System.Data.DataColumn("PtInsuranceBenefit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtInsuranceBenefit);
                this.columnIsCrossRegion = new global::System.Data.DataColumn("IsCrossRegion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCrossRegion);
                this.columnPaperReferalID = new global::System.Data.DataColumn("PaperReferalID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaperReferalID);
                this.columnPtRegistrationCode = new global::System.Data.DataColumn("PtRegistrationCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegistrationCode);
                this.columnPatientClassID = new global::System.Data.DataColumn("PatientClassID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientClassID);
                this.columnMarkedAsDeleted = new global::System.Data.DataColumn("MarkedAsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkedAsDeleted);
                this.columnSomeRegDetailsRemoved = new global::System.Data.DataColumn("SomeRegDetailsRemoved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSomeRegDetailsRemoved);
                this.columnV_RegistrationType = new global::System.Data.DataColumn("V_RegistrationType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegistrationType);
                this.columnIsCorrectRoute = new global::System.Data.DataColumn("IsCorrectRoute", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCorrectRoute);
                this.columnProgSumMinusMinHI = new global::System.Data.DataColumn("ProgSumMinusMinHI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgSumMinusMinHI);
                this.columnV_RegistrationPaymentStatus = new global::System.Data.DataColumn("V_RegistrationPaymentStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegistrationPaymentStatus);
                this.columnV_RegistrationClosingStatus = new global::System.Data.DataColumn("V_RegistrationClosingStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegistrationClosingStatus);
                this.columnUpdateFlagLocked = new global::System.Data.DataColumn("UpdateFlagLocked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateFlagLocked);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnPatientCode = new global::System.Data.DataColumn("PatientCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientCode);
                this.columnPatientBarcode = new global::System.Data.DataColumn("PatientBarcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientBarcode);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnIDNumber = new global::System.Data.DataColumn("IDNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDNumber);
                this.columnPatientEmailAddress = new global::System.Data.DataColumn("PatientEmailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientEmailAddress);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnPatientPhoneNumber = new global::System.Data.DataColumn("PatientPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientPhoneNumber);
                this.columnPatientStreetAddress = new global::System.Data.DataColumn("PatientStreetAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientStreetAddress);
                this.columnOutClinicDeptReqID.AutoIncrement = true;
                this.columnOutClinicDeptReqID.AutoIncrementSeed = -1;
                this.columnOutClinicDeptReqID.AutoIncrementStep = -1;
                this.columnOutClinicDeptReqID.ReadOnly = true;
                this.columnNotes.MaxLength = 256;
                this.columnApprovedNotes.MaxLength = 256;
                this.columnBrandName.MaxLength = 128;
                this.columnGenericName.MaxLength = 256;
                this.columnUnitName.MaxLength = 64;
                this.columnCode.MaxLength = 20;
                this.columnHICode.MaxLength = 20;
                this.columnPackaging.MaxLength = 50;
                this.columnContent.MaxLength = 128;
                this.columnPtRegistrationCode.MaxLength = 20;
                this.columnFullName.MaxLength = 65;
                this.columnPatientCode.MaxLength = 16;
                this.columnPatientBarcode.MaxLength = 13;
                this.columnIDNumber.MaxLength = 15;
                this.columnPatientEmailAddress.MaxLength = 80;
                this.columnGender.MaxLength = 1;
                this.columnPatientPhoneNumber.MaxLength = 17;
                this.columnPatientStreetAddress.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_GetByIDRow NewspReqOutwardDrugClinicDeptPatient_GetByIDRow() {
                return ((spReqOutwardDrugClinicDeptPatient_GetByIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spReqOutwardDrugClinicDeptPatient_GetByIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spReqOutwardDrugClinicDeptPatient_GetByIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spReqOutwardDrugClinicDeptPatient_GetByIDRowChanged != null)) {
                    this.spReqOutwardDrugClinicDeptPatient_GetByIDRowChanged(this, new spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatient_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spReqOutwardDrugClinicDeptPatient_GetByIDRowChanging != null)) {
                    this.spReqOutwardDrugClinicDeptPatient_GetByIDRowChanging(this, new spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatient_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spReqOutwardDrugClinicDeptPatient_GetByIDRowDeleted != null)) {
                    this.spReqOutwardDrugClinicDeptPatient_GetByIDRowDeleted(this, new spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatient_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spReqOutwardDrugClinicDeptPatient_GetByIDRowDeleting != null)) {
                    this.spReqOutwardDrugClinicDeptPatient_GetByIDRowDeleting(this, new spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatient_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespReqOutwardDrugClinicDeptPatient_GetByIDRow(spReqOutwardDrugClinicDeptPatient_GetByIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRequestDrugDept ds = new dsRequestDrugDept();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spReqOutwardDrugClinicDeptPatient_GetByIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable : global::System.Data.TypedTableBase<spReqOutwardDrugClinicDeptPatient_SumGetByIDRow> {
            
            private global::System.Data.DataColumn columnGenMedProductID;
            
            private global::System.Data.DataColumn columnReqDrugInClinicDeptID;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnGenericName;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnHICode;
            
            private global::System.Data.DataColumn columnUnitPackaging;
            
            private global::System.Data.DataColumn columnPackaging;
            
            private global::System.Data.DataColumn columnContent;
            
            private global::System.Data.DataColumn columnReqQty;
            
            private global::System.Data.DataColumn columnApprovedQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable() {
                this.TableName = "spReqOutwardDrugClinicDeptPatient_SumGetByID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenMedProductIDColumn {
                get {
                    return this.columnGenMedProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqDrugInClinicDeptIDColumn {
                get {
                    return this.columnReqDrugInClinicDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenericNameColumn {
                get {
                    return this.columnGenericName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HICodeColumn {
                get {
                    return this.columnHICode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitPackagingColumn {
                get {
                    return this.columnUnitPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackagingColumn {
                get {
                    return this.columnPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContentColumn {
                get {
                    return this.columnContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqQtyColumn {
                get {
                    return this.columnReqQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApprovedQtyColumn {
                get {
                    return this.columnApprovedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_SumGetByIDRow this[int index] {
                get {
                    return ((spReqOutwardDrugClinicDeptPatient_SumGetByIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatient_SumGetByIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatient_SumGetByIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspReqOutwardDrugClinicDeptPatient_SumGetByIDRow(spReqOutwardDrugClinicDeptPatient_SumGetByIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_SumGetByIDRow AddspReqOutwardDrugClinicDeptPatient_SumGetByIDRow(long GenMedProductID, long ReqDrugInClinicDeptID, string BrandName, string GenericName, long UnitID, string UnitName, string Code, string HICode, int UnitPackaging, string Packaging, string Content, decimal ReqQty, decimal ApprovedQty) {
                spReqOutwardDrugClinicDeptPatient_SumGetByIDRow rowspReqOutwardDrugClinicDeptPatient_SumGetByIDRow = ((spReqOutwardDrugClinicDeptPatient_SumGetByIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GenMedProductID,
                        ReqDrugInClinicDeptID,
                        BrandName,
                        GenericName,
                        UnitID,
                        UnitName,
                        Code,
                        HICode,
                        UnitPackaging,
                        Packaging,
                        Content,
                        ReqQty,
                        ApprovedQty};
                rowspReqOutwardDrugClinicDeptPatient_SumGetByIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspReqOutwardDrugClinicDeptPatient_SumGetByIDRow);
                return rowspReqOutwardDrugClinicDeptPatient_SumGetByIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable cln = ((spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnGenMedProductID = base.Columns["GenMedProductID"];
                this.columnReqDrugInClinicDeptID = base.Columns["ReqDrugInClinicDeptID"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnGenericName = base.Columns["GenericName"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnCode = base.Columns["Code"];
                this.columnHICode = base.Columns["HICode"];
                this.columnUnitPackaging = base.Columns["UnitPackaging"];
                this.columnPackaging = base.Columns["Packaging"];
                this.columnContent = base.Columns["Content"];
                this.columnReqQty = base.Columns["ReqQty"];
                this.columnApprovedQty = base.Columns["ApprovedQty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnGenMedProductID = new global::System.Data.DataColumn("GenMedProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenMedProductID);
                this.columnReqDrugInClinicDeptID = new global::System.Data.DataColumn("ReqDrugInClinicDeptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqDrugInClinicDeptID);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnGenericName = new global::System.Data.DataColumn("GenericName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenericName);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnHICode = new global::System.Data.DataColumn("HICode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHICode);
                this.columnUnitPackaging = new global::System.Data.DataColumn("UnitPackaging", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPackaging);
                this.columnPackaging = new global::System.Data.DataColumn("Packaging", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackaging);
                this.columnContent = new global::System.Data.DataColumn("Content", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContent);
                this.columnReqQty = new global::System.Data.DataColumn("ReqQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqQty);
                this.columnApprovedQty = new global::System.Data.DataColumn("ApprovedQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedQty);
                this.columnBrandName.MaxLength = 128;
                this.columnGenericName.MaxLength = 256;
                this.columnUnitName.MaxLength = 64;
                this.columnCode.MaxLength = 20;
                this.columnHICode.MaxLength = 20;
                this.columnPackaging.MaxLength = 50;
                this.columnContent.MaxLength = 128;
                this.columnReqQty.ReadOnly = true;
                this.columnApprovedQty.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_SumGetByIDRow NewspReqOutwardDrugClinicDeptPatient_SumGetByIDRow() {
                return ((spReqOutwardDrugClinicDeptPatient_SumGetByIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spReqOutwardDrugClinicDeptPatient_SumGetByIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spReqOutwardDrugClinicDeptPatient_SumGetByIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChanged != null)) {
                    this.spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChanged(this, new spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatient_SumGetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChanging != null)) {
                    this.spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChanging(this, new spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatient_SumGetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spReqOutwardDrugClinicDeptPatient_SumGetByIDRowDeleted != null)) {
                    this.spReqOutwardDrugClinicDeptPatient_SumGetByIDRowDeleted(this, new spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatient_SumGetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spReqOutwardDrugClinicDeptPatient_SumGetByIDRowDeleting != null)) {
                    this.spReqOutwardDrugClinicDeptPatient_SumGetByIDRowDeleting(this, new spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatient_SumGetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespReqOutwardDrugClinicDeptPatient_SumGetByIDRow(spReqOutwardDrugClinicDeptPatient_SumGetByIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRequestDrugDept ds = new dsRequestDrugDept();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRequestDrugInwardClinicDept_GetByIDRow : global::System.Data.DataRow {
            
            private spRequestDrugInwardClinicDept_GetByIDDataTable tablespRequestDrugInwardClinicDept_GetByID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRequestDrugInwardClinicDept_GetByIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRequestDrugInwardClinicDept_GetByID = ((spRequestDrugInwardClinicDept_GetByIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ReqDrugInClinicDeptID {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqDrugInClinicDeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqDrugInClinicDeptID\' in table \'spRequestDrugInwardClinicD" +
                                "ept_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqDrugInClinicDeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long StaffID {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDept_GetByID.StaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffID\' in table \'spRequestDrugInwardClinicDept_GetByID\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.StaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DeptID {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDept_GetByID.DeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptID\' in table \'spRequestDrugInwardClinicDept_GetByID\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.DeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ReqDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqDate\' in table \'spRequestDrugInwardClinicDept_GetByID\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReqNumCode {
                get {
                    try {
                        return ((string)(this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqNumCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqNumCode\' in table \'spRequestDrugInwardClinicDept_GetByID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqNumCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OutFromStoreID {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDept_GetByID.OutFromStoreIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutFromStoreID\' in table \'spRequestDrugInwardClinicDept_Get" +
                                "ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.OutFromStoreIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InDeptStoreID {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDept_GetByID.InDeptStoreIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDeptStoreID\' in table \'spRequestDrugInwardClinicDept_GetB" +
                                "yID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.InDeptStoreIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tablespRequestDrugInwardClinicDept_GetByID.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'spRequestDrugInwardClinicDept_GetByID\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ReqStatus {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqStatus\' in table \'spRequestDrugInwardClinicDept_GetByID\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_MedProductType {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDept_GetByID.V_MedProductTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_MedProductType\' in table \'spRequestDrugInwardClinicDept_G" +
                                "etByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.V_MedProductTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RefGenDrugCatID_1 {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDept_GetByID.RefGenDrugCatID_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefGenDrugCatID_1\' in table \'spRequestDrugInwardClinicDept_" +
                                "GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.RefGenDrugCatID_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApproved {
                get {
                    try {
                        return ((bool)(this[this.tablespRequestDrugInwardClinicDept_GetByID.IsApprovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsApproved\' in table \'spRequestDrugInwardClinicDept_GetByID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.IsApprovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ApprovedStaffID {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDept_GetByID.ApprovedStaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedStaffID\' in table \'spRequestDrugInwardClinicDept_Ge" +
                                "tByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.ApprovedStaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ApprovedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRequestDrugInwardClinicDept_GetByID.ApprovedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedDate\' in table \'spRequestDrugInwardClinicDept_GetBy" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.ApprovedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FromDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRequestDrugInwardClinicDept_GetByID.FromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FromDate\' in table \'spRequestDrugInwardClinicDept_GetByID\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ToDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRequestDrugInwardClinicDept_GetByID.ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDate\' in table \'spRequestDrugInwardClinicDept_GetByID\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tablespRequestDrugInwardClinicDept_GetByID.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'spRequestDrugInwardClinicDept_GetByID\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InDeptStoreName {
                get {
                    try {
                        return ((string)(this[this.tablespRequestDrugInwardClinicDept_GetByID.InDeptStoreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDeptStoreName\' in table \'spRequestDrugInwardClinicDept_Ge" +
                                "tByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.InDeptStoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutFromStoreName {
                get {
                    try {
                        return ((string)(this[this.tablespRequestDrugInwardClinicDept_GetByID.OutFromStoreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutFromStoreName\' in table \'spRequestDrugInwardClinicDept_G" +
                                "etByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.OutFromStoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DaNhanHang {
                get {
                    try {
                        return ((bool)(this[this.tablespRequestDrugInwardClinicDept_GetByID.DaNhanHangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaNhanHang\' in table \'spRequestDrugInwardClinicDept_GetByID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDept_GetByID.DaNhanHangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqDrugInClinicDeptIDNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.ReqDrugInClinicDeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqDrugInClinicDeptIDNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqDrugInClinicDeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStaffIDNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.StaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStaffIDNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.StaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeptIDNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.DeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeptIDNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.DeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqDateNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.ReqDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqDateNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqNumCodeNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.ReqNumCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqNumCodeNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqNumCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutFromStoreIDNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.OutFromStoreIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutFromStoreIDNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.OutFromStoreIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInDeptStoreIDNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.InDeptStoreIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInDeptStoreIDNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.InDeptStoreIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqStatusNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.ReqStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqStatusNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.ReqStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_MedProductTypeNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.V_MedProductTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_MedProductTypeNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.V_MedProductTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefGenDrugCatID_1Null() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.RefGenDrugCatID_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefGenDrugCatID_1Null() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.RefGenDrugCatID_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsApprovedNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.IsApprovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsApprovedNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.IsApprovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApprovedStaffIDNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.ApprovedStaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApprovedStaffIDNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.ApprovedStaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApprovedDateNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.ApprovedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApprovedDateNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.ApprovedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFromDateNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.FromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFromDateNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.FromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToDateNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToDateNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInDeptStoreNameNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.InDeptStoreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInDeptStoreNameNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.InDeptStoreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutFromStoreNameNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.OutFromStoreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutFromStoreNameNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.OutFromStoreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDaNhanHangNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDept_GetByID.DaNhanHangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDaNhanHangNull() {
                this[this.tablespRequestDrugInwardClinicDept_GetByID.DaNhanHangColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spReqOutwardDrugClinicDeptPatient_GetByIDRow : global::System.Data.DataRow {
            
            private spReqOutwardDrugClinicDeptPatient_GetByIDDataTable tablespReqOutwardDrugClinicDeptPatient_GetByID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spReqOutwardDrugClinicDeptPatient_GetByIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespReqOutwardDrugClinicDeptPatient_GetByID = ((spReqOutwardDrugClinicDeptPatient_GetByIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OutClinicDeptReqID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.OutClinicDeptReqIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutClinicDeptReqID\' in table \'spReqOutwardDrugClinicDeptPat" +
                                "ient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.OutClinicDeptReqIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ReqDrugInClinicDeptID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ReqDrugInClinicDeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqDrugInClinicDeptID\' in table \'spReqOutwardDrugClinicDept" +
                                "Patient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ReqDrugInClinicDeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long GenMedProductID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenMedProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenMedProductID\' in table \'spReqOutwardDrugClinicDeptPatien" +
                                "t_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenMedProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReqQty {
                get {
                    try {
                        return ((decimal)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ReqQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqQty\' in table \'spReqOutwardDrugClinicDeptPatient_GetByID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ReqQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ApprovedQty {
                get {
                    try {
                        return ((decimal)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ApprovedQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedQty\' in table \'spReqOutwardDrugClinicDeptPatient_Ge" +
                                "tByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ApprovedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'spReqOutwardDrugClinicDeptPatient_GetByID\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PtRegistrationID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtRegistrationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtRegistrationID\' in table \'spReqOutwardDrugClinicDeptPatie" +
                                "nt_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtRegistrationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ApprovedNotes {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ApprovedNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedNotes\' in table \'spReqOutwardDrugClinicDeptPatient_" +
                                "GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ApprovedNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BrandName {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.BrandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandName\' in table \'spReqOutwardDrugClinicDeptPatient_GetB" +
                                "yID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GenericName {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenericNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenericName\' in table \'spReqOutwardDrugClinicDeptPatient_Ge" +
                                "tByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenericNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UnitID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'spReqOutwardDrugClinicDeptPatient_GetByID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitName\' in table \'spReqOutwardDrugClinicDeptPatient_GetBy" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'spReqOutwardDrugClinicDeptPatient_GetByID\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HICode {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.HICodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HICode\' in table \'spReqOutwardDrugClinicDeptPatient_GetByID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.HICodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UnitPackaging {
                get {
                    try {
                        return ((int)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitPackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPackaging\' in table \'spReqOutwardDrugClinicDeptPatient_" +
                                "GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitPackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Packaging {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Packaging\' in table \'spReqOutwardDrugClinicDeptPatient_GetB" +
                                "yID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Content {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Content\' in table \'spReqOutwardDrugClinicDeptPatient_GetByI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte RegTypeID {
                get {
                    try {
                        return ((byte)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.RegTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegTypeID\' in table \'spReqOutwardDrugClinicDeptPatient_GetB" +
                                "yID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.RegTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DeptID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.DeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptID\' in table \'spReqOutwardDrugClinicDeptPatient_GetByID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.DeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientID\' in table \'spReqOutwardDrugClinicDeptPatient_GetB" +
                                "yID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long EmergRecID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.EmergRecIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmergRecID\' in table \'spReqOutwardDrugClinicDeptPatient_Get" +
                                "ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.EmergRecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long StaffID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.StaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffID\' in table \'spReqOutwardDrugClinicDeptPatient_GetByI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.StaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExamDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ExamDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamDate\' in table \'spReqOutwardDrugClinicDeptPatient_GetBy" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ExamDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_DocumentTypeOnHold {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_DocumentTypeOnHoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_DocumentTypeOnHold\' in table \'spReqOutwardDrugClinicDeptP" +
                                "atient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_DocumentTypeOnHoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SequenceNo {
                get {
                    try {
                        return ((int)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.SequenceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SequenceNo\' in table \'spReqOutwardDrugClinicDeptPatient_Get" +
                                "ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.SequenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_RegistrationStatus {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegistrationStatus\' in table \'spReqOutwardDrugClinicDeptP" +
                                "atient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long HisID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.HisIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HisID\' in table \'spReqOutwardDrugClinicDeptPatient_GetByID\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.HisIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double PtInsuranceBenefit {
                get {
                    try {
                        return ((double)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtInsuranceBenefitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtInsuranceBenefit\' in table \'spReqOutwardDrugClinicDeptPat" +
                                "ient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtInsuranceBenefitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCrossRegion {
                get {
                    try {
                        return ((bool)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IsCrossRegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCrossRegion\' in table \'spReqOutwardDrugClinicDeptPatient_" +
                                "GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IsCrossRegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PaperReferalID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PaperReferalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaperReferalID\' in table \'spReqOutwardDrugClinicDeptPatient" +
                                "_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PaperReferalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PtRegistrationCode {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtRegistrationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtRegistrationCode\' in table \'spReqOutwardDrugClinicDeptPat" +
                                "ient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtRegistrationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientClassID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientClassID\' in table \'spReqOutwardDrugClinicDeptPatient" +
                                "_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MarkedAsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.MarkedAsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarkedAsDeleted\' in table \'spReqOutwardDrugClinicDeptPatien" +
                                "t_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.MarkedAsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SomeRegDetailsRemoved {
                get {
                    try {
                        return ((bool)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.SomeRegDetailsRemovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SomeRegDetailsRemoved\' in table \'spReqOutwardDrugClinicDept" +
                                "Patient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.SomeRegDetailsRemovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_RegistrationType {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegistrationType\' in table \'spReqOutwardDrugClinicDeptPat" +
                                "ient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCorrectRoute {
                get {
                    try {
                        return ((bool)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IsCorrectRouteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCorrectRoute\' in table \'spReqOutwardDrugClinicDeptPatient" +
                                "_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IsCorrectRouteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ProgSumMinusMinHI {
                get {
                    try {
                        return ((decimal)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ProgSumMinusMinHIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgSumMinusMinHI\' in table \'spReqOutwardDrugClinicDeptPati" +
                                "ent_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ProgSumMinusMinHIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_RegistrationPaymentStatus {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationPaymentStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegistrationPaymentStatus\' in table \'spReqOutwardDrugClin" +
                                "icDeptPatient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationPaymentStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_RegistrationClosingStatus {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationClosingStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegistrationClosingStatus\' in table \'spReqOutwardDrugClin" +
                                "icDeptPatient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationClosingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UpdateFlagLocked {
                get {
                    try {
                        return ((bool)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UpdateFlagLockedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateFlagLocked\' in table \'spReqOutwardDrugClinicDeptPatie" +
                                "nt_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UpdateFlagLockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'spReqOutwardDrugClinicDeptPatient_GetBy" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientCode {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientCode\' in table \'spReqOutwardDrugClinicDeptPatient_Ge" +
                                "tByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientBarcode {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientBarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientBarcode\' in table \'spReqOutwardDrugClinicDeptPatient" +
                                "_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientBarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'spReqOutwardDrugClinicDeptPatient_GetByID\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IDNumber {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IDNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDNumber\' in table \'spReqOutwardDrugClinicDeptPatient_GetBy" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IDNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientEmailAddress {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientEmailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientEmailAddress\' in table \'spReqOutwardDrugClinicDeptPa" +
                                "tient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientEmailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'spReqOutwardDrugClinicDeptPatient_GetByID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientPhoneNumber\' in table \'spReqOutwardDrugClinicDeptPat" +
                                "ient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientStreetAddress {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientStreetAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientStreetAddress\' in table \'spReqOutwardDrugClinicDeptP" +
                                "atient_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientStreetAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutClinicDeptReqIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.OutClinicDeptReqIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutClinicDeptReqIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.OutClinicDeptReqIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqDrugInClinicDeptIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ReqDrugInClinicDeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqDrugInClinicDeptIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ReqDrugInClinicDeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenMedProductIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenMedProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenMedProductIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenMedProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqQtyNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ReqQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqQtyNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ReqQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApprovedQtyNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ApprovedQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApprovedQtyNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ApprovedQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPtRegistrationIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtRegistrationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPtRegistrationIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtRegistrationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApprovedNotesNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ApprovedNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApprovedNotesNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ApprovedNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrandNameNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.BrandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrandNameNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.BrandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenericNameNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenericNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenericNameNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenericNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitNameNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHICodeNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.HICodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHICodeNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.HICodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitPackagingNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitPackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitPackagingNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UnitPackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPackagingNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPackagingNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContentNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContentNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegTypeIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.RegTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegTypeIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.RegTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeptIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.DeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeptIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.DeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmergRecIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.EmergRecIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmergRecIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.EmergRecIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStaffIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.StaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStaffIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.StaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExamDateNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ExamDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExamDateNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ExamDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_DocumentTypeOnHoldNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_DocumentTypeOnHoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_DocumentTypeOnHoldNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_DocumentTypeOnHoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSequenceNoNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.SequenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSequenceNoNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.SequenceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_RegistrationStatusNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_RegistrationStatusNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHisIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.HisIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHisIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.HisIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPtInsuranceBenefitNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtInsuranceBenefitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPtInsuranceBenefitNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtInsuranceBenefitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsCrossRegionNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IsCrossRegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsCrossRegionNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IsCrossRegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaperReferalIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PaperReferalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaperReferalIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PaperReferalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPtRegistrationCodeNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtRegistrationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPtRegistrationCodeNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PtRegistrationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientClassIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientClassIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarkedAsDeletedNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.MarkedAsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarkedAsDeletedNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.MarkedAsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSomeRegDetailsRemovedNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.SomeRegDetailsRemovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSomeRegDetailsRemovedNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.SomeRegDetailsRemovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_RegistrationTypeNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_RegistrationTypeNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsCorrectRouteNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IsCorrectRouteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsCorrectRouteNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IsCorrectRouteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgSumMinusMinHINull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ProgSumMinusMinHIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgSumMinusMinHINull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.ProgSumMinusMinHIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_RegistrationPaymentStatusNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationPaymentStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_RegistrationPaymentStatusNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationPaymentStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_RegistrationClosingStatusNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationClosingStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_RegistrationClosingStatusNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.V_RegistrationClosingStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateFlagLockedNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UpdateFlagLockedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateFlagLockedNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.UpdateFlagLockedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientCodeNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientCodeNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientBarcodeNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientBarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientBarcodeNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientBarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOBNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOBNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDNumberNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IDNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDNumberNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.IDNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientEmailAddressNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientEmailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientEmailAddressNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientEmailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenderNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientPhoneNumberNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientPhoneNumberNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientStreetAddressNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientStreetAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientStreetAddressNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_GetByID.PatientStreetAddressColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spReqOutwardDrugClinicDeptPatient_SumGetByIDRow : global::System.Data.DataRow {
            
            private spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable tablespReqOutwardDrugClinicDeptPatient_SumGetByID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spReqOutwardDrugClinicDeptPatient_SumGetByIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID = ((spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long GenMedProductID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.GenMedProductIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenMedProductID\' in table \'spReqOutwardDrugClinicDeptPatien" +
                                "t_SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.GenMedProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ReqDrugInClinicDeptID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ReqDrugInClinicDeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqDrugInClinicDeptID\' in table \'spReqOutwardDrugClinicDept" +
                                "Patient_SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ReqDrugInClinicDeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BrandName {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.BrandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandName\' in table \'spReqOutwardDrugClinicDeptPatient_SumG" +
                                "etByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GenericName {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.GenericNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenericName\' in table \'spReqOutwardDrugClinicDeptPatient_Su" +
                                "mGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.GenericNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UnitID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'spReqOutwardDrugClinicDeptPatient_SumGetB" +
                                "yID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitName\' in table \'spReqOutwardDrugClinicDeptPatient_SumGe" +
                                "tByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Code {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Code\' in table \'spReqOutwardDrugClinicDeptPatient_SumGetByI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HICode {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.HICodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HICode\' in table \'spReqOutwardDrugClinicDeptPatient_SumGetB" +
                                "yID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.HICodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UnitPackaging {
                get {
                    try {
                        return ((int)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitPackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPackaging\' in table \'spReqOutwardDrugClinicDeptPatient_" +
                                "SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitPackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Packaging {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.PackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Packaging\' in table \'spReqOutwardDrugClinicDeptPatient_SumG" +
                                "etByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.PackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Content {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Content\' in table \'spReqOutwardDrugClinicDeptPatient_SumGet" +
                                "ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ReqQty {
                get {
                    try {
                        return ((decimal)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ReqQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqQty\' in table \'spReqOutwardDrugClinicDeptPatient_SumGetB" +
                                "yID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ReqQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ApprovedQty {
                get {
                    try {
                        return ((decimal)(this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ApprovedQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedQty\' in table \'spReqOutwardDrugClinicDeptPatient_Su" +
                                "mGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ApprovedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenMedProductIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.GenMedProductIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenMedProductIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.GenMedProductIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqDrugInClinicDeptIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ReqDrugInClinicDeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqDrugInClinicDeptIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ReqDrugInClinicDeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrandNameNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.BrandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrandNameNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.BrandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenericNameNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.GenericNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenericNameNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.GenericNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitNameNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHICodeNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.HICodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHICodeNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.HICodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitPackagingNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitPackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitPackagingNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.UnitPackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPackagingNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.PackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPackagingNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.PackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContentNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContentNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqQtyNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ReqQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqQtyNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ReqQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApprovedQtyNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ApprovedQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApprovedQtyNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatient_SumGetByID.ApprovedQtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spRequestDrugInwardClinicDept_GetByIDRowChangeEvent : global::System.EventArgs {
            
            private spRequestDrugInwardClinicDept_GetByIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRequestDrugInwardClinicDept_GetByIDRowChangeEvent(spRequestDrugInwardClinicDept_GetByIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRequestDrugInwardClinicDept_GetByIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEvent : global::System.EventArgs {
            
            private spReqOutwardDrugClinicDeptPatient_GetByIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_GetByIDRowChangeEvent(spReqOutwardDrugClinicDeptPatient_GetByIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_GetByIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEvent : global::System.EventArgs {
            
            private spReqOutwardDrugClinicDeptPatient_SumGetByIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_SumGetByIDRowChangeEvent(spReqOutwardDrugClinicDeptPatient_SumGetByIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spReqOutwardDrugClinicDeptPatient_SumGetByIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace eHCMS.ReportLib.RptDrugDepts.DataSchema.Request.dsRequestDrugDeptTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRequestDrugInwardClinicDept_GetByIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spRequestDrugInwardClinicDept_GetByIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRequestDrugInwardClinicDept_GetByID";
            tableMapping.ColumnMappings.Add("ReqDrugInClinicDeptID", "ReqDrugInClinicDeptID");
            tableMapping.ColumnMappings.Add("StaffID", "StaffID");
            tableMapping.ColumnMappings.Add("DeptID", "DeptID");
            tableMapping.ColumnMappings.Add("ReqDate", "ReqDate");
            tableMapping.ColumnMappings.Add("ReqNumCode", "ReqNumCode");
            tableMapping.ColumnMappings.Add("OutFromStoreID", "OutFromStoreID");
            tableMapping.ColumnMappings.Add("InDeptStoreID", "InDeptStoreID");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("ReqStatus", "ReqStatus");
            tableMapping.ColumnMappings.Add("V_MedProductType", "V_MedProductType");
            tableMapping.ColumnMappings.Add("RefGenDrugCatID_1", "RefGenDrugCatID_1");
            tableMapping.ColumnMappings.Add("IsApproved", "IsApproved");
            tableMapping.ColumnMappings.Add("ApprovedStaffID", "ApprovedStaffID");
            tableMapping.ColumnMappings.Add("ApprovedDate", "ApprovedDate");
            tableMapping.ColumnMappings.Add("FromDate", "FromDate");
            tableMapping.ColumnMappings.Add("ToDate", "ToDate");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("InDeptStoreName", "InDeptStoreName");
            tableMapping.ColumnMappings.Add("OutFromStoreName", "OutFromStoreName");
            tableMapping.ColumnMappings.Add("DaNhanHang", "DaNhanHang");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRequestDrugInwardClinicDept_GetByID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReqDrugInClinicDeptID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRequestDrugDept.spRequestDrugInwardClinicDept_GetByIDDataTable dataTable, global::System.Nullable<long> ReqDrugInClinicDeptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReqDrugInClinicDeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(ReqDrugInClinicDeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRequestDrugDept.spRequestDrugInwardClinicDept_GetByIDDataTable GetData(global::System.Nullable<long> ReqDrugInClinicDeptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReqDrugInClinicDeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(ReqDrugInClinicDeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsRequestDrugDept.spRequestDrugInwardClinicDept_GetByIDDataTable dataTable = new dsRequestDrugDept.spRequestDrugInwardClinicDept_GetByIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spReqOutwardDrugClinicDeptPatient_GetByIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spReqOutwardDrugClinicDeptPatient_GetByIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spReqOutwardDrugClinicDeptPatient_GetByID";
            tableMapping.ColumnMappings.Add("OutClinicDeptReqID", "OutClinicDeptReqID");
            tableMapping.ColumnMappings.Add("ReqDrugInClinicDeptID", "ReqDrugInClinicDeptID");
            tableMapping.ColumnMappings.Add("GenMedProductID", "GenMedProductID");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("PtRegistrationID", "PtRegistrationID");
            tableMapping.ColumnMappings.Add("ApprovedNotes", "ApprovedNotes");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("GenericName", "GenericName");
            tableMapping.ColumnMappings.Add("UnitID", "UnitID");
            tableMapping.ColumnMappings.Add("UnitName", "UnitName");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("HICode", "HICode");
            tableMapping.ColumnMappings.Add("UnitPackaging", "UnitPackaging");
            tableMapping.ColumnMappings.Add("Packaging", "Packaging");
            tableMapping.ColumnMappings.Add("Content", "Content");
            tableMapping.ColumnMappings.Add("RegTypeID", "RegTypeID");
            tableMapping.ColumnMappings.Add("DeptID", "DeptID");
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("EmergRecID", "EmergRecID");
            tableMapping.ColumnMappings.Add("StaffID", "StaffID");
            tableMapping.ColumnMappings.Add("ExamDate", "ExamDate");
            tableMapping.ColumnMappings.Add("V_DocumentTypeOnHold", "V_DocumentTypeOnHold");
            tableMapping.ColumnMappings.Add("SequenceNo", "SequenceNo");
            tableMapping.ColumnMappings.Add("V_RegistrationStatus", "V_RegistrationStatus");
            tableMapping.ColumnMappings.Add("HisID", "HisID");
            tableMapping.ColumnMappings.Add("PtInsuranceBenefit", "PtInsuranceBenefit");
            tableMapping.ColumnMappings.Add("IsCrossRegion", "IsCrossRegion");
            tableMapping.ColumnMappings.Add("PaperReferalID", "PaperReferalID");
            tableMapping.ColumnMappings.Add("PtRegistrationCode", "PtRegistrationCode");
            tableMapping.ColumnMappings.Add("PatientClassID", "PatientClassID");
            tableMapping.ColumnMappings.Add("MarkedAsDeleted", "MarkedAsDeleted");
            tableMapping.ColumnMappings.Add("SomeRegDetailsRemoved", "SomeRegDetailsRemoved");
            tableMapping.ColumnMappings.Add("V_RegistrationType", "V_RegistrationType");
            tableMapping.ColumnMappings.Add("IsCorrectRoute", "IsCorrectRoute");
            tableMapping.ColumnMappings.Add("ProgSumMinusMinHI", "ProgSumMinusMinHI");
            tableMapping.ColumnMappings.Add("V_RegistrationPaymentStatus", "V_RegistrationPaymentStatus");
            tableMapping.ColumnMappings.Add("V_RegistrationClosingStatus", "V_RegistrationClosingStatus");
            tableMapping.ColumnMappings.Add("UpdateFlagLocked", "UpdateFlagLocked");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("PatientCode", "PatientCode");
            tableMapping.ColumnMappings.Add("PatientBarcode", "PatientBarcode");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("IDNumber", "IDNumber");
            tableMapping.ColumnMappings.Add("PatientEmailAddress", "PatientEmailAddress");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("PatientPhoneNumber", "PatientPhoneNumber");
            tableMapping.ColumnMappings.Add("PatientStreetAddress", "PatientStreetAddress");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spReqOutwardDrugClinicDeptPatient_GetByID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReqDrugInClinicDeptID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRequestDrugDept.spReqOutwardDrugClinicDeptPatient_GetByIDDataTable dataTable, global::System.Nullable<long> ReqDrugInClinicDeptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReqDrugInClinicDeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(ReqDrugInClinicDeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRequestDrugDept.spReqOutwardDrugClinicDeptPatient_GetByIDDataTable GetData(global::System.Nullable<long> ReqDrugInClinicDeptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReqDrugInClinicDeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(ReqDrugInClinicDeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsRequestDrugDept.spReqOutwardDrugClinicDeptPatient_GetByIDDataTable dataTable = new dsRequestDrugDept.spReqOutwardDrugClinicDeptPatient_GetByIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spReqOutwardDrugClinicDeptPatient_SumGetByIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spReqOutwardDrugClinicDeptPatient_SumGetByIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spReqOutwardDrugClinicDeptPatient_SumGetByID";
            tableMapping.ColumnMappings.Add("GenMedProductID", "GenMedProductID");
            tableMapping.ColumnMappings.Add("ReqDrugInClinicDeptID", "ReqDrugInClinicDeptID");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("GenericName", "GenericName");
            tableMapping.ColumnMappings.Add("UnitID", "UnitID");
            tableMapping.ColumnMappings.Add("UnitName", "UnitName");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("HICode", "HICode");
            tableMapping.ColumnMappings.Add("UnitPackaging", "UnitPackaging");
            tableMapping.ColumnMappings.Add("Packaging", "Packaging");
            tableMapping.ColumnMappings.Add("Content", "Content");
            tableMapping.ColumnMappings.Add("ReqQty", "ReqQty");
            tableMapping.ColumnMappings.Add("ApprovedQty", "ApprovedQty");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spReqOutwardDrugClinicDeptPatient_SumGetByID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReqDrugInClinicDeptID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRequestDrugDept.spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable dataTable, global::System.Nullable<long> ReqDrugInClinicDeptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReqDrugInClinicDeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(ReqDrugInClinicDeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRequestDrugDept.spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable GetData(global::System.Nullable<long> ReqDrugInClinicDeptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReqDrugInClinicDeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(ReqDrugInClinicDeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsRequestDrugDept.spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable dataTable = new dsRequestDrugDept.spReqOutwardDrugClinicDeptPatient_SumGetByIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsRequestDrugDept dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsRequestDrugDept dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsRequestDrugDept dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsRequestDrugDept dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591