//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eHCMS.ReportLib.RptDrugDepts.DataSchema.Request {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsXRptRequestDrugDeptDetailsGroupByPatient")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsXRptRequestDrugDeptDetailsGroupByPatient : global::System.Data.DataSet {
        
        private spXRptRequestDrugDeptDetailsGroupByPatientDataTable tablespXRptRequestDrugDeptDetailsGroupByPatient;
        
        private spXRptRequestDrugDeptHeaderByPatientDataTable tablespXRptRequestDrugDeptHeaderByPatient;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public dsXRptRequestDrugDeptDetailsGroupByPatient() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected dsXRptRequestDrugDeptDetailsGroupByPatient(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spXRptRequestDrugDeptDetailsGroupByPatient"] != null)) {
                    base.Tables.Add(new spXRptRequestDrugDeptDetailsGroupByPatientDataTable(ds.Tables["spXRptRequestDrugDeptDetailsGroupByPatient"]));
                }
                if ((ds.Tables["spXRptRequestDrugDeptHeaderByPatient"] != null)) {
                    base.Tables.Add(new spXRptRequestDrugDeptHeaderByPatientDataTable(ds.Tables["spXRptRequestDrugDeptHeaderByPatient"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spXRptRequestDrugDeptDetailsGroupByPatientDataTable spXRptRequestDrugDeptDetailsGroupByPatient {
            get {
                return this.tablespXRptRequestDrugDeptDetailsGroupByPatient;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spXRptRequestDrugDeptHeaderByPatientDataTable spXRptRequestDrugDeptHeaderByPatient {
            get {
                return this.tablespXRptRequestDrugDeptHeaderByPatient;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsXRptRequestDrugDeptDetailsGroupByPatient cln = ((dsXRptRequestDrugDeptDetailsGroupByPatient)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spXRptRequestDrugDeptDetailsGroupByPatient"] != null)) {
                    base.Tables.Add(new spXRptRequestDrugDeptDetailsGroupByPatientDataTable(ds.Tables["spXRptRequestDrugDeptDetailsGroupByPatient"]));
                }
                if ((ds.Tables["spXRptRequestDrugDeptHeaderByPatient"] != null)) {
                    base.Tables.Add(new spXRptRequestDrugDeptHeaderByPatientDataTable(ds.Tables["spXRptRequestDrugDeptHeaderByPatient"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespXRptRequestDrugDeptDetailsGroupByPatient = ((spXRptRequestDrugDeptDetailsGroupByPatientDataTable)(base.Tables["spXRptRequestDrugDeptDetailsGroupByPatient"]));
            if ((initTable == true)) {
                if ((this.tablespXRptRequestDrugDeptDetailsGroupByPatient != null)) {
                    this.tablespXRptRequestDrugDeptDetailsGroupByPatient.InitVars();
                }
            }
            this.tablespXRptRequestDrugDeptHeaderByPatient = ((spXRptRequestDrugDeptHeaderByPatientDataTable)(base.Tables["spXRptRequestDrugDeptHeaderByPatient"]));
            if ((initTable == true)) {
                if ((this.tablespXRptRequestDrugDeptHeaderByPatient != null)) {
                    this.tablespXRptRequestDrugDeptHeaderByPatient.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsXRptRequestDrugDeptDetailsGroupByPatient";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsXRptRequestDrugDeptDetailsGroupByPatient.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespXRptRequestDrugDeptDetailsGroupByPatient = new spXRptRequestDrugDeptDetailsGroupByPatientDataTable();
            base.Tables.Add(this.tablespXRptRequestDrugDeptDetailsGroupByPatient);
            this.tablespXRptRequestDrugDeptHeaderByPatient = new spXRptRequestDrugDeptHeaderByPatientDataTable();
            base.Tables.Add(this.tablespXRptRequestDrugDeptHeaderByPatient);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializespXRptRequestDrugDeptDetailsGroupByPatient() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializespXRptRequestDrugDeptHeaderByPatient() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsXRptRequestDrugDeptDetailsGroupByPatient ds = new dsXRptRequestDrugDeptDetailsGroupByPatient();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEventHandler(object sender, spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void spXRptRequestDrugDeptHeaderByPatientRowChangeEventHandler(object sender, spXRptRequestDrugDeptHeaderByPatientRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spXRptRequestDrugDeptDetailsGroupByPatientDataTable : global::System.Data.TypedTableBase<spXRptRequestDrugDeptDetailsGroupByPatientRow> {
            
            private global::System.Data.DataColumn columnOutClinicDeptReqID;
            
            private global::System.Data.DataColumn columnReqDrugInClinicDeptID;
            
            private global::System.Data.DataColumn columnGenMedProductID;
            
            private global::System.Data.DataColumn columnReqQty;
            
            private global::System.Data.DataColumn columnApprovedQty;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnPtRegistrationID;
            
            private global::System.Data.DataColumn columnApprovedNotes;
            
            private global::System.Data.DataColumn columnoutiID;
            
            private global::System.Data.DataColumn columnStaffID;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnDateTimeSelection;
            
            private global::System.Data.DataColumn columnPrescribedQty;
            
            private global::System.Data.DataColumn columnItemVerfStat;
            
            private global::System.Data.DataColumn columnMDose;
            
            private global::System.Data.DataColumn columnMDoseStr;
            
            private global::System.Data.DataColumn columnADose;
            
            private global::System.Data.DataColumn columnADoseStr;
            
            private global::System.Data.DataColumn columnEDose;
            
            private global::System.Data.DataColumn columnEDoseStr;
            
            private global::System.Data.DataColumn columnNDose;
            
            private global::System.Data.DataColumn columnNDoseStr;
            
            private global::System.Data.DataColumn columnDoctorStaffID;
            
            private global::System.Data.DataColumn columnMedicalInstructionDate;
            
            private global::System.Data.DataColumn columnIntravenousPlan_InPtID;
            
            private global::System.Data.DataColumn columnIntPtDiagDrInstructionID;
            
            private global::System.Data.DataColumn columnReqQtyStr;
            
            private global::System.Data.DataColumn columnIsLoadedForReqList;
            
            private global::System.Data.DataColumn columnOutClinicDeptReqID_Orig;
            
            private global::System.Data.DataColumn columnUpdatedStaffID;
            
            private global::System.Data.DataColumn columnUpdatedDate;
            
            private global::System.Data.DataColumn columnAntibioticTreatmentID;
            
            private global::System.Data.DataColumn columnAntibioticOrdinal;
            
            private global::System.Data.DataColumn columnIsCreatedOutward;
            
            private global::System.Data.DataColumn columnUsageDistance;
            
            private global::System.Data.DataColumn columnDoctorStaffName;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnGenericName;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnHICode;
            
            private global::System.Data.DataColumn columnUnitPackaging;
            
            private global::System.Data.DataColumn columnPackaging;
            
            private global::System.Data.DataColumn columnContent;
            
            private global::System.Data.DataColumn columnDispenseVolume;
            
            private global::System.Data.DataColumn columnPtRegistrationID1;
            
            private global::System.Data.DataColumn columnRegTypeID;
            
            private global::System.Data.DataColumn columnDeptID;
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnEmergRecID;
            
            private global::System.Data.DataColumn columnStaffID1;
            
            private global::System.Data.DataColumn columnHIApprovedStaffID;
            
            private global::System.Data.DataColumn columnExamDate;
            
            private global::System.Data.DataColumn columnV_DocumentTypeOnHold;
            
            private global::System.Data.DataColumn columnSequenceNo;
            
            private global::System.Data.DataColumn columnV_RegistrationStatus;
            
            private global::System.Data.DataColumn columnHisID;
            
            private global::System.Data.DataColumn columnPtInsuranceBenefit;
            
            private global::System.Data.DataColumn columnIsCrossRegion;
            
            private global::System.Data.DataColumn columnPaperReferalID;
            
            private global::System.Data.DataColumn columnPtRegistrationCode;
            
            private global::System.Data.DataColumn columnPatientClassID;
            
            private global::System.Data.DataColumn columnMarkedAsDeleted;
            
            private global::System.Data.DataColumn columnSomeRegDetailsRemoved;
            
            private global::System.Data.DataColumn columnV_RegistrationType;
            
            private global::System.Data.DataColumn columnIsCorrectRoute;
            
            private global::System.Data.DataColumn columnProgSumMinusMinHI;
            
            private global::System.Data.DataColumn columnV_RegistrationPaymentStatus;
            
            private global::System.Data.DataColumn columnV_RegistrationClosingStatus;
            
            private global::System.Data.DataColumn columnV_RegForPatientOfType;
            
            private global::System.Data.DataColumn columnUpdateFlagLocked;
            
            private global::System.Data.DataColumn columnRecCreatedDate;
            
            private global::System.Data.DataColumn columnHIComment;
            
            private global::System.Data.DataColumn columnRegCancelDate;
            
            private global::System.Data.DataColumn columnRegCancelStaffID;
            
            private global::System.Data.DataColumn columnIsForeigner;
            
            private global::System.Data.DataColumn columnReConfirmHIDate;
            
            private global::System.Data.DataColumn columnNotTreatedAsInPt;
            
            private global::System.Data.DataColumn columnHIRemovedStaffID;
            
            private global::System.Data.DataColumn columnRemoveHIDate;
            
            private global::System.Data.DataColumn columnActivityLog;
            
            private global::System.Data.DataColumn columnIsHICard_FiveYearsCont;
            
            private global::System.Data.DataColumn columnIsChildUnder6YearsOld;
            
            private global::System.Data.DataColumn columnHIReportID;
            
            private global::System.Data.DataColumn columnIsAllowCrossRegion;
            
            private global::System.Data.DataColumn columnApplied02Version1;
            
            private global::System.Data.DataColumn columnIsHICard_FiveYearsCont_NoPaid;
            
            private global::System.Data.DataColumn columnHisID_2;
            
            private global::System.Data.DataColumn columnPtInsuranceBenefit_2;
            
            private global::System.Data.DataColumn columnHisID_3;
            
            private global::System.Data.DataColumn columnPtInsuranceBenefit_3;
            
            private global::System.Data.DataColumn columnPaperReferralID_2;
            
            private global::System.Data.DataColumn columnPaperReferralID_3;
            
            private global::System.Data.DataColumn columnIsCrossRegion_2;
            
            private global::System.Data.DataColumn columnIsCrossRegion_3;
            
            private global::System.Data.DataColumn columnFiveYearsAppliedDate;
            
            private global::System.Data.DataColumn columnV_ReportStatus;
            
            private global::System.Data.DataColumn columnFinalizeCounter;
            
            private global::System.Data.DataColumn columnHIConfirmDate;
            
            private global::System.Data.DataColumn columnReportAppliedCode;
            
            private global::System.Data.DataColumn columnOutPtRegistrationID;
            
            private global::System.Data.DataColumn columnNgoaiDinhSuat;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnPatientCode;
            
            private global::System.Data.DataColumn columnPatientBarcode;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnIDNumber;
            
            private global::System.Data.DataColumn columnPatientEmailAddress;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnPatientPhoneNumber;
            
            private global::System.Data.DataColumn columnPatientStreetAddress;
            
            private global::System.Data.DataColumn columnStaffName;
            
            private global::System.Data.DataColumn columnRemainingQty;
            
            private global::System.Data.DataColumn columnIsReplaceMedMat;
            
            private global::System.Data.DataColumn columnIsDisposeMedMat;
            
            private global::System.Data.DataColumn columnBedNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptDetailsGroupByPatientDataTable() {
                this.TableName = "spXRptRequestDrugDeptDetailsGroupByPatient";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spXRptRequestDrugDeptDetailsGroupByPatientDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected spXRptRequestDrugDeptDetailsGroupByPatientDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutClinicDeptReqIDColumn {
                get {
                    return this.columnOutClinicDeptReqID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReqDrugInClinicDeptIDColumn {
                get {
                    return this.columnReqDrugInClinicDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GenMedProductIDColumn {
                get {
                    return this.columnGenMedProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReqQtyColumn {
                get {
                    return this.columnReqQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ApprovedQtyColumn {
                get {
                    return this.columnApprovedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PtRegistrationIDColumn {
                get {
                    return this.columnPtRegistrationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ApprovedNotesColumn {
                get {
                    return this.columnApprovedNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn outiIDColumn {
                get {
                    return this.columnoutiID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StaffIDColumn {
                get {
                    return this.columnStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DateTimeSelectionColumn {
                get {
                    return this.columnDateTimeSelection;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PrescribedQtyColumn {
                get {
                    return this.columnPrescribedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ItemVerfStatColumn {
                get {
                    return this.columnItemVerfStat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MDoseColumn {
                get {
                    return this.columnMDose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MDoseStrColumn {
                get {
                    return this.columnMDoseStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ADoseColumn {
                get {
                    return this.columnADose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ADoseStrColumn {
                get {
                    return this.columnADoseStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EDoseColumn {
                get {
                    return this.columnEDose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EDoseStrColumn {
                get {
                    return this.columnEDoseStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NDoseColumn {
                get {
                    return this.columnNDose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NDoseStrColumn {
                get {
                    return this.columnNDoseStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DoctorStaffIDColumn {
                get {
                    return this.columnDoctorStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MedicalInstructionDateColumn {
                get {
                    return this.columnMedicalInstructionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IntravenousPlan_InPtIDColumn {
                get {
                    return this.columnIntravenousPlan_InPtID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IntPtDiagDrInstructionIDColumn {
                get {
                    return this.columnIntPtDiagDrInstructionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReqQtyStrColumn {
                get {
                    return this.columnReqQtyStr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsLoadedForReqListColumn {
                get {
                    return this.columnIsLoadedForReqList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutClinicDeptReqID_OrigColumn {
                get {
                    return this.columnOutClinicDeptReqID_Orig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UpdatedStaffIDColumn {
                get {
                    return this.columnUpdatedStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UpdatedDateColumn {
                get {
                    return this.columnUpdatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AntibioticTreatmentIDColumn {
                get {
                    return this.columnAntibioticTreatmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AntibioticOrdinalColumn {
                get {
                    return this.columnAntibioticOrdinal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsCreatedOutwardColumn {
                get {
                    return this.columnIsCreatedOutward;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UsageDistanceColumn {
                get {
                    return this.columnUsageDistance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DoctorStaffNameColumn {
                get {
                    return this.columnDoctorStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GenericNameColumn {
                get {
                    return this.columnGenericName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HICodeColumn {
                get {
                    return this.columnHICode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UnitPackagingColumn {
                get {
                    return this.columnUnitPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PackagingColumn {
                get {
                    return this.columnPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ContentColumn {
                get {
                    return this.columnContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DispenseVolumeColumn {
                get {
                    return this.columnDispenseVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PtRegistrationID1Column {
                get {
                    return this.columnPtRegistrationID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RegTypeIDColumn {
                get {
                    return this.columnRegTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DeptIDColumn {
                get {
                    return this.columnDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EmergRecIDColumn {
                get {
                    return this.columnEmergRecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StaffID1Column {
                get {
                    return this.columnStaffID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HIApprovedStaffIDColumn {
                get {
                    return this.columnHIApprovedStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ExamDateColumn {
                get {
                    return this.columnExamDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_DocumentTypeOnHoldColumn {
                get {
                    return this.columnV_DocumentTypeOnHold;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SequenceNoColumn {
                get {
                    return this.columnSequenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_RegistrationStatusColumn {
                get {
                    return this.columnV_RegistrationStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HisIDColumn {
                get {
                    return this.columnHisID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PtInsuranceBenefitColumn {
                get {
                    return this.columnPtInsuranceBenefit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsCrossRegionColumn {
                get {
                    return this.columnIsCrossRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PaperReferalIDColumn {
                get {
                    return this.columnPaperReferalID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PtRegistrationCodeColumn {
                get {
                    return this.columnPtRegistrationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientClassIDColumn {
                get {
                    return this.columnPatientClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MarkedAsDeletedColumn {
                get {
                    return this.columnMarkedAsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SomeRegDetailsRemovedColumn {
                get {
                    return this.columnSomeRegDetailsRemoved;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_RegistrationTypeColumn {
                get {
                    return this.columnV_RegistrationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsCorrectRouteColumn {
                get {
                    return this.columnIsCorrectRoute;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgSumMinusMinHIColumn {
                get {
                    return this.columnProgSumMinusMinHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_RegistrationPaymentStatusColumn {
                get {
                    return this.columnV_RegistrationPaymentStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_RegistrationClosingStatusColumn {
                get {
                    return this.columnV_RegistrationClosingStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_RegForPatientOfTypeColumn {
                get {
                    return this.columnV_RegForPatientOfType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn UpdateFlagLockedColumn {
                get {
                    return this.columnUpdateFlagLocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RecCreatedDateColumn {
                get {
                    return this.columnRecCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HICommentColumn {
                get {
                    return this.columnHIComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RegCancelDateColumn {
                get {
                    return this.columnRegCancelDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RegCancelStaffIDColumn {
                get {
                    return this.columnRegCancelStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsForeignerColumn {
                get {
                    return this.columnIsForeigner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReConfirmHIDateColumn {
                get {
                    return this.columnReConfirmHIDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NotTreatedAsInPtColumn {
                get {
                    return this.columnNotTreatedAsInPt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HIRemovedStaffIDColumn {
                get {
                    return this.columnHIRemovedStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RemoveHIDateColumn {
                get {
                    return this.columnRemoveHIDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ActivityLogColumn {
                get {
                    return this.columnActivityLog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsHICard_FiveYearsContColumn {
                get {
                    return this.columnIsHICard_FiveYearsCont;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsChildUnder6YearsOldColumn {
                get {
                    return this.columnIsChildUnder6YearsOld;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HIReportIDColumn {
                get {
                    return this.columnHIReportID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsAllowCrossRegionColumn {
                get {
                    return this.columnIsAllowCrossRegion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn Applied02Version1Column {
                get {
                    return this.columnApplied02Version1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsHICard_FiveYearsCont_NoPaidColumn {
                get {
                    return this.columnIsHICard_FiveYearsCont_NoPaid;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HisID_2Column {
                get {
                    return this.columnHisID_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PtInsuranceBenefit_2Column {
                get {
                    return this.columnPtInsuranceBenefit_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HisID_3Column {
                get {
                    return this.columnHisID_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PtInsuranceBenefit_3Column {
                get {
                    return this.columnPtInsuranceBenefit_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PaperReferralID_2Column {
                get {
                    return this.columnPaperReferralID_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PaperReferralID_3Column {
                get {
                    return this.columnPaperReferralID_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsCrossRegion_2Column {
                get {
                    return this.columnIsCrossRegion_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsCrossRegion_3Column {
                get {
                    return this.columnIsCrossRegion_3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FiveYearsAppliedDateColumn {
                get {
                    return this.columnFiveYearsAppliedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_ReportStatusColumn {
                get {
                    return this.columnV_ReportStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FinalizeCounterColumn {
                get {
                    return this.columnFinalizeCounter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HIConfirmDateColumn {
                get {
                    return this.columnHIConfirmDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReportAppliedCodeColumn {
                get {
                    return this.columnReportAppliedCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutPtRegistrationIDColumn {
                get {
                    return this.columnOutPtRegistrationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NgoaiDinhSuatColumn {
                get {
                    return this.columnNgoaiDinhSuat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientCodeColumn {
                get {
                    return this.columnPatientCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientBarcodeColumn {
                get {
                    return this.columnPatientBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDNumberColumn {
                get {
                    return this.columnIDNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientEmailAddressColumn {
                get {
                    return this.columnPatientEmailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientPhoneNumberColumn {
                get {
                    return this.columnPatientPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientStreetAddressColumn {
                get {
                    return this.columnPatientStreetAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StaffNameColumn {
                get {
                    return this.columnStaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RemainingQtyColumn {
                get {
                    return this.columnRemainingQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsReplaceMedMatColumn {
                get {
                    return this.columnIsReplaceMedMat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsDisposeMedMatColumn {
                get {
                    return this.columnIsDisposeMedMat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BedNumberColumn {
                get {
                    return this.columnBedNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptDetailsGroupByPatientRow this[int index] {
                get {
                    return ((spXRptRequestDrugDeptDetailsGroupByPatientRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEventHandler spXRptRequestDrugDeptDetailsGroupByPatientRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEventHandler spXRptRequestDrugDeptDetailsGroupByPatientRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEventHandler spXRptRequestDrugDeptDetailsGroupByPatientRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEventHandler spXRptRequestDrugDeptDetailsGroupByPatientRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddspXRptRequestDrugDeptDetailsGroupByPatientRow(spXRptRequestDrugDeptDetailsGroupByPatientRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptDetailsGroupByPatientRow AddspXRptRequestDrugDeptDetailsGroupByPatientRow(
                        long ReqDrugInClinicDeptID, 
                        long GenMedProductID, 
                        decimal ReqQty, 
                        decimal ApprovedQty, 
                        string Notes, 
                        long PtRegistrationID, 
                        string ApprovedNotes, 
                        long outiID, 
                        long StaffID, 
                        System.DateTime CreateDate, 
                        System.DateTime DateTimeSelection, 
                        decimal PrescribedQty, 
                        short ItemVerfStat, 
                        float MDose, 
                        string MDoseStr, 
                        float ADose, 
                        string ADoseStr, 
                        float EDose, 
                        string EDoseStr, 
                        float NDose, 
                        string NDoseStr, 
                        long DoctorStaffID, 
                        System.DateTime MedicalInstructionDate, 
                        long IntravenousPlan_InPtID, 
                        long IntPtDiagDrInstructionID, 
                        string ReqQtyStr, 
                        bool IsLoadedForReqList, 
                        long OutClinicDeptReqID_Orig, 
                        long UpdatedStaffID, 
                        System.DateTime UpdatedDate, 
                        long AntibioticTreatmentID, 
                        int AntibioticOrdinal, 
                        bool IsCreatedOutward, 
                        string UsageDistance, 
                        string DoctorStaffName, 
                        string BrandName, 
                        string GenericName, 
                        long UnitID, 
                        string UnitName, 
                        string Code, 
                        string HICode, 
                        int UnitPackaging, 
                        string Packaging, 
                        string Content, 
                        double DispenseVolume, 
                        byte RegTypeID, 
                        long DeptID, 
                        long PatientID, 
                        long EmergRecID, 
                        long StaffID1, 
                        long HIApprovedStaffID, 
                        System.DateTime ExamDate, 
                        long V_DocumentTypeOnHold, 
                        int SequenceNo, 
                        long V_RegistrationStatus, 
                        long HisID, 
                        double PtInsuranceBenefit, 
                        bool IsCrossRegion, 
                        long PaperReferalID, 
                        string PtRegistrationCode, 
                        long PatientClassID, 
                        bool MarkedAsDeleted, 
                        bool SomeRegDetailsRemoved, 
                        long V_RegistrationType, 
                        bool IsCorrectRoute, 
                        decimal ProgSumMinusMinHI, 
                        long V_RegistrationPaymentStatus, 
                        long V_RegistrationClosingStatus, 
                        long V_RegForPatientOfType, 
                        bool UpdateFlagLocked, 
                        System.DateTime RecCreatedDate, 
                        string HIComment, 
                        System.DateTime RegCancelDate, 
                        long RegCancelStaffID, 
                        bool IsForeigner, 
                        System.DateTime ReConfirmHIDate, 
                        bool NotTreatedAsInPt, 
                        long HIRemovedStaffID, 
                        System.DateTime RemoveHIDate, 
                        string ActivityLog, 
                        bool IsHICard_FiveYearsCont, 
                        bool IsChildUnder6YearsOld, 
                        long HIReportID, 
                        bool IsAllowCrossRegion, 
                        short Applied02Version1, 
                        bool IsHICard_FiveYearsCont_NoPaid, 
                        long HisID_2, 
                        double PtInsuranceBenefit_2, 
                        long HisID_3, 
                        double PtInsuranceBenefit_3, 
                        long PaperReferralID_2, 
                        long PaperReferralID_3, 
                        bool IsCrossRegion_2, 
                        bool IsCrossRegion_3, 
                        System.DateTime FiveYearsAppliedDate, 
                        long V_ReportStatus, 
                        byte FinalizeCounter, 
                        System.DateTime HIConfirmDate, 
                        string ReportAppliedCode, 
                        long OutPtRegistrationID, 
                        bool NgoaiDinhSuat, 
                        string FullName, 
                        string PatientCode, 
                        string PatientBarcode, 
                        System.DateTime DOB, 
                        string IDNumber, 
                        string PatientEmailAddress, 
                        string Gender, 
                        string PatientPhoneNumber, 
                        string PatientStreetAddress, 
                        string StaffName, 
                        decimal RemainingQty, 
                        int IsReplaceMedMat, 
                        int IsDisposeMedMat, 
                        string BedNumber) {
                spXRptRequestDrugDeptDetailsGroupByPatientRow rowspXRptRequestDrugDeptDetailsGroupByPatientRow = ((spXRptRequestDrugDeptDetailsGroupByPatientRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        ReqDrugInClinicDeptID,
                        GenMedProductID,
                        ReqQty,
                        ApprovedQty,
                        Notes,
                        PtRegistrationID,
                        ApprovedNotes,
                        outiID,
                        StaffID,
                        CreateDate,
                        DateTimeSelection,
                        PrescribedQty,
                        ItemVerfStat,
                        MDose,
                        MDoseStr,
                        ADose,
                        ADoseStr,
                        EDose,
                        EDoseStr,
                        NDose,
                        NDoseStr,
                        DoctorStaffID,
                        MedicalInstructionDate,
                        IntravenousPlan_InPtID,
                        IntPtDiagDrInstructionID,
                        ReqQtyStr,
                        IsLoadedForReqList,
                        OutClinicDeptReqID_Orig,
                        UpdatedStaffID,
                        UpdatedDate,
                        AntibioticTreatmentID,
                        AntibioticOrdinal,
                        IsCreatedOutward,
                        UsageDistance,
                        DoctorStaffName,
                        BrandName,
                        GenericName,
                        UnitID,
                        UnitName,
                        Code,
                        HICode,
                        UnitPackaging,
                        Packaging,
                        Content,
                        DispenseVolume,
                        null,
                        RegTypeID,
                        DeptID,
                        PatientID,
                        EmergRecID,
                        StaffID1,
                        HIApprovedStaffID,
                        ExamDate,
                        V_DocumentTypeOnHold,
                        SequenceNo,
                        V_RegistrationStatus,
                        HisID,
                        PtInsuranceBenefit,
                        IsCrossRegion,
                        PaperReferalID,
                        PtRegistrationCode,
                        PatientClassID,
                        MarkedAsDeleted,
                        SomeRegDetailsRemoved,
                        V_RegistrationType,
                        IsCorrectRoute,
                        ProgSumMinusMinHI,
                        V_RegistrationPaymentStatus,
                        V_RegistrationClosingStatus,
                        V_RegForPatientOfType,
                        UpdateFlagLocked,
                        RecCreatedDate,
                        HIComment,
                        RegCancelDate,
                        RegCancelStaffID,
                        IsForeigner,
                        ReConfirmHIDate,
                        NotTreatedAsInPt,
                        HIRemovedStaffID,
                        RemoveHIDate,
                        ActivityLog,
                        IsHICard_FiveYearsCont,
                        IsChildUnder6YearsOld,
                        HIReportID,
                        IsAllowCrossRegion,
                        Applied02Version1,
                        IsHICard_FiveYearsCont_NoPaid,
                        HisID_2,
                        PtInsuranceBenefit_2,
                        HisID_3,
                        PtInsuranceBenefit_3,
                        PaperReferralID_2,
                        PaperReferralID_3,
                        IsCrossRegion_2,
                        IsCrossRegion_3,
                        FiveYearsAppliedDate,
                        V_ReportStatus,
                        FinalizeCounter,
                        HIConfirmDate,
                        ReportAppliedCode,
                        OutPtRegistrationID,
                        NgoaiDinhSuat,
                        FullName,
                        PatientCode,
                        PatientBarcode,
                        DOB,
                        IDNumber,
                        PatientEmailAddress,
                        Gender,
                        PatientPhoneNumber,
                        PatientStreetAddress,
                        StaffName,
                        RemainingQty,
                        IsReplaceMedMat,
                        IsDisposeMedMat,
                        BedNumber};
                rowspXRptRequestDrugDeptDetailsGroupByPatientRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspXRptRequestDrugDeptDetailsGroupByPatientRow);
                return rowspXRptRequestDrugDeptDetailsGroupByPatientRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spXRptRequestDrugDeptDetailsGroupByPatientDataTable cln = ((spXRptRequestDrugDeptDetailsGroupByPatientDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spXRptRequestDrugDeptDetailsGroupByPatientDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnOutClinicDeptReqID = base.Columns["OutClinicDeptReqID"];
                this.columnReqDrugInClinicDeptID = base.Columns["ReqDrugInClinicDeptID"];
                this.columnGenMedProductID = base.Columns["GenMedProductID"];
                this.columnReqQty = base.Columns["ReqQty"];
                this.columnApprovedQty = base.Columns["ApprovedQty"];
                this.columnNotes = base.Columns["Notes"];
                this.columnPtRegistrationID = base.Columns["PtRegistrationID"];
                this.columnApprovedNotes = base.Columns["ApprovedNotes"];
                this.columnoutiID = base.Columns["outiID"];
                this.columnStaffID = base.Columns["StaffID"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnDateTimeSelection = base.Columns["DateTimeSelection"];
                this.columnPrescribedQty = base.Columns["PrescribedQty"];
                this.columnItemVerfStat = base.Columns["ItemVerfStat"];
                this.columnMDose = base.Columns["MDose"];
                this.columnMDoseStr = base.Columns["MDoseStr"];
                this.columnADose = base.Columns["ADose"];
                this.columnADoseStr = base.Columns["ADoseStr"];
                this.columnEDose = base.Columns["EDose"];
                this.columnEDoseStr = base.Columns["EDoseStr"];
                this.columnNDose = base.Columns["NDose"];
                this.columnNDoseStr = base.Columns["NDoseStr"];
                this.columnDoctorStaffID = base.Columns["DoctorStaffID"];
                this.columnMedicalInstructionDate = base.Columns["MedicalInstructionDate"];
                this.columnIntravenousPlan_InPtID = base.Columns["IntravenousPlan_InPtID"];
                this.columnIntPtDiagDrInstructionID = base.Columns["IntPtDiagDrInstructionID"];
                this.columnReqQtyStr = base.Columns["ReqQtyStr"];
                this.columnIsLoadedForReqList = base.Columns["IsLoadedForReqList"];
                this.columnOutClinicDeptReqID_Orig = base.Columns["OutClinicDeptReqID_Orig"];
                this.columnUpdatedStaffID = base.Columns["UpdatedStaffID"];
                this.columnUpdatedDate = base.Columns["UpdatedDate"];
                this.columnAntibioticTreatmentID = base.Columns["AntibioticTreatmentID"];
                this.columnAntibioticOrdinal = base.Columns["AntibioticOrdinal"];
                this.columnIsCreatedOutward = base.Columns["IsCreatedOutward"];
                this.columnUsageDistance = base.Columns["UsageDistance"];
                this.columnDoctorStaffName = base.Columns["DoctorStaffName"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnGenericName = base.Columns["GenericName"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnCode = base.Columns["Code"];
                this.columnHICode = base.Columns["HICode"];
                this.columnUnitPackaging = base.Columns["UnitPackaging"];
                this.columnPackaging = base.Columns["Packaging"];
                this.columnContent = base.Columns["Content"];
                this.columnDispenseVolume = base.Columns["DispenseVolume"];
                this.columnPtRegistrationID1 = base.Columns["PtRegistrationID1"];
                this.columnRegTypeID = base.Columns["RegTypeID"];
                this.columnDeptID = base.Columns["DeptID"];
                this.columnPatientID = base.Columns["PatientID"];
                this.columnEmergRecID = base.Columns["EmergRecID"];
                this.columnStaffID1 = base.Columns["StaffID1"];
                this.columnHIApprovedStaffID = base.Columns["HIApprovedStaffID"];
                this.columnExamDate = base.Columns["ExamDate"];
                this.columnV_DocumentTypeOnHold = base.Columns["V_DocumentTypeOnHold"];
                this.columnSequenceNo = base.Columns["SequenceNo"];
                this.columnV_RegistrationStatus = base.Columns["V_RegistrationStatus"];
                this.columnHisID = base.Columns["HisID"];
                this.columnPtInsuranceBenefit = base.Columns["PtInsuranceBenefit"];
                this.columnIsCrossRegion = base.Columns["IsCrossRegion"];
                this.columnPaperReferalID = base.Columns["PaperReferalID"];
                this.columnPtRegistrationCode = base.Columns["PtRegistrationCode"];
                this.columnPatientClassID = base.Columns["PatientClassID"];
                this.columnMarkedAsDeleted = base.Columns["MarkedAsDeleted"];
                this.columnSomeRegDetailsRemoved = base.Columns["SomeRegDetailsRemoved"];
                this.columnV_RegistrationType = base.Columns["V_RegistrationType"];
                this.columnIsCorrectRoute = base.Columns["IsCorrectRoute"];
                this.columnProgSumMinusMinHI = base.Columns["ProgSumMinusMinHI"];
                this.columnV_RegistrationPaymentStatus = base.Columns["V_RegistrationPaymentStatus"];
                this.columnV_RegistrationClosingStatus = base.Columns["V_RegistrationClosingStatus"];
                this.columnV_RegForPatientOfType = base.Columns["V_RegForPatientOfType"];
                this.columnUpdateFlagLocked = base.Columns["UpdateFlagLocked"];
                this.columnRecCreatedDate = base.Columns["RecCreatedDate"];
                this.columnHIComment = base.Columns["HIComment"];
                this.columnRegCancelDate = base.Columns["RegCancelDate"];
                this.columnRegCancelStaffID = base.Columns["RegCancelStaffID"];
                this.columnIsForeigner = base.Columns["IsForeigner"];
                this.columnReConfirmHIDate = base.Columns["ReConfirmHIDate"];
                this.columnNotTreatedAsInPt = base.Columns["NotTreatedAsInPt"];
                this.columnHIRemovedStaffID = base.Columns["HIRemovedStaffID"];
                this.columnRemoveHIDate = base.Columns["RemoveHIDate"];
                this.columnActivityLog = base.Columns["ActivityLog"];
                this.columnIsHICard_FiveYearsCont = base.Columns["IsHICard_FiveYearsCont"];
                this.columnIsChildUnder6YearsOld = base.Columns["IsChildUnder6YearsOld"];
                this.columnHIReportID = base.Columns["HIReportID"];
                this.columnIsAllowCrossRegion = base.Columns["IsAllowCrossRegion"];
                this.columnApplied02Version1 = base.Columns["Applied02Version1"];
                this.columnIsHICard_FiveYearsCont_NoPaid = base.Columns["IsHICard_FiveYearsCont_NoPaid"];
                this.columnHisID_2 = base.Columns["HisID_2"];
                this.columnPtInsuranceBenefit_2 = base.Columns["PtInsuranceBenefit_2"];
                this.columnHisID_3 = base.Columns["HisID_3"];
                this.columnPtInsuranceBenefit_3 = base.Columns["PtInsuranceBenefit_3"];
                this.columnPaperReferralID_2 = base.Columns["PaperReferralID_2"];
                this.columnPaperReferralID_3 = base.Columns["PaperReferralID_3"];
                this.columnIsCrossRegion_2 = base.Columns["IsCrossRegion_2"];
                this.columnIsCrossRegion_3 = base.Columns["IsCrossRegion_3"];
                this.columnFiveYearsAppliedDate = base.Columns["FiveYearsAppliedDate"];
                this.columnV_ReportStatus = base.Columns["V_ReportStatus"];
                this.columnFinalizeCounter = base.Columns["FinalizeCounter"];
                this.columnHIConfirmDate = base.Columns["HIConfirmDate"];
                this.columnReportAppliedCode = base.Columns["ReportAppliedCode"];
                this.columnOutPtRegistrationID = base.Columns["OutPtRegistrationID"];
                this.columnNgoaiDinhSuat = base.Columns["NgoaiDinhSuat"];
                this.columnFullName = base.Columns["FullName"];
                this.columnPatientCode = base.Columns["PatientCode"];
                this.columnPatientBarcode = base.Columns["PatientBarcode"];
                this.columnDOB = base.Columns["DOB"];
                this.columnIDNumber = base.Columns["IDNumber"];
                this.columnPatientEmailAddress = base.Columns["PatientEmailAddress"];
                this.columnGender = base.Columns["Gender"];
                this.columnPatientPhoneNumber = base.Columns["PatientPhoneNumber"];
                this.columnPatientStreetAddress = base.Columns["PatientStreetAddress"];
                this.columnStaffName = base.Columns["StaffName"];
                this.columnRemainingQty = base.Columns["RemainingQty"];
                this.columnIsReplaceMedMat = base.Columns["IsReplaceMedMat"];
                this.columnIsDisposeMedMat = base.Columns["IsDisposeMedMat"];
                this.columnBedNumber = base.Columns["BedNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnOutClinicDeptReqID = new global::System.Data.DataColumn("OutClinicDeptReqID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutClinicDeptReqID);
                this.columnReqDrugInClinicDeptID = new global::System.Data.DataColumn("ReqDrugInClinicDeptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqDrugInClinicDeptID);
                this.columnGenMedProductID = new global::System.Data.DataColumn("GenMedProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenMedProductID);
                this.columnReqQty = new global::System.Data.DataColumn("ReqQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqQty);
                this.columnApprovedQty = new global::System.Data.DataColumn("ApprovedQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedQty);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnPtRegistrationID = new global::System.Data.DataColumn("PtRegistrationID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegistrationID);
                this.columnApprovedNotes = new global::System.Data.DataColumn("ApprovedNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedNotes);
                this.columnoutiID = new global::System.Data.DataColumn("outiID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoutiID);
                this.columnStaffID = new global::System.Data.DataColumn("StaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnDateTimeSelection = new global::System.Data.DataColumn("DateTimeSelection", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTimeSelection);
                this.columnPrescribedQty = new global::System.Data.DataColumn("PrescribedQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescribedQty);
                this.columnItemVerfStat = new global::System.Data.DataColumn("ItemVerfStat", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnItemVerfStat);
                this.columnMDose = new global::System.Data.DataColumn("MDose", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDose);
                this.columnMDoseStr = new global::System.Data.DataColumn("MDoseStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDoseStr);
                this.columnADose = new global::System.Data.DataColumn("ADose", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADose);
                this.columnADoseStr = new global::System.Data.DataColumn("ADoseStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADoseStr);
                this.columnEDose = new global::System.Data.DataColumn("EDose", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDose);
                this.columnEDoseStr = new global::System.Data.DataColumn("EDoseStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDoseStr);
                this.columnNDose = new global::System.Data.DataColumn("NDose", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNDose);
                this.columnNDoseStr = new global::System.Data.DataColumn("NDoseStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNDoseStr);
                this.columnDoctorStaffID = new global::System.Data.DataColumn("DoctorStaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctorStaffID);
                this.columnMedicalInstructionDate = new global::System.Data.DataColumn("MedicalInstructionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalInstructionDate);
                this.columnIntravenousPlan_InPtID = new global::System.Data.DataColumn("IntravenousPlan_InPtID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntravenousPlan_InPtID);
                this.columnIntPtDiagDrInstructionID = new global::System.Data.DataColumn("IntPtDiagDrInstructionID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntPtDiagDrInstructionID);
                this.columnReqQtyStr = new global::System.Data.DataColumn("ReqQtyStr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqQtyStr);
                this.columnIsLoadedForReqList = new global::System.Data.DataColumn("IsLoadedForReqList", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsLoadedForReqList);
                this.columnOutClinicDeptReqID_Orig = new global::System.Data.DataColumn("OutClinicDeptReqID_Orig", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutClinicDeptReqID_Orig);
                this.columnUpdatedStaffID = new global::System.Data.DataColumn("UpdatedStaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedStaffID);
                this.columnUpdatedDate = new global::System.Data.DataColumn("UpdatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdatedDate);
                this.columnAntibioticTreatmentID = new global::System.Data.DataColumn("AntibioticTreatmentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntibioticTreatmentID);
                this.columnAntibioticOrdinal = new global::System.Data.DataColumn("AntibioticOrdinal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAntibioticOrdinal);
                this.columnIsCreatedOutward = new global::System.Data.DataColumn("IsCreatedOutward", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCreatedOutward);
                this.columnUsageDistance = new global::System.Data.DataColumn("UsageDistance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsageDistance);
                this.columnDoctorStaffName = new global::System.Data.DataColumn("DoctorStaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctorStaffName);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnGenericName = new global::System.Data.DataColumn("GenericName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenericName);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnHICode = new global::System.Data.DataColumn("HICode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHICode);
                this.columnUnitPackaging = new global::System.Data.DataColumn("UnitPackaging", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPackaging);
                this.columnPackaging = new global::System.Data.DataColumn("Packaging", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackaging);
                this.columnContent = new global::System.Data.DataColumn("Content", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContent);
                this.columnDispenseVolume = new global::System.Data.DataColumn("DispenseVolume", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispenseVolume);
                this.columnPtRegistrationID1 = new global::System.Data.DataColumn("PtRegistrationID1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegistrationID1);
                this.columnRegTypeID = new global::System.Data.DataColumn("RegTypeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegTypeID);
                this.columnDeptID = new global::System.Data.DataColumn("DeptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptID);
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnEmergRecID = new global::System.Data.DataColumn("EmergRecID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmergRecID);
                this.columnStaffID1 = new global::System.Data.DataColumn("StaffID1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID1);
                this.columnHIApprovedStaffID = new global::System.Data.DataColumn("HIApprovedStaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIApprovedStaffID);
                this.columnExamDate = new global::System.Data.DataColumn("ExamDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamDate);
                this.columnV_DocumentTypeOnHold = new global::System.Data.DataColumn("V_DocumentTypeOnHold", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_DocumentTypeOnHold);
                this.columnSequenceNo = new global::System.Data.DataColumn("SequenceNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequenceNo);
                this.columnV_RegistrationStatus = new global::System.Data.DataColumn("V_RegistrationStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegistrationStatus);
                this.columnHisID = new global::System.Data.DataColumn("HisID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHisID);
                this.columnPtInsuranceBenefit = new global::System.Data.DataColumn("PtInsuranceBenefit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtInsuranceBenefit);
                this.columnIsCrossRegion = new global::System.Data.DataColumn("IsCrossRegion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCrossRegion);
                this.columnPaperReferalID = new global::System.Data.DataColumn("PaperReferalID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaperReferalID);
                this.columnPtRegistrationCode = new global::System.Data.DataColumn("PtRegistrationCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegistrationCode);
                this.columnPatientClassID = new global::System.Data.DataColumn("PatientClassID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientClassID);
                this.columnMarkedAsDeleted = new global::System.Data.DataColumn("MarkedAsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkedAsDeleted);
                this.columnSomeRegDetailsRemoved = new global::System.Data.DataColumn("SomeRegDetailsRemoved", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSomeRegDetailsRemoved);
                this.columnV_RegistrationType = new global::System.Data.DataColumn("V_RegistrationType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegistrationType);
                this.columnIsCorrectRoute = new global::System.Data.DataColumn("IsCorrectRoute", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCorrectRoute);
                this.columnProgSumMinusMinHI = new global::System.Data.DataColumn("ProgSumMinusMinHI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgSumMinusMinHI);
                this.columnV_RegistrationPaymentStatus = new global::System.Data.DataColumn("V_RegistrationPaymentStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegistrationPaymentStatus);
                this.columnV_RegistrationClosingStatus = new global::System.Data.DataColumn("V_RegistrationClosingStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegistrationClosingStatus);
                this.columnV_RegForPatientOfType = new global::System.Data.DataColumn("V_RegForPatientOfType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegForPatientOfType);
                this.columnUpdateFlagLocked = new global::System.Data.DataColumn("UpdateFlagLocked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateFlagLocked);
                this.columnRecCreatedDate = new global::System.Data.DataColumn("RecCreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecCreatedDate);
                this.columnHIComment = new global::System.Data.DataColumn("HIComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIComment);
                this.columnRegCancelDate = new global::System.Data.DataColumn("RegCancelDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegCancelDate);
                this.columnRegCancelStaffID = new global::System.Data.DataColumn("RegCancelStaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegCancelStaffID);
                this.columnIsForeigner = new global::System.Data.DataColumn("IsForeigner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsForeigner);
                this.columnReConfirmHIDate = new global::System.Data.DataColumn("ReConfirmHIDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReConfirmHIDate);
                this.columnNotTreatedAsInPt = new global::System.Data.DataColumn("NotTreatedAsInPt", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotTreatedAsInPt);
                this.columnHIRemovedStaffID = new global::System.Data.DataColumn("HIRemovedStaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIRemovedStaffID);
                this.columnRemoveHIDate = new global::System.Data.DataColumn("RemoveHIDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemoveHIDate);
                this.columnActivityLog = new global::System.Data.DataColumn("ActivityLog", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivityLog);
                this.columnIsHICard_FiveYearsCont = new global::System.Data.DataColumn("IsHICard_FiveYearsCont", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHICard_FiveYearsCont);
                this.columnIsChildUnder6YearsOld = new global::System.Data.DataColumn("IsChildUnder6YearsOld", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsChildUnder6YearsOld);
                this.columnHIReportID = new global::System.Data.DataColumn("HIReportID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIReportID);
                this.columnIsAllowCrossRegion = new global::System.Data.DataColumn("IsAllowCrossRegion", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsAllowCrossRegion);
                this.columnApplied02Version1 = new global::System.Data.DataColumn("Applied02Version1", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplied02Version1);
                this.columnIsHICard_FiveYearsCont_NoPaid = new global::System.Data.DataColumn("IsHICard_FiveYearsCont_NoPaid", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHICard_FiveYearsCont_NoPaid);
                this.columnHisID_2 = new global::System.Data.DataColumn("HisID_2", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHisID_2);
                this.columnPtInsuranceBenefit_2 = new global::System.Data.DataColumn("PtInsuranceBenefit_2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtInsuranceBenefit_2);
                this.columnHisID_3 = new global::System.Data.DataColumn("HisID_3", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHisID_3);
                this.columnPtInsuranceBenefit_3 = new global::System.Data.DataColumn("PtInsuranceBenefit_3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtInsuranceBenefit_3);
                this.columnPaperReferralID_2 = new global::System.Data.DataColumn("PaperReferralID_2", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaperReferralID_2);
                this.columnPaperReferralID_3 = new global::System.Data.DataColumn("PaperReferralID_3", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaperReferralID_3);
                this.columnIsCrossRegion_2 = new global::System.Data.DataColumn("IsCrossRegion_2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCrossRegion_2);
                this.columnIsCrossRegion_3 = new global::System.Data.DataColumn("IsCrossRegion_3", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsCrossRegion_3);
                this.columnFiveYearsAppliedDate = new global::System.Data.DataColumn("FiveYearsAppliedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiveYearsAppliedDate);
                this.columnV_ReportStatus = new global::System.Data.DataColumn("V_ReportStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_ReportStatus);
                this.columnFinalizeCounter = new global::System.Data.DataColumn("FinalizeCounter", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalizeCounter);
                this.columnHIConfirmDate = new global::System.Data.DataColumn("HIConfirmDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIConfirmDate);
                this.columnReportAppliedCode = new global::System.Data.DataColumn("ReportAppliedCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReportAppliedCode);
                this.columnOutPtRegistrationID = new global::System.Data.DataColumn("OutPtRegistrationID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutPtRegistrationID);
                this.columnNgoaiDinhSuat = new global::System.Data.DataColumn("NgoaiDinhSuat", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNgoaiDinhSuat);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnPatientCode = new global::System.Data.DataColumn("PatientCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientCode);
                this.columnPatientBarcode = new global::System.Data.DataColumn("PatientBarcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientBarcode);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnIDNumber = new global::System.Data.DataColumn("IDNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDNumber);
                this.columnPatientEmailAddress = new global::System.Data.DataColumn("PatientEmailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientEmailAddress);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnPatientPhoneNumber = new global::System.Data.DataColumn("PatientPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientPhoneNumber);
                this.columnPatientStreetAddress = new global::System.Data.DataColumn("PatientStreetAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientStreetAddress);
                this.columnStaffName = new global::System.Data.DataColumn("StaffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffName);
                this.columnRemainingQty = new global::System.Data.DataColumn("RemainingQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemainingQty);
                this.columnIsReplaceMedMat = new global::System.Data.DataColumn("IsReplaceMedMat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsReplaceMedMat);
                this.columnIsDisposeMedMat = new global::System.Data.DataColumn("IsDisposeMedMat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDisposeMedMat);
                this.columnBedNumber = new global::System.Data.DataColumn("BedNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBedNumber);
                this.columnOutClinicDeptReqID.AutoIncrement = true;
                this.columnOutClinicDeptReqID.AutoIncrementSeed = -1;
                this.columnOutClinicDeptReqID.AutoIncrementStep = -1;
                this.columnOutClinicDeptReqID.AllowDBNull = false;
                this.columnOutClinicDeptReqID.ReadOnly = true;
                this.columnReqDrugInClinicDeptID.AllowDBNull = false;
                this.columnGenMedProductID.AllowDBNull = false;
                this.columnReqQty.AllowDBNull = false;
                this.columnApprovedQty.AllowDBNull = false;
                this.columnNotes.MaxLength = 256;
                this.columnApprovedNotes.MaxLength = 256;
                this.columnCreateDate.AllowDBNull = false;
                this.columnMDoseStr.MaxLength = 10;
                this.columnADoseStr.MaxLength = 10;
                this.columnEDoseStr.MaxLength = 10;
                this.columnNDoseStr.MaxLength = 10;
                this.columnReqQtyStr.MaxLength = 10;
                this.columnIsLoadedForReqList.AllowDBNull = false;
                this.columnUsageDistance.MaxLength = 128;
                this.columnDoctorStaffName.MaxLength = 65;
                this.columnBrandName.AllowDBNull = false;
                this.columnBrandName.MaxLength = 512;
                this.columnGenericName.MaxLength = 256;
                this.columnUnitName.MaxLength = 64;
                this.columnCode.AllowDBNull = false;
                this.columnCode.MaxLength = 20;
                this.columnHICode.MaxLength = 255;
                this.columnPackaging.MaxLength = 50;
                this.columnContent.ReadOnly = true;
                this.columnContent.MaxLength = 128;
                this.columnPtRegistrationID1.AutoIncrement = true;
                this.columnPtRegistrationID1.AutoIncrementSeed = -1;
                this.columnPtRegistrationID1.AutoIncrementStep = -1;
                this.columnPtRegistrationID1.ReadOnly = true;
                this.columnPtRegistrationCode.MaxLength = 20;
                this.columnHIComment.MaxLength = 256;
                this.columnActivityLog.MaxLength = 1024;
                this.columnReportAppliedCode.MaxLength = 256;
                this.columnFullName.MaxLength = 65;
                this.columnPatientCode.MaxLength = 16;
                this.columnPatientBarcode.MaxLength = 13;
                this.columnIDNumber.MaxLength = 15;
                this.columnPatientEmailAddress.MaxLength = 80;
                this.columnGender.MaxLength = 1;
                this.columnPatientPhoneNumber.MaxLength = 17;
                this.columnPatientStreetAddress.MaxLength = 255;
                this.columnStaffName.MaxLength = 65;
                this.columnRemainingQty.ReadOnly = true;
                this.columnIsReplaceMedMat.ReadOnly = true;
                this.columnIsDisposeMedMat.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptDetailsGroupByPatientRow NewspXRptRequestDrugDeptDetailsGroupByPatientRow() {
                return ((spXRptRequestDrugDeptDetailsGroupByPatientRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spXRptRequestDrugDeptDetailsGroupByPatientRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spXRptRequestDrugDeptDetailsGroupByPatientRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spXRptRequestDrugDeptDetailsGroupByPatientRowChanged != null)) {
                    this.spXRptRequestDrugDeptDetailsGroupByPatientRowChanged(this, new spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEvent(((spXRptRequestDrugDeptDetailsGroupByPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spXRptRequestDrugDeptDetailsGroupByPatientRowChanging != null)) {
                    this.spXRptRequestDrugDeptDetailsGroupByPatientRowChanging(this, new spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEvent(((spXRptRequestDrugDeptDetailsGroupByPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spXRptRequestDrugDeptDetailsGroupByPatientRowDeleted != null)) {
                    this.spXRptRequestDrugDeptDetailsGroupByPatientRowDeleted(this, new spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEvent(((spXRptRequestDrugDeptDetailsGroupByPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spXRptRequestDrugDeptDetailsGroupByPatientRowDeleting != null)) {
                    this.spXRptRequestDrugDeptDetailsGroupByPatientRowDeleting(this, new spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEvent(((spXRptRequestDrugDeptDetailsGroupByPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemovespXRptRequestDrugDeptDetailsGroupByPatientRow(spXRptRequestDrugDeptDetailsGroupByPatientRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsXRptRequestDrugDeptDetailsGroupByPatient ds = new dsXRptRequestDrugDeptDetailsGroupByPatient();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spXRptRequestDrugDeptDetailsGroupByPatientDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spXRptRequestDrugDeptHeaderByPatientDataTable : global::System.Data.TypedTableBase<spXRptRequestDrugDeptHeaderByPatientRow> {
            
            private global::System.Data.DataColumn columnShow;
            
            private global::System.Data.DataColumn columnOutInvID;
            
            private global::System.Data.DataColumn columnOutDate;
            
            private global::System.Data.DataColumn columnInDeptStoreName;
            
            private global::System.Data.DataColumn columnNurseFullName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptHeaderByPatientDataTable() {
                this.TableName = "spXRptRequestDrugDeptHeaderByPatient";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spXRptRequestDrugDeptHeaderByPatientDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected spXRptRequestDrugDeptHeaderByPatientDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ShowColumn {
                get {
                    return this.columnShow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutInvIDColumn {
                get {
                    return this.columnOutInvID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OutDateColumn {
                get {
                    return this.columnOutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn InDeptStoreNameColumn {
                get {
                    return this.columnInDeptStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NurseFullNameColumn {
                get {
                    return this.columnNurseFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptHeaderByPatientRow this[int index] {
                get {
                    return ((spXRptRequestDrugDeptHeaderByPatientRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spXRptRequestDrugDeptHeaderByPatientRowChangeEventHandler spXRptRequestDrugDeptHeaderByPatientRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spXRptRequestDrugDeptHeaderByPatientRowChangeEventHandler spXRptRequestDrugDeptHeaderByPatientRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spXRptRequestDrugDeptHeaderByPatientRowChangeEventHandler spXRptRequestDrugDeptHeaderByPatientRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spXRptRequestDrugDeptHeaderByPatientRowChangeEventHandler spXRptRequestDrugDeptHeaderByPatientRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddspXRptRequestDrugDeptHeaderByPatientRow(spXRptRequestDrugDeptHeaderByPatientRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptHeaderByPatientRow AddspXRptRequestDrugDeptHeaderByPatientRow(string Show, string OutInvID, System.DateTime OutDate, string InDeptStoreName, string NurseFullName) {
                spXRptRequestDrugDeptHeaderByPatientRow rowspXRptRequestDrugDeptHeaderByPatientRow = ((spXRptRequestDrugDeptHeaderByPatientRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Show,
                        OutInvID,
                        OutDate,
                        InDeptStoreName,
                        NurseFullName};
                rowspXRptRequestDrugDeptHeaderByPatientRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspXRptRequestDrugDeptHeaderByPatientRow);
                return rowspXRptRequestDrugDeptHeaderByPatientRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spXRptRequestDrugDeptHeaderByPatientDataTable cln = ((spXRptRequestDrugDeptHeaderByPatientDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spXRptRequestDrugDeptHeaderByPatientDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnShow = base.Columns["Show"];
                this.columnOutInvID = base.Columns["OutInvID"];
                this.columnOutDate = base.Columns["OutDate"];
                this.columnInDeptStoreName = base.Columns["InDeptStoreName"];
                this.columnNurseFullName = base.Columns["NurseFullName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnShow = new global::System.Data.DataColumn("Show", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShow);
                this.columnOutInvID = new global::System.Data.DataColumn("OutInvID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutInvID);
                this.columnOutDate = new global::System.Data.DataColumn("OutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutDate);
                this.columnInDeptStoreName = new global::System.Data.DataColumn("InDeptStoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDeptStoreName);
                this.columnNurseFullName = new global::System.Data.DataColumn("NurseFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNurseFullName);
                this.columnShow.ReadOnly = true;
                this.columnShow.MaxLength = 6;
                this.columnOutInvID.AllowDBNull = false;
                this.columnOutInvID.MaxLength = 15;
                this.columnInDeptStoreName.AllowDBNull = false;
                this.columnInDeptStoreName.MaxLength = 128;
                this.columnNurseFullName.AllowDBNull = false;
                this.columnNurseFullName.MaxLength = 65;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptHeaderByPatientRow NewspXRptRequestDrugDeptHeaderByPatientRow() {
                return ((spXRptRequestDrugDeptHeaderByPatientRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spXRptRequestDrugDeptHeaderByPatientRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spXRptRequestDrugDeptHeaderByPatientRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spXRptRequestDrugDeptHeaderByPatientRowChanged != null)) {
                    this.spXRptRequestDrugDeptHeaderByPatientRowChanged(this, new spXRptRequestDrugDeptHeaderByPatientRowChangeEvent(((spXRptRequestDrugDeptHeaderByPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spXRptRequestDrugDeptHeaderByPatientRowChanging != null)) {
                    this.spXRptRequestDrugDeptHeaderByPatientRowChanging(this, new spXRptRequestDrugDeptHeaderByPatientRowChangeEvent(((spXRptRequestDrugDeptHeaderByPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spXRptRequestDrugDeptHeaderByPatientRowDeleted != null)) {
                    this.spXRptRequestDrugDeptHeaderByPatientRowDeleted(this, new spXRptRequestDrugDeptHeaderByPatientRowChangeEvent(((spXRptRequestDrugDeptHeaderByPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spXRptRequestDrugDeptHeaderByPatientRowDeleting != null)) {
                    this.spXRptRequestDrugDeptHeaderByPatientRowDeleting(this, new spXRptRequestDrugDeptHeaderByPatientRowChangeEvent(((spXRptRequestDrugDeptHeaderByPatientRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemovespXRptRequestDrugDeptHeaderByPatientRow(spXRptRequestDrugDeptHeaderByPatientRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsXRptRequestDrugDeptDetailsGroupByPatient ds = new dsXRptRequestDrugDeptDetailsGroupByPatient();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spXRptRequestDrugDeptHeaderByPatientDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spXRptRequestDrugDeptDetailsGroupByPatientRow : global::System.Data.DataRow {
            
            private spXRptRequestDrugDeptDetailsGroupByPatientDataTable tablespXRptRequestDrugDeptDetailsGroupByPatient;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spXRptRequestDrugDeptDetailsGroupByPatientRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespXRptRequestDrugDeptDetailsGroupByPatient = ((spXRptRequestDrugDeptDetailsGroupByPatientDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long OutClinicDeptReqID {
                get {
                    return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.OutClinicDeptReqIDColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.OutClinicDeptReqIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long ReqDrugInClinicDeptID {
                get {
                    return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReqDrugInClinicDeptIDColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReqDrugInClinicDeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long GenMedProductID {
                get {
                    return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.GenMedProductIDColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.GenMedProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal ReqQty {
                get {
                    return ((decimal)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReqQtyColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReqQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal ApprovedQty {
                get {
                    return ((decimal)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ApprovedQtyColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ApprovedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'spXRptRequestDrugDeptDetailsGroupByPatient" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long PtRegistrationID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtRegistrationID\' in table \'spXRptRequestDrugDeptDetailsGro" +
                                "upByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ApprovedNotes {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ApprovedNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedNotes\' in table \'spXRptRequestDrugDeptDetailsGroupB" +
                                "yPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ApprovedNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long outiID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.outiIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'outiID\' in table \'spXRptRequestDrugDeptDetailsGroupByPatien" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.outiIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long StaffID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffID\' in table \'spXRptRequestDrugDeptDetailsGroupByPatie" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime CreateDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.CreateDateColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DateTimeSelection {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DateTimeSelectionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTimeSelection\' in table \'spXRptRequestDrugDeptDetailsGr" +
                                "oupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DateTimeSelectionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal PrescribedQty {
                get {
                    try {
                        return ((decimal)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PrescribedQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrescribedQty\' in table \'spXRptRequestDrugDeptDetailsGroupB" +
                                "yPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PrescribedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short ItemVerfStat {
                get {
                    try {
                        return ((short)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ItemVerfStatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ItemVerfStat\' in table \'spXRptRequestDrugDeptDetailsGroupBy" +
                                "Patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ItemVerfStatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float MDose {
                get {
                    try {
                        return ((float)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MDoseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDose\' in table \'spXRptRequestDrugDeptDetailsGroupByPatient" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MDoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MDoseStr {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MDoseStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MDoseStr\' in table \'spXRptRequestDrugDeptDetailsGroupByPati" +
                                "ent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MDoseStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float ADose {
                get {
                    try {
                        return ((float)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ADoseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADose\' in table \'spXRptRequestDrugDeptDetailsGroupByPatient" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ADoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ADoseStr {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ADoseStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADoseStr\' in table \'spXRptRequestDrugDeptDetailsGroupByPati" +
                                "ent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ADoseStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float EDose {
                get {
                    try {
                        return ((float)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EDoseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDose\' in table \'spXRptRequestDrugDeptDetailsGroupByPatient" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EDoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EDoseStr {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EDoseStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EDoseStr\' in table \'spXRptRequestDrugDeptDetailsGroupByPati" +
                                "ent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EDoseStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public float NDose {
                get {
                    try {
                        return ((float)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NDoseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NDose\' in table \'spXRptRequestDrugDeptDetailsGroupByPatient" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NDoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NDoseStr {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NDoseStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NDoseStr\' in table \'spXRptRequestDrugDeptDetailsGroupByPati" +
                                "ent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NDoseStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long DoctorStaffID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DoctorStaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoctorStaffID\' in table \'spXRptRequestDrugDeptDetailsGroupB" +
                                "yPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DoctorStaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime MedicalInstructionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MedicalInstructionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicalInstructionDate\' in table \'spXRptRequestDrugDeptDeta" +
                                "ilsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MedicalInstructionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long IntravenousPlan_InPtID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IntravenousPlan_InPtIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntravenousPlan_InPtID\' in table \'spXRptRequestDrugDeptDeta" +
                                "ilsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IntravenousPlan_InPtIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long IntPtDiagDrInstructionID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IntPtDiagDrInstructionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntPtDiagDrInstructionID\' in table \'spXRptRequestDrugDeptDe" +
                                "tailsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IntPtDiagDrInstructionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ReqQtyStr {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReqQtyStrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqQtyStr\' in table \'spXRptRequestDrugDeptDetailsGroupByPat" +
                                "ient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReqQtyStrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLoadedForReqList {
                get {
                    return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsLoadedForReqListColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsLoadedForReqListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long OutClinicDeptReqID_Orig {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.OutClinicDeptReqID_OrigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutClinicDeptReqID_Orig\' in table \'spXRptRequestDrugDeptDet" +
                                "ailsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.OutClinicDeptReqID_OrigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long UpdatedStaffID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdatedStaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedStaffID\' in table \'spXRptRequestDrugDeptDetailsGroup" +
                                "ByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdatedStaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime UpdatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdatedDate\' in table \'spXRptRequestDrugDeptDetailsGroupByP" +
                                "atient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long AntibioticTreatmentID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.AntibioticTreatmentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AntibioticTreatmentID\' in table \'spXRptRequestDrugDeptDetai" +
                                "lsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.AntibioticTreatmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int AntibioticOrdinal {
                get {
                    try {
                        return ((int)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.AntibioticOrdinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AntibioticOrdinal\' in table \'spXRptRequestDrugDeptDetailsGr" +
                                "oupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.AntibioticOrdinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCreatedOutward {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCreatedOutwardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCreatedOutward\' in table \'spXRptRequestDrugDeptDetailsGro" +
                                "upByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCreatedOutwardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UsageDistance {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UsageDistanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UsageDistance\' in table \'spXRptRequestDrugDeptDetailsGroupB" +
                                "yPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UsageDistanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DoctorStaffName {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DoctorStaffNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoctorStaffName\' in table \'spXRptRequestDrugDeptDetailsGrou" +
                                "pByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DoctorStaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BrandName {
                get {
                    return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.BrandNameColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string GenericName {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.GenericNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenericName\' in table \'spXRptRequestDrugDeptDetailsGroupByP" +
                                "atient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.GenericNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long UnitID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'spXRptRequestDrugDeptDetailsGroupByPatien" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitName\' in table \'spXRptRequestDrugDeptDetailsGroupByPati" +
                                "ent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Code {
                get {
                    return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.CodeColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HICode {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HICodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HICode\' in table \'spXRptRequestDrugDeptDetailsGroupByPatien" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HICodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int UnitPackaging {
                get {
                    try {
                        return ((int)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitPackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPackaging\' in table \'spXRptRequestDrugDeptDetailsGroupB" +
                                "yPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitPackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Packaging {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Packaging\' in table \'spXRptRequestDrugDeptDetailsGroupByPat" +
                                "ient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Content {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Content\' in table \'spXRptRequestDrugDeptDetailsGroupByPatie" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double DispenseVolume {
                get {
                    try {
                        return ((double)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DispenseVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DispenseVolume\' in table \'spXRptRequestDrugDeptDetailsGroup" +
                                "ByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DispenseVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long PtRegistrationID1 {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtRegistrationID1\' in table \'spXRptRequestDrugDeptDetailsGr" +
                                "oupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte RegTypeID {
                get {
                    try {
                        return ((byte)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegTypeID\' in table \'spXRptRequestDrugDeptDetailsGroupByPat" +
                                "ient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long DeptID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptID\' in table \'spXRptRequestDrugDeptDetailsGroupByPatien" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long PatientID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientID\' in table \'spXRptRequestDrugDeptDetailsGroupByPat" +
                                "ient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long EmergRecID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EmergRecIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmergRecID\' in table \'spXRptRequestDrugDeptDetailsGroupByPa" +
                                "tient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EmergRecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long StaffID1 {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffID1\' in table \'spXRptRequestDrugDeptDetailsGroupByPati" +
                                "ent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long HIApprovedStaffID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIApprovedStaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIApprovedStaffID\' in table \'spXRptRequestDrugDeptDetailsGr" +
                                "oupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIApprovedStaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime ExamDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ExamDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamDate\' in table \'spXRptRequestDrugDeptDetailsGroupByPati" +
                                "ent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ExamDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_DocumentTypeOnHold {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_DocumentTypeOnHoldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_DocumentTypeOnHold\' in table \'spXRptRequestDrugDeptDetail" +
                                "sGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_DocumentTypeOnHoldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int SequenceNo {
                get {
                    try {
                        return ((int)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.SequenceNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SequenceNo\' in table \'spXRptRequestDrugDeptDetailsGroupByPa" +
                                "tient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.SequenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_RegistrationStatus {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegistrationStatus\' in table \'spXRptRequestDrugDeptDetail" +
                                "sGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long HisID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HisID\' in table \'spXRptRequestDrugDeptDetailsGroupByPatient" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double PtInsuranceBenefit {
                get {
                    try {
                        return ((double)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtInsuranceBenefit\' in table \'spXRptRequestDrugDeptDetailsG" +
                                "roupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCrossRegion {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCrossRegion\' in table \'spXRptRequestDrugDeptDetailsGroupB" +
                                "yPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long PaperReferalID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferalIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaperReferalID\' in table \'spXRptRequestDrugDeptDetailsGroup" +
                                "ByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferalIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PtRegistrationCode {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtRegistrationCode\' in table \'spXRptRequestDrugDeptDetailsG" +
                                "roupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long PatientClassID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientClassID\' in table \'spXRptRequestDrugDeptDetailsGroup" +
                                "ByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool MarkedAsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MarkedAsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarkedAsDeleted\' in table \'spXRptRequestDrugDeptDetailsGrou" +
                                "pByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MarkedAsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool SomeRegDetailsRemoved {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.SomeRegDetailsRemovedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SomeRegDetailsRemoved\' in table \'spXRptRequestDrugDeptDetai" +
                                "lsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.SomeRegDetailsRemovedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_RegistrationType {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegistrationType\' in table \'spXRptRequestDrugDeptDetailsG" +
                                "roupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCorrectRoute {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCorrectRouteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCorrectRoute\' in table \'spXRptRequestDrugDeptDetailsGroup" +
                                "ByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCorrectRouteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal ProgSumMinusMinHI {
                get {
                    try {
                        return ((decimal)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ProgSumMinusMinHIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgSumMinusMinHI\' in table \'spXRptRequestDrugDeptDetailsGr" +
                                "oupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ProgSumMinusMinHIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_RegistrationPaymentStatus {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationPaymentStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegistrationPaymentStatus\' in table \'spXRptRequestDrugDep" +
                                "tDetailsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationPaymentStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_RegistrationClosingStatus {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationClosingStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegistrationClosingStatus\' in table \'spXRptRequestDrugDep" +
                                "tDetailsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationClosingStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_RegForPatientOfType {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegForPatientOfTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegForPatientOfType\' in table \'spXRptRequestDrugDeptDetai" +
                                "lsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegForPatientOfTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool UpdateFlagLocked {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdateFlagLockedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UpdateFlagLocked\' in table \'spXRptRequestDrugDeptDetailsGro" +
                                "upByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdateFlagLockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime RecCreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RecCreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecCreatedDate\' in table \'spXRptRequestDrugDeptDetailsGroup" +
                                "ByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RecCreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HIComment {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HICommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIComment\' in table \'spXRptRequestDrugDeptDetailsGroupByPat" +
                                "ient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HICommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime RegCancelDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegCancelDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegCancelDate\' in table \'spXRptRequestDrugDeptDetailsGroupB" +
                                "yPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegCancelDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long RegCancelStaffID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegCancelStaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegCancelStaffID\' in table \'spXRptRequestDrugDeptDetailsGro" +
                                "upByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegCancelStaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsForeigner {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsForeignerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsForeigner\' in table \'spXRptRequestDrugDeptDetailsGroupByP" +
                                "atient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsForeignerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime ReConfirmHIDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReConfirmHIDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReConfirmHIDate\' in table \'spXRptRequestDrugDeptDetailsGrou" +
                                "pByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReConfirmHIDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool NotTreatedAsInPt {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NotTreatedAsInPtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NotTreatedAsInPt\' in table \'spXRptRequestDrugDeptDetailsGro" +
                                "upByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NotTreatedAsInPtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long HIRemovedStaffID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIRemovedStaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIRemovedStaffID\' in table \'spXRptRequestDrugDeptDetailsGro" +
                                "upByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIRemovedStaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime RemoveHIDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RemoveHIDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemoveHIDate\' in table \'spXRptRequestDrugDeptDetailsGroupBy" +
                                "Patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RemoveHIDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ActivityLog {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ActivityLogColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActivityLog\' in table \'spXRptRequestDrugDeptDetailsGroupByP" +
                                "atient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ActivityLogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHICard_FiveYearsCont {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsHICard_FiveYearsContColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHICard_FiveYearsCont\' in table \'spXRptRequestDrugDeptDeta" +
                                "ilsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsHICard_FiveYearsContColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsChildUnder6YearsOld {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsChildUnder6YearsOldColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsChildUnder6YearsOld\' in table \'spXRptRequestDrugDeptDetai" +
                                "lsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsChildUnder6YearsOldColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long HIReportID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIReportIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIReportID\' in table \'spXRptRequestDrugDeptDetailsGroupByPa" +
                                "tient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIReportIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAllowCrossRegion {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsAllowCrossRegionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsAllowCrossRegion\' in table \'spXRptRequestDrugDeptDetailsG" +
                                "roupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsAllowCrossRegionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short Applied02Version1 {
                get {
                    try {
                        return ((short)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.Applied02Version1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Applied02Version1\' in table \'spXRptRequestDrugDeptDetailsGr" +
                                "oupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.Applied02Version1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHICard_FiveYearsCont_NoPaid {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsHICard_FiveYearsCont_NoPaidColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHICard_FiveYearsCont_NoPaid\' in table \'spXRptRequestDrugD" +
                                "eptDetailsGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsHICard_FiveYearsCont_NoPaidColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long HisID_2 {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisID_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HisID_2\' in table \'spXRptRequestDrugDeptDetailsGroupByPatie" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisID_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double PtInsuranceBenefit_2 {
                get {
                    try {
                        return ((double)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefit_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtInsuranceBenefit_2\' in table \'spXRptRequestDrugDeptDetail" +
                                "sGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefit_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long HisID_3 {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisID_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HisID_3\' in table \'spXRptRequestDrugDeptDetailsGroupByPatie" +
                                "nt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisID_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double PtInsuranceBenefit_3 {
                get {
                    try {
                        return ((double)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefit_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtInsuranceBenefit_3\' in table \'spXRptRequestDrugDeptDetail" +
                                "sGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefit_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long PaperReferralID_2 {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferralID_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaperReferralID_2\' in table \'spXRptRequestDrugDeptDetailsGr" +
                                "oupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferralID_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long PaperReferralID_3 {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferralID_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaperReferralID_3\' in table \'spXRptRequestDrugDeptDetailsGr" +
                                "oupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferralID_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCrossRegion_2 {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegion_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCrossRegion_2\' in table \'spXRptRequestDrugDeptDetailsGrou" +
                                "pByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegion_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCrossRegion_3 {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegion_3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsCrossRegion_3\' in table \'spXRptRequestDrugDeptDetailsGrou" +
                                "pByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegion_3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime FiveYearsAppliedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FiveYearsAppliedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FiveYearsAppliedDate\' in table \'spXRptRequestDrugDeptDetail" +
                                "sGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FiveYearsAppliedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_ReportStatus {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_ReportStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_ReportStatus\' in table \'spXRptRequestDrugDeptDetailsGroup" +
                                "ByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_ReportStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte FinalizeCounter {
                get {
                    try {
                        return ((byte)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FinalizeCounterColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinalizeCounter\' in table \'spXRptRequestDrugDeptDetailsGrou" +
                                "pByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FinalizeCounterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime HIConfirmDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIConfirmDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIConfirmDate\' in table \'spXRptRequestDrugDeptDetailsGroupB" +
                                "yPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIConfirmDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ReportAppliedCode {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReportAppliedCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReportAppliedCode\' in table \'spXRptRequestDrugDeptDetailsGr" +
                                "oupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReportAppliedCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long OutPtRegistrationID {
                get {
                    try {
                        return ((long)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.OutPtRegistrationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutPtRegistrationID\' in table \'spXRptRequestDrugDeptDetails" +
                                "GroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.OutPtRegistrationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool NgoaiDinhSuat {
                get {
                    try {
                        return ((bool)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NgoaiDinhSuatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NgoaiDinhSuat\' in table \'spXRptRequestDrugDeptDetailsGroupB" +
                                "yPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NgoaiDinhSuatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'spXRptRequestDrugDeptDetailsGroupByPati" +
                                "ent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientCode {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientCode\' in table \'spXRptRequestDrugDeptDetailsGroupByP" +
                                "atient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientBarcode {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientBarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientBarcode\' in table \'spXRptRequestDrugDeptDetailsGroup" +
                                "ByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientBarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'spXRptRequestDrugDeptDetailsGroupByPatient\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IDNumber {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IDNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDNumber\' in table \'spXRptRequestDrugDeptDetailsGroupByPati" +
                                "ent\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IDNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientEmailAddress {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientEmailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientEmailAddress\' in table \'spXRptRequestDrugDeptDetails" +
                                "GroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientEmailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Gender\' in table \'spXRptRequestDrugDeptDetailsGroupByPatien" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientPhoneNumber\' in table \'spXRptRequestDrugDeptDetailsG" +
                                "roupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientStreetAddress {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientStreetAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientStreetAddress\' in table \'spXRptRequestDrugDeptDetail" +
                                "sGroupByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientStreetAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string StaffName {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffName\' in table \'spXRptRequestDrugDeptDetailsGroupByPat" +
                                "ient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public decimal RemainingQty {
                get {
                    try {
                        return ((decimal)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RemainingQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RemainingQty\' in table \'spXRptRequestDrugDeptDetailsGroupBy" +
                                "Patient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RemainingQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int IsReplaceMedMat {
                get {
                    try {
                        return ((int)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsReplaceMedMatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsReplaceMedMat\' in table \'spXRptRequestDrugDeptDetailsGrou" +
                                "pByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsReplaceMedMatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int IsDisposeMedMat {
                get {
                    try {
                        return ((int)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsDisposeMedMatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDisposeMedMat\' in table \'spXRptRequestDrugDeptDetailsGrou" +
                                "pByPatient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsDisposeMedMatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BedNumber {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.BedNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BedNumber\' in table \'spXRptRequestDrugDeptDetailsGroupByPat" +
                                "ient\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.BedNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNotesNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPtRegistrationIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPtRegistrationIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsApprovedNotesNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ApprovedNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetApprovedNotesNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ApprovedNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsoutiIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.outiIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetoutiIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.outiIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStaffIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStaffIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDateTimeSelectionNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DateTimeSelectionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDateTimeSelectionNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DateTimeSelectionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPrescribedQtyNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PrescribedQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPrescribedQtyNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PrescribedQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsItemVerfStatNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ItemVerfStatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetItemVerfStatNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ItemVerfStatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMDoseNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MDoseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMDoseNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MDoseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMDoseStrNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MDoseStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMDoseStrNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MDoseStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsADoseNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ADoseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetADoseNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ADoseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsADoseStrNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ADoseStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetADoseStrNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ADoseStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEDoseNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EDoseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEDoseNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EDoseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEDoseStrNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EDoseStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEDoseStrNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EDoseStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNDoseNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NDoseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNDoseNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NDoseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNDoseStrNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NDoseStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNDoseStrNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NDoseStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDoctorStaffIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DoctorStaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDoctorStaffIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DoctorStaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMedicalInstructionDateNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MedicalInstructionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMedicalInstructionDateNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MedicalInstructionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIntravenousPlan_InPtIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IntravenousPlan_InPtIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIntravenousPlan_InPtIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IntravenousPlan_InPtIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIntPtDiagDrInstructionIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IntPtDiagDrInstructionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIntPtDiagDrInstructionIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IntPtDiagDrInstructionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsReqQtyStrNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReqQtyStrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetReqQtyStrNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReqQtyStrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutClinicDeptReqID_OrigNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.OutClinicDeptReqID_OrigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutClinicDeptReqID_OrigNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.OutClinicDeptReqID_OrigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUpdatedStaffIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdatedStaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUpdatedStaffIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdatedStaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUpdatedDateNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUpdatedDateNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAntibioticTreatmentIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.AntibioticTreatmentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAntibioticTreatmentIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.AntibioticTreatmentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAntibioticOrdinalNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.AntibioticOrdinalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAntibioticOrdinalNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.AntibioticOrdinalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsCreatedOutwardNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCreatedOutwardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsCreatedOutwardNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCreatedOutwardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUsageDistanceNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UsageDistanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUsageDistanceNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UsageDistanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDoctorStaffNameNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DoctorStaffNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDoctorStaffNameNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DoctorStaffNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGenericNameNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.GenericNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGenericNameNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.GenericNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnitIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnitNameNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHICodeNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HICodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHICodeNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HICodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUnitPackagingNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitPackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUnitPackagingNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UnitPackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPackagingNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPackagingNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsContentNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetContentNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDispenseVolumeNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DispenseVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDispenseVolumeNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DispenseVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPtRegistrationID1Null() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPtRegistrationID1Null() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRegTypeIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRegTypeIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDeptIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDeptIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEmergRecIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EmergRecIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEmergRecIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.EmergRecIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStaffID1Null() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStaffID1Null() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHIApprovedStaffIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIApprovedStaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHIApprovedStaffIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIApprovedStaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsExamDateNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ExamDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetExamDateNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ExamDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_DocumentTypeOnHoldNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_DocumentTypeOnHoldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_DocumentTypeOnHoldNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_DocumentTypeOnHoldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSequenceNoNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.SequenceNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSequenceNoNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.SequenceNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_RegistrationStatusNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_RegistrationStatusNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHisIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHisIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPtInsuranceBenefitNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPtInsuranceBenefitNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsCrossRegionNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsCrossRegionNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPaperReferalIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferalIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPaperReferalIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferalIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPtRegistrationCodeNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPtRegistrationCodeNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtRegistrationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientClassIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientClassIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMarkedAsDeletedNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MarkedAsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMarkedAsDeletedNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.MarkedAsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSomeRegDetailsRemovedNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.SomeRegDetailsRemovedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSomeRegDetailsRemovedNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.SomeRegDetailsRemovedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_RegistrationTypeNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_RegistrationTypeNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsCorrectRouteNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCorrectRouteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsCorrectRouteNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCorrectRouteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgSumMinusMinHINull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ProgSumMinusMinHIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgSumMinusMinHINull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ProgSumMinusMinHIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_RegistrationPaymentStatusNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationPaymentStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_RegistrationPaymentStatusNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationPaymentStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_RegistrationClosingStatusNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationClosingStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_RegistrationClosingStatusNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegistrationClosingStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_RegForPatientOfTypeNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegForPatientOfTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_RegForPatientOfTypeNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_RegForPatientOfTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsUpdateFlagLockedNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdateFlagLockedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetUpdateFlagLockedNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.UpdateFlagLockedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRecCreatedDateNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RecCreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRecCreatedDateNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RecCreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHICommentNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HICommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHICommentNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HICommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRegCancelDateNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegCancelDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRegCancelDateNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegCancelDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRegCancelStaffIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegCancelStaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRegCancelStaffIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RegCancelStaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsForeignerNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsForeignerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsForeignerNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsForeignerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsReConfirmHIDateNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReConfirmHIDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetReConfirmHIDateNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReConfirmHIDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNotTreatedAsInPtNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NotTreatedAsInPtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNotTreatedAsInPtNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NotTreatedAsInPtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHIRemovedStaffIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIRemovedStaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHIRemovedStaffIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIRemovedStaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRemoveHIDateNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RemoveHIDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRemoveHIDateNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RemoveHIDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsActivityLogNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ActivityLogColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetActivityLogNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ActivityLogColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsHICard_FiveYearsContNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsHICard_FiveYearsContColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsHICard_FiveYearsContNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsHICard_FiveYearsContColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsChildUnder6YearsOldNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsChildUnder6YearsOldColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsChildUnder6YearsOldNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsChildUnder6YearsOldColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHIReportIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIReportIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHIReportIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIReportIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsAllowCrossRegionNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsAllowCrossRegionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsAllowCrossRegionNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsAllowCrossRegionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsApplied02Version1Null() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.Applied02Version1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetApplied02Version1Null() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.Applied02Version1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsHICard_FiveYearsCont_NoPaidNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsHICard_FiveYearsCont_NoPaidColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsHICard_FiveYearsCont_NoPaidNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsHICard_FiveYearsCont_NoPaidColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHisID_2Null() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisID_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHisID_2Null() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisID_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPtInsuranceBenefit_2Null() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefit_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPtInsuranceBenefit_2Null() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefit_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHisID_3Null() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisID_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHisID_3Null() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HisID_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPtInsuranceBenefit_3Null() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefit_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPtInsuranceBenefit_3Null() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PtInsuranceBenefit_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPaperReferralID_2Null() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferralID_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPaperReferralID_2Null() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferralID_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPaperReferralID_3Null() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferralID_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPaperReferralID_3Null() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PaperReferralID_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsCrossRegion_2Null() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegion_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsCrossRegion_2Null() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegion_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsCrossRegion_3Null() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegion_3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsCrossRegion_3Null() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsCrossRegion_3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFiveYearsAppliedDateNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FiveYearsAppliedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFiveYearsAppliedDateNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FiveYearsAppliedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_ReportStatusNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_ReportStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_ReportStatusNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.V_ReportStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFinalizeCounterNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FinalizeCounterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFinalizeCounterNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FinalizeCounterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHIConfirmDateNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIConfirmDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHIConfirmDateNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.HIConfirmDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsReportAppliedCodeNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReportAppliedCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetReportAppliedCodeNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.ReportAppliedCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutPtRegistrationIDNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.OutPtRegistrationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutPtRegistrationIDNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.OutPtRegistrationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNgoaiDinhSuatNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NgoaiDinhSuatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNgoaiDinhSuatNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.NgoaiDinhSuatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFullNameNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientCodeNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientCodeNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientBarcodeNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientBarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientBarcodeNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientBarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDOBNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDOBNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDNumberNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IDNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDNumberNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IDNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientEmailAddressNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientEmailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientEmailAddressNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientEmailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetGenderNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.GenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientPhoneNumberNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientPhoneNumberNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientStreetAddressNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientStreetAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientStreetAddressNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.PatientStreetAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStaffNameNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStaffNameNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.StaffNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRemainingQtyNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RemainingQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRemainingQtyNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.RemainingQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsReplaceMedMatNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsReplaceMedMatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsReplaceMedMatNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsReplaceMedMatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsDisposeMedMatNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsDisposeMedMatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsDisposeMedMatNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.IsDisposeMedMatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBedNumberNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptDetailsGroupByPatient.BedNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBedNumberNull() {
                this[this.tablespXRptRequestDrugDeptDetailsGroupByPatient.BedNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spXRptRequestDrugDeptHeaderByPatientRow : global::System.Data.DataRow {
            
            private spXRptRequestDrugDeptHeaderByPatientDataTable tablespXRptRequestDrugDeptHeaderByPatient;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spXRptRequestDrugDeptHeaderByPatientRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespXRptRequestDrugDeptHeaderByPatient = ((spXRptRequestDrugDeptHeaderByPatientDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Show {
                get {
                    try {
                        return ((string)(this[this.tablespXRptRequestDrugDeptHeaderByPatient.ShowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Show\' in table \'spXRptRequestDrugDeptHeaderByPatient\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptHeaderByPatient.ShowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OutInvID {
                get {
                    return ((string)(this[this.tablespXRptRequestDrugDeptHeaderByPatient.OutInvIDColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptHeaderByPatient.OutInvIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime OutDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespXRptRequestDrugDeptHeaderByPatient.OutDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutDate\' in table \'spXRptRequestDrugDeptHeaderByPatient\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespXRptRequestDrugDeptHeaderByPatient.OutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string InDeptStoreName {
                get {
                    return ((string)(this[this.tablespXRptRequestDrugDeptHeaderByPatient.InDeptStoreNameColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptHeaderByPatient.InDeptStoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string NurseFullName {
                get {
                    return ((string)(this[this.tablespXRptRequestDrugDeptHeaderByPatient.NurseFullNameColumn]));
                }
                set {
                    this[this.tablespXRptRequestDrugDeptHeaderByPatient.NurseFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsShowNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptHeaderByPatient.ShowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetShowNull() {
                this[this.tablespXRptRequestDrugDeptHeaderByPatient.ShowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutDateNull() {
                return this.IsNull(this.tablespXRptRequestDrugDeptHeaderByPatient.OutDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOutDateNull() {
                this[this.tablespXRptRequestDrugDeptHeaderByPatient.OutDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEvent : global::System.EventArgs {
            
            private spXRptRequestDrugDeptDetailsGroupByPatientRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptDetailsGroupByPatientRowChangeEvent(spXRptRequestDrugDeptDetailsGroupByPatientRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptDetailsGroupByPatientRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class spXRptRequestDrugDeptHeaderByPatientRowChangeEvent : global::System.EventArgs {
            
            private spXRptRequestDrugDeptHeaderByPatientRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptHeaderByPatientRowChangeEvent(spXRptRequestDrugDeptHeaderByPatientRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spXRptRequestDrugDeptHeaderByPatientRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace eHCMS.ReportLib.RptDrugDepts.DataSchema.Request.dsXRptRequestDrugDeptDetailsGroupByPatientTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spXRptRequestDrugDeptDetailsGroupByPatientTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public spXRptRequestDrugDeptDetailsGroupByPatientTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spXRptRequestDrugDeptDetailsGroupByPatient";
            tableMapping.ColumnMappings.Add("OutClinicDeptReqID", "OutClinicDeptReqID");
            tableMapping.ColumnMappings.Add("ReqDrugInClinicDeptID", "ReqDrugInClinicDeptID");
            tableMapping.ColumnMappings.Add("GenMedProductID", "GenMedProductID");
            tableMapping.ColumnMappings.Add("ReqQty", "ReqQty");
            tableMapping.ColumnMappings.Add("ApprovedQty", "ApprovedQty");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("PtRegistrationID", "PtRegistrationID");
            tableMapping.ColumnMappings.Add("ApprovedNotes", "ApprovedNotes");
            tableMapping.ColumnMappings.Add("outiID", "outiID");
            tableMapping.ColumnMappings.Add("StaffID", "StaffID");
            tableMapping.ColumnMappings.Add("CreateDate", "CreateDate");
            tableMapping.ColumnMappings.Add("DateTimeSelection", "DateTimeSelection");
            tableMapping.ColumnMappings.Add("PrescribedQty", "PrescribedQty");
            tableMapping.ColumnMappings.Add("ItemVerfStat", "ItemVerfStat");
            tableMapping.ColumnMappings.Add("MDose", "MDose");
            tableMapping.ColumnMappings.Add("MDoseStr", "MDoseStr");
            tableMapping.ColumnMappings.Add("ADose", "ADose");
            tableMapping.ColumnMappings.Add("ADoseStr", "ADoseStr");
            tableMapping.ColumnMappings.Add("EDose", "EDose");
            tableMapping.ColumnMappings.Add("EDoseStr", "EDoseStr");
            tableMapping.ColumnMappings.Add("NDose", "NDose");
            tableMapping.ColumnMappings.Add("NDoseStr", "NDoseStr");
            tableMapping.ColumnMappings.Add("DoctorStaffID", "DoctorStaffID");
            tableMapping.ColumnMappings.Add("MedicalInstructionDate", "MedicalInstructionDate");
            tableMapping.ColumnMappings.Add("IntravenousPlan_InPtID", "IntravenousPlan_InPtID");
            tableMapping.ColumnMappings.Add("IntPtDiagDrInstructionID", "IntPtDiagDrInstructionID");
            tableMapping.ColumnMappings.Add("ReqQtyStr", "ReqQtyStr");
            tableMapping.ColumnMappings.Add("IsLoadedForReqList", "IsLoadedForReqList");
            tableMapping.ColumnMappings.Add("OutClinicDeptReqID_Orig", "OutClinicDeptReqID_Orig");
            tableMapping.ColumnMappings.Add("UpdatedStaffID", "UpdatedStaffID");
            tableMapping.ColumnMappings.Add("UpdatedDate", "UpdatedDate");
            tableMapping.ColumnMappings.Add("AntibioticTreatmentID", "AntibioticTreatmentID");
            tableMapping.ColumnMappings.Add("AntibioticOrdinal", "AntibioticOrdinal");
            tableMapping.ColumnMappings.Add("IsCreatedOutward", "IsCreatedOutward");
            tableMapping.ColumnMappings.Add("UsageDistance", "UsageDistance");
            tableMapping.ColumnMappings.Add("DoctorStaffName", "DoctorStaffName");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("GenericName", "GenericName");
            tableMapping.ColumnMappings.Add("UnitID", "UnitID");
            tableMapping.ColumnMappings.Add("UnitName", "UnitName");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("HICode", "HICode");
            tableMapping.ColumnMappings.Add("UnitPackaging", "UnitPackaging");
            tableMapping.ColumnMappings.Add("Packaging", "Packaging");
            tableMapping.ColumnMappings.Add("Content", "Content");
            tableMapping.ColumnMappings.Add("DispenseVolume", "DispenseVolume");
            tableMapping.ColumnMappings.Add("PtRegistrationID1", "PtRegistrationID1");
            tableMapping.ColumnMappings.Add("RegTypeID", "RegTypeID");
            tableMapping.ColumnMappings.Add("DeptID", "DeptID");
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("EmergRecID", "EmergRecID");
            tableMapping.ColumnMappings.Add("StaffID1", "StaffID1");
            tableMapping.ColumnMappings.Add("HIApprovedStaffID", "HIApprovedStaffID");
            tableMapping.ColumnMappings.Add("ExamDate", "ExamDate");
            tableMapping.ColumnMappings.Add("V_DocumentTypeOnHold", "V_DocumentTypeOnHold");
            tableMapping.ColumnMappings.Add("SequenceNo", "SequenceNo");
            tableMapping.ColumnMappings.Add("V_RegistrationStatus", "V_RegistrationStatus");
            tableMapping.ColumnMappings.Add("HisID", "HisID");
            tableMapping.ColumnMappings.Add("PtInsuranceBenefit", "PtInsuranceBenefit");
            tableMapping.ColumnMappings.Add("IsCrossRegion", "IsCrossRegion");
            tableMapping.ColumnMappings.Add("PaperReferalID", "PaperReferalID");
            tableMapping.ColumnMappings.Add("PtRegistrationCode", "PtRegistrationCode");
            tableMapping.ColumnMappings.Add("PatientClassID", "PatientClassID");
            tableMapping.ColumnMappings.Add("MarkedAsDeleted", "MarkedAsDeleted");
            tableMapping.ColumnMappings.Add("SomeRegDetailsRemoved", "SomeRegDetailsRemoved");
            tableMapping.ColumnMappings.Add("V_RegistrationType", "V_RegistrationType");
            tableMapping.ColumnMappings.Add("IsCorrectRoute", "IsCorrectRoute");
            tableMapping.ColumnMappings.Add("ProgSumMinusMinHI", "ProgSumMinusMinHI");
            tableMapping.ColumnMappings.Add("V_RegistrationPaymentStatus", "V_RegistrationPaymentStatus");
            tableMapping.ColumnMappings.Add("V_RegistrationClosingStatus", "V_RegistrationClosingStatus");
            tableMapping.ColumnMappings.Add("V_RegForPatientOfType", "V_RegForPatientOfType");
            tableMapping.ColumnMappings.Add("UpdateFlagLocked", "UpdateFlagLocked");
            tableMapping.ColumnMappings.Add("RecCreatedDate", "RecCreatedDate");
            tableMapping.ColumnMappings.Add("HIComment", "HIComment");
            tableMapping.ColumnMappings.Add("RegCancelDate", "RegCancelDate");
            tableMapping.ColumnMappings.Add("RegCancelStaffID", "RegCancelStaffID");
            tableMapping.ColumnMappings.Add("IsForeigner", "IsForeigner");
            tableMapping.ColumnMappings.Add("ReConfirmHIDate", "ReConfirmHIDate");
            tableMapping.ColumnMappings.Add("NotTreatedAsInPt", "NotTreatedAsInPt");
            tableMapping.ColumnMappings.Add("HIRemovedStaffID", "HIRemovedStaffID");
            tableMapping.ColumnMappings.Add("RemoveHIDate", "RemoveHIDate");
            tableMapping.ColumnMappings.Add("ActivityLog", "ActivityLog");
            tableMapping.ColumnMappings.Add("IsHICard_FiveYearsCont", "IsHICard_FiveYearsCont");
            tableMapping.ColumnMappings.Add("IsChildUnder6YearsOld", "IsChildUnder6YearsOld");
            tableMapping.ColumnMappings.Add("HIReportID", "HIReportID");
            tableMapping.ColumnMappings.Add("IsAllowCrossRegion", "IsAllowCrossRegion");
            tableMapping.ColumnMappings.Add("Applied02Version1", "Applied02Version1");
            tableMapping.ColumnMappings.Add("IsHICard_FiveYearsCont_NoPaid", "IsHICard_FiveYearsCont_NoPaid");
            tableMapping.ColumnMappings.Add("HisID_2", "HisID_2");
            tableMapping.ColumnMappings.Add("PtInsuranceBenefit_2", "PtInsuranceBenefit_2");
            tableMapping.ColumnMappings.Add("HisID_3", "HisID_3");
            tableMapping.ColumnMappings.Add("PtInsuranceBenefit_3", "PtInsuranceBenefit_3");
            tableMapping.ColumnMappings.Add("PaperReferralID_2", "PaperReferralID_2");
            tableMapping.ColumnMappings.Add("PaperReferralID_3", "PaperReferralID_3");
            tableMapping.ColumnMappings.Add("IsCrossRegion_2", "IsCrossRegion_2");
            tableMapping.ColumnMappings.Add("IsCrossRegion_3", "IsCrossRegion_3");
            tableMapping.ColumnMappings.Add("FiveYearsAppliedDate", "FiveYearsAppliedDate");
            tableMapping.ColumnMappings.Add("V_ReportStatus", "V_ReportStatus");
            tableMapping.ColumnMappings.Add("FinalizeCounter", "FinalizeCounter");
            tableMapping.ColumnMappings.Add("HIConfirmDate", "HIConfirmDate");
            tableMapping.ColumnMappings.Add("ReportAppliedCode", "ReportAppliedCode");
            tableMapping.ColumnMappings.Add("OutPtRegistrationID", "OutPtRegistrationID");
            tableMapping.ColumnMappings.Add("NgoaiDinhSuat", "NgoaiDinhSuat");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("PatientCode", "PatientCode");
            tableMapping.ColumnMappings.Add("PatientBarcode", "PatientBarcode");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("IDNumber", "IDNumber");
            tableMapping.ColumnMappings.Add("PatientEmailAddress", "PatientEmailAddress");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("PatientPhoneNumber", "PatientPhoneNumber");
            tableMapping.ColumnMappings.Add("PatientStreetAddress", "PatientStreetAddress");
            tableMapping.ColumnMappings.Add("StaffName", "StaffName");
            tableMapping.ColumnMappings.Add("RemainingQty", "RemainingQty");
            tableMapping.ColumnMappings.Add("IsReplaceMedMat", "IsReplaceMedMat");
            tableMapping.ColumnMappings.Add("IsDisposeMedMat", "IsDisposeMedMat");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spXRptRequestDrugDeptDetailsGroupByPatient";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@outiID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@V_MedProductType", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromClinicDept", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsXRptRequestDrugDeptDetailsGroupByPatient.spXRptRequestDrugDeptDetailsGroupByPatientDataTable dataTable, global::System.Nullable<long> outiID, global::System.Nullable<long> V_MedProductType, global::System.Nullable<bool> FromClinicDept) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((outiID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(outiID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((V_MedProductType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(V_MedProductType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FromClinicDept.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(FromClinicDept.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsXRptRequestDrugDeptDetailsGroupByPatient.spXRptRequestDrugDeptDetailsGroupByPatientDataTable GetData(global::System.Nullable<long> outiID, global::System.Nullable<long> V_MedProductType, global::System.Nullable<bool> FromClinicDept) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((outiID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(outiID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((V_MedProductType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(V_MedProductType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FromClinicDept.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((bool)(FromClinicDept.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            dsXRptRequestDrugDeptDetailsGroupByPatient.spXRptRequestDrugDeptDetailsGroupByPatientDataTable dataTable = new dsXRptRequestDrugDeptDetailsGroupByPatient.spXRptRequestDrugDeptDetailsGroupByPatientDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spXRptRequestDrugDeptHeaderByPatientTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public spXRptRequestDrugDeptHeaderByPatientTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spXRptRequestDrugDeptHeaderByPatient";
            tableMapping.ColumnMappings.Add("Show", "Show");
            tableMapping.ColumnMappings.Add("OutInvID", "OutInvID");
            tableMapping.ColumnMappings.Add("OutDate", "OutDate");
            tableMapping.ColumnMappings.Add("InDeptStoreName", "InDeptStoreName");
            tableMapping.ColumnMappings.Add("NurseFullName", "NurseFullName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spXRptRequestDrugDeptHeaderByPatient";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@outiID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@V_MedProductType", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsXRptRequestDrugDeptDetailsGroupByPatient.spXRptRequestDrugDeptHeaderByPatientDataTable dataTable, global::System.Nullable<long> outiID, global::System.Nullable<long> V_MedProductType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((outiID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(outiID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((V_MedProductType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(V_MedProductType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsXRptRequestDrugDeptDetailsGroupByPatient.spXRptRequestDrugDeptHeaderByPatientDataTable GetData(global::System.Nullable<long> outiID, global::System.Nullable<long> V_MedProductType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((outiID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(outiID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((V_MedProductType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(V_MedProductType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            dsXRptRequestDrugDeptDetailsGroupByPatient.spXRptRequestDrugDeptHeaderByPatientDataTable dataTable = new dsXRptRequestDrugDeptDetailsGroupByPatient.spXRptRequestDrugDeptHeaderByPatientDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(dsXRptRequestDrugDeptDetailsGroupByPatient dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(dsXRptRequestDrugDeptDetailsGroupByPatient dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(dsXRptRequestDrugDeptDetailsGroupByPatient dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(dsXRptRequestDrugDeptDetailsGroupByPatient dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591