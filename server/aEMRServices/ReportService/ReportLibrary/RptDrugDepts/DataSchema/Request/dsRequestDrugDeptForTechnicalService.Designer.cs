//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eHCMS.ReportLib.RptDrugDepts.DataSchema.Request {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsRequestDrugDeptForTechnicalService")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsRequestDrugDeptForTechnicalService : global::System.Data.DataSet {
        
        private spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID;
        
        private spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public dsRequestDrugDeptForTechnicalService() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected dsRequestDrugDeptForTechnicalService(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spRequestDrugInwardClinicDeptForTechnicalService_GetByID"] != null)) {
                    base.Tables.Add(new spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable(ds.Tables["spRequestDrugInwardClinicDeptForTechnicalService_GetByID"]));
                }
                if ((ds.Tables["spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID"] != null)) {
                    base.Tables.Add(new spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable(ds.Tables["spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable spRequestDrugInwardClinicDeptForTechnicalService_GetByID {
            get {
                return this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID {
            get {
                return this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsRequestDrugDeptForTechnicalService cln = ((dsRequestDrugDeptForTechnicalService)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spRequestDrugInwardClinicDeptForTechnicalService_GetByID"] != null)) {
                    base.Tables.Add(new spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable(ds.Tables["spRequestDrugInwardClinicDeptForTechnicalService_GetByID"]));
                }
                if ((ds.Tables["spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID"] != null)) {
                    base.Tables.Add(new spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable(ds.Tables["spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID = ((spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable)(base.Tables["spRequestDrugInwardClinicDeptForTechnicalService_GetByID"]));
            if ((initTable == true)) {
                if ((this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID != null)) {
                    this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.InitVars();
                }
            }
            this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID = ((spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable)(base.Tables["spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID"]));
            if ((initTable == true)) {
                if ((this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID != null)) {
                    this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsRequestDrugDeptForTechnicalService";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsRequestDrugDeptForTechnicalService.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID = new spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable();
            base.Tables.Add(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID);
            this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID = new spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable();
            base.Tables.Add(this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializespRequestDrugInwardClinicDeptForTechnicalService_GetByID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsRequestDrugDeptForTechnicalService ds = new dsRequestDrugDeptForTechnicalService();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEventHandler(object sender, spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEventHandler(object sender, spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable : global::System.Data.TypedTableBase<spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow> {
            
            private global::System.Data.DataColumn columnReqForTechID;
            
            private global::System.Data.DataColumn columnStaffID;
            
            private global::System.Data.DataColumn columnDeptID;
            
            private global::System.Data.DataColumn columnReqDate;
            
            private global::System.Data.DataColumn columnOutFromStoreID;
            
            private global::System.Data.DataColumn columnInDeptStoreID;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnReqStatus;
            
            private global::System.Data.DataColumn columnV_MedProductType;
            
            private global::System.Data.DataColumn columnLogModified;
            
            private global::System.Data.DataColumn columnV_RegistrationType;
            
            private global::System.Data.DataColumn columnPtRegDetailID;
            
            private global::System.Data.DataColumn columnIsLock;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnInDeptStoreName;
            
            private global::System.Data.DataColumn columnOutFromStoreName;
            
            private global::System.Data.DataColumn columnDaNhanHang;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable() {
                this.TableName = "spRequestDrugInwardClinicDeptForTechnicalService_GetByID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReqForTechIDColumn {
                get {
                    return this.columnReqForTechID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn StaffIDColumn {
                get {
                    return this.columnStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DeptIDColumn {
                get {
                    return this.columnDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReqDateColumn {
                get {
                    return this.columnReqDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OutFromStoreIDColumn {
                get {
                    return this.columnOutFromStoreID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InDeptStoreIDColumn {
                get {
                    return this.columnInDeptStoreID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReqStatusColumn {
                get {
                    return this.columnReqStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn V_MedProductTypeColumn {
                get {
                    return this.columnV_MedProductType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LogModifiedColumn {
                get {
                    return this.columnLogModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn V_RegistrationTypeColumn {
                get {
                    return this.columnV_RegistrationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PtRegDetailIDColumn {
                get {
                    return this.columnPtRegDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IsLockColumn {
                get {
                    return this.columnIsLock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn InDeptStoreNameColumn {
                get {
                    return this.columnInDeptStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OutFromStoreNameColumn {
                get {
                    return this.columnOutFromStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DaNhanHangColumn {
                get {
                    return this.columnDaNhanHang;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow this[int index] {
                get {
                    return ((spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEventHandler spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEventHandler spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEventHandler spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEventHandler spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddspRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow(spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow AddspRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow(
                        long StaffID, 
                        long DeptID, 
                        System.DateTime ReqDate, 
                        long OutFromStoreID, 
                        long InDeptStoreID, 
                        string Comment, 
                        long ReqStatus, 
                        long V_MedProductType, 
                        string LogModified, 
                        long V_RegistrationType, 
                        long PtRegDetailID, 
                        bool IsLock, 
                        string FullName, 
                        string InDeptStoreName, 
                        string OutFromStoreName, 
                        bool DaNhanHang) {
                spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow rowspRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow = ((spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        StaffID,
                        DeptID,
                        ReqDate,
                        OutFromStoreID,
                        InDeptStoreID,
                        Comment,
                        ReqStatus,
                        V_MedProductType,
                        LogModified,
                        V_RegistrationType,
                        PtRegDetailID,
                        IsLock,
                        FullName,
                        InDeptStoreName,
                        OutFromStoreName,
                        DaNhanHang};
                rowspRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow);
                return rowspRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow FindByReqForTechID(long ReqForTechID) {
                return ((spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow)(this.Rows.Find(new object[] {
                            ReqForTechID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable cln = ((spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnReqForTechID = base.Columns["ReqForTechID"];
                this.columnStaffID = base.Columns["StaffID"];
                this.columnDeptID = base.Columns["DeptID"];
                this.columnReqDate = base.Columns["ReqDate"];
                this.columnOutFromStoreID = base.Columns["OutFromStoreID"];
                this.columnInDeptStoreID = base.Columns["InDeptStoreID"];
                this.columnComment = base.Columns["Comment"];
                this.columnReqStatus = base.Columns["ReqStatus"];
                this.columnV_MedProductType = base.Columns["V_MedProductType"];
                this.columnLogModified = base.Columns["LogModified"];
                this.columnV_RegistrationType = base.Columns["V_RegistrationType"];
                this.columnPtRegDetailID = base.Columns["PtRegDetailID"];
                this.columnIsLock = base.Columns["IsLock"];
                this.columnFullName = base.Columns["FullName"];
                this.columnInDeptStoreName = base.Columns["InDeptStoreName"];
                this.columnOutFromStoreName = base.Columns["OutFromStoreName"];
                this.columnDaNhanHang = base.Columns["DaNhanHang"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnReqForTechID = new global::System.Data.DataColumn("ReqForTechID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqForTechID);
                this.columnStaffID = new global::System.Data.DataColumn("StaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID);
                this.columnDeptID = new global::System.Data.DataColumn("DeptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptID);
                this.columnReqDate = new global::System.Data.DataColumn("ReqDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqDate);
                this.columnOutFromStoreID = new global::System.Data.DataColumn("OutFromStoreID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutFromStoreID);
                this.columnInDeptStoreID = new global::System.Data.DataColumn("InDeptStoreID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDeptStoreID);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnReqStatus = new global::System.Data.DataColumn("ReqStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqStatus);
                this.columnV_MedProductType = new global::System.Data.DataColumn("V_MedProductType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_MedProductType);
                this.columnLogModified = new global::System.Data.DataColumn("LogModified", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogModified);
                this.columnV_RegistrationType = new global::System.Data.DataColumn("V_RegistrationType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegistrationType);
                this.columnPtRegDetailID = new global::System.Data.DataColumn("PtRegDetailID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegDetailID);
                this.columnIsLock = new global::System.Data.DataColumn("IsLock", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsLock);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnInDeptStoreName = new global::System.Data.DataColumn("InDeptStoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInDeptStoreName);
                this.columnOutFromStoreName = new global::System.Data.DataColumn("OutFromStoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutFromStoreName);
                this.columnDaNhanHang = new global::System.Data.DataColumn("DaNhanHang", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDaNhanHang);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnReqForTechID}, true));
                this.columnReqForTechID.AutoIncrement = true;
                this.columnReqForTechID.AutoIncrementSeed = -1;
                this.columnReqForTechID.AutoIncrementStep = -1;
                this.columnReqForTechID.AllowDBNull = false;
                this.columnReqForTechID.ReadOnly = true;
                this.columnReqForTechID.Unique = true;
                this.columnStaffID.AllowDBNull = false;
                this.columnReqDate.AllowDBNull = false;
                this.columnComment.MaxLength = 2147483647;
                this.columnV_MedProductType.AllowDBNull = false;
                this.columnLogModified.MaxLength = 512;
                this.columnFullName.AllowDBNull = false;
                this.columnFullName.MaxLength = 65;
                this.columnInDeptStoreName.MaxLength = 128;
                this.columnOutFromStoreName.MaxLength = 128;
                this.columnDaNhanHang.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow NewspRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow() {
                return ((spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChanged != null)) {
                    this.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChanged(this, new spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEvent(((spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChanging != null)) {
                    this.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChanging(this, new spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEvent(((spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowDeleted != null)) {
                    this.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowDeleted(this, new spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEvent(((spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowDeleting != null)) {
                    this.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowDeleting(this, new spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEvent(((spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovespRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow(spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRequestDrugDeptForTechnicalService ds = new dsRequestDrugDeptForTechnicalService();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable : global::System.Data.TypedTableBase<spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow> {
            
            private global::System.Data.DataColumn columnGenMedProductID;
            
            private global::System.Data.DataColumn columnReqDrugInClinicDeptID;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnGenericName;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnHICode;
            
            private global::System.Data.DataColumn columnUnitPackaging;
            
            private global::System.Data.DataColumn columnPackaging;
            
            private global::System.Data.DataColumn columnContent;
            
            private global::System.Data.DataColumn columnReqQty;
            
            private global::System.Data.DataColumn columnApprovedQty;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable() {
                this.TableName = "spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GenMedProductIDColumn {
                get {
                    return this.columnGenMedProductID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReqDrugInClinicDeptIDColumn {
                get {
                    return this.columnReqDrugInClinicDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GenericNameColumn {
                get {
                    return this.columnGenericName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HICodeColumn {
                get {
                    return this.columnHICode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn UnitPackagingColumn {
                get {
                    return this.columnUnitPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PackagingColumn {
                get {
                    return this.columnPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ContentColumn {
                get {
                    return this.columnContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ReqQtyColumn {
                get {
                    return this.columnReqQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ApprovedQtyColumn {
                get {
                    return this.columnApprovedQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow this[int index] {
                get {
                    return ((spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEventHandler spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddspReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow(spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow AddspReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow(long GenMedProductID, long ReqDrugInClinicDeptID, string BrandName, string GenericName, long UnitID, string UnitName, string Code, string HICode, int UnitPackaging, string Packaging, string Content, decimal ReqQty, decimal ApprovedQty) {
                spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow rowspReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow = ((spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GenMedProductID,
                        ReqDrugInClinicDeptID,
                        BrandName,
                        GenericName,
                        UnitID,
                        UnitName,
                        Code,
                        HICode,
                        UnitPackaging,
                        Packaging,
                        Content,
                        ReqQty,
                        ApprovedQty};
                rowspReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow);
                return rowspReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable cln = ((spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnGenMedProductID = base.Columns["GenMedProductID"];
                this.columnReqDrugInClinicDeptID = base.Columns["ReqDrugInClinicDeptID"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnGenericName = base.Columns["GenericName"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnCode = base.Columns["Code"];
                this.columnHICode = base.Columns["HICode"];
                this.columnUnitPackaging = base.Columns["UnitPackaging"];
                this.columnPackaging = base.Columns["Packaging"];
                this.columnContent = base.Columns["Content"];
                this.columnReqQty = base.Columns["ReqQty"];
                this.columnApprovedQty = base.Columns["ApprovedQty"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnGenMedProductID = new global::System.Data.DataColumn("GenMedProductID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenMedProductID);
                this.columnReqDrugInClinicDeptID = new global::System.Data.DataColumn("ReqDrugInClinicDeptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqDrugInClinicDeptID);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnGenericName = new global::System.Data.DataColumn("GenericName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenericName);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnHICode = new global::System.Data.DataColumn("HICode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHICode);
                this.columnUnitPackaging = new global::System.Data.DataColumn("UnitPackaging", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPackaging);
                this.columnPackaging = new global::System.Data.DataColumn("Packaging", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackaging);
                this.columnContent = new global::System.Data.DataColumn("Content", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContent);
                this.columnReqQty = new global::System.Data.DataColumn("ReqQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqQty);
                this.columnApprovedQty = new global::System.Data.DataColumn("ApprovedQty", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApprovedQty);
                this.columnGenMedProductID.AllowDBNull = false;
                this.columnReqDrugInClinicDeptID.AllowDBNull = false;
                this.columnBrandName.AllowDBNull = false;
                this.columnBrandName.MaxLength = 512;
                this.columnGenericName.MaxLength = 400;
                this.columnUnitName.MaxLength = 64;
                this.columnCode.AllowDBNull = false;
                this.columnCode.MaxLength = 20;
                this.columnHICode.ReadOnly = true;
                this.columnHICode.MaxLength = 20;
                this.columnPackaging.MaxLength = 50;
                this.columnContent.MaxLength = 1024;
                this.columnReqQty.ReadOnly = true;
                this.columnApprovedQty.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow NewspReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow() {
                return ((spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChanged != null)) {
                    this.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChanged(this, new spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChanging != null)) {
                    this.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChanging(this, new spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowDeleted != null)) {
                    this.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowDeleted(this, new spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowDeleting != null)) {
                    this.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowDeleting(this, new spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEvent(((spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemovespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow(spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsRequestDrugDeptForTechnicalService ds = new dsRequestDrugDeptForTechnicalService();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow : global::System.Data.DataRow {
            
            private spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID = ((spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long ReqForTechID {
                get {
                    return ((long)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.ReqForTechIDColumn]));
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.ReqForTechIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long StaffID {
                get {
                    return ((long)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.StaffIDColumn]));
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.StaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long DeptID {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.DeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptID\' in table \'spRequestDrugInwardClinicDeptForTechnical" +
                                "Service_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.DeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ReqDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.ReqDateColumn]));
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.ReqDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long OutFromStoreID {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.OutFromStoreIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutFromStoreID\' in table \'spRequestDrugInwardClinicDeptForT" +
                                "echnicalService_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.OutFromStoreIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long InDeptStoreID {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.InDeptStoreIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDeptStoreID\' in table \'spRequestDrugInwardClinicDeptForTe" +
                                "chnicalService_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.InDeptStoreIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'spRequestDrugInwardClinicDeptForTechnica" +
                                "lService_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long ReqStatus {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.ReqStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqStatus\' in table \'spRequestDrugInwardClinicDeptForTechni" +
                                "calService_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.ReqStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long V_MedProductType {
                get {
                    return ((long)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.V_MedProductTypeColumn]));
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.V_MedProductTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LogModified {
                get {
                    try {
                        return ((string)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.LogModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LogModified\' in table \'spRequestDrugInwardClinicDeptForTech" +
                                "nicalService_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.LogModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long V_RegistrationType {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.V_RegistrationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegistrationType\' in table \'spRequestDrugInwardClinicDept" +
                                "ForTechnicalService_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.V_RegistrationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long PtRegDetailID {
                get {
                    try {
                        return ((long)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.PtRegDetailIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtRegDetailID\' in table \'spRequestDrugInwardClinicDeptForTe" +
                                "chnicalService_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.PtRegDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLock {
                get {
                    try {
                        return ((bool)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.IsLockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsLock\' in table \'spRequestDrugInwardClinicDeptForTechnical" +
                                "Service_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.IsLockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FullName {
                get {
                    return ((string)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.FullNameColumn]));
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string InDeptStoreName {
                get {
                    try {
                        return ((string)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.InDeptStoreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InDeptStoreName\' in table \'spRequestDrugInwardClinicDeptFor" +
                                "TechnicalService_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.InDeptStoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OutFromStoreName {
                get {
                    try {
                        return ((string)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.OutFromStoreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutFromStoreName\' in table \'spRequestDrugInwardClinicDeptFo" +
                                "rTechnicalService_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.OutFromStoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool DaNhanHang {
                get {
                    try {
                        return ((bool)(this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.DaNhanHangColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DaNhanHang\' in table \'spRequestDrugInwardClinicDeptForTechn" +
                                "icalService_GetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.DaNhanHangColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDeptIDNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.DeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDeptIDNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.DeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOutFromStoreIDNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.OutFromStoreIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOutFromStoreIDNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.OutFromStoreIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInDeptStoreIDNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.InDeptStoreIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInDeptStoreIDNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.InDeptStoreIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCommentNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCommentNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReqStatusNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.ReqStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReqStatusNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.ReqStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsLogModifiedNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.LogModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetLogModifiedNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.LogModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsV_RegistrationTypeNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.V_RegistrationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetV_RegistrationTypeNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.V_RegistrationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPtRegDetailIDNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.PtRegDetailIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPtRegDetailIDNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.PtRegDetailIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsIsLockNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.IsLockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetIsLockNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.IsLockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsInDeptStoreNameNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.InDeptStoreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetInDeptStoreNameNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.InDeptStoreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOutFromStoreNameNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.OutFromStoreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOutFromStoreNameNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.OutFromStoreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDaNhanHangNull() {
                return this.IsNull(this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.DaNhanHangColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDaNhanHangNull() {
                this[this.tablespRequestDrugInwardClinicDeptForTechnicalService_GetByID.DaNhanHangColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow : global::System.Data.DataRow {
            
            private spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID = ((spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long GenMedProductID {
                get {
                    return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.GenMedProductIDColumn]));
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.GenMedProductIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long ReqDrugInClinicDeptID {
                get {
                    return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ReqDrugInClinicDeptIDColumn]));
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ReqDrugInClinicDeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BrandName {
                get {
                    return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.BrandNameColumn]));
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GenericName {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.GenericNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenericName\' in table \'spReqOutwardDrugClinicDeptPatientFor" +
                                "TechnicalService_SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.GenericNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long UnitID {
                get {
                    try {
                        return ((long)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'spReqOutwardDrugClinicDeptPatientForTechn" +
                                "icalService_SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitName\' in table \'spReqOutwardDrugClinicDeptPatientForTec" +
                                "hnicalService_SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Code {
                get {
                    return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.CodeColumn]));
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HICode {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.HICodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HICode\' in table \'spReqOutwardDrugClinicDeptPatientForTechn" +
                                "icalService_SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.HICodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int UnitPackaging {
                get {
                    try {
                        return ((int)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitPackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPackaging\' in table \'spReqOutwardDrugClinicDeptPatientF" +
                                "orTechnicalService_SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitPackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Packaging {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.PackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Packaging\' in table \'spReqOutwardDrugClinicDeptPatientForTe" +
                                "chnicalService_SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.PackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Content {
                get {
                    try {
                        return ((string)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Content\' in table \'spReqOutwardDrugClinicDeptPatientForTech" +
                                "nicalService_SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ReqQty {
                get {
                    try {
                        return ((decimal)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ReqQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqQty\' in table \'spReqOutwardDrugClinicDeptPatientForTechn" +
                                "icalService_SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ReqQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ApprovedQty {
                get {
                    try {
                        return ((decimal)(this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ApprovedQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApprovedQty\' in table \'spReqOutwardDrugClinicDeptPatientFor" +
                                "TechnicalService_SumGetByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ApprovedQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsGenericNameNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.GenericNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetGenericNameNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.GenericNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUnitIDNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUnitNameNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHICodeNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.HICodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHICodeNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.HICodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsUnitPackagingNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitPackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetUnitPackagingNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.UnitPackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPackagingNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.PackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPackagingNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.PackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsContentNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetContentNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsReqQtyNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ReqQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetReqQtyNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ReqQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsApprovedQtyNull() {
                return this.IsNull(this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ApprovedQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetApprovedQtyNull() {
                this[this.tablespReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID.ApprovedQtyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEvent : global::System.EventArgs {
            
            private spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRowChangeEvent(spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spRequestDrugInwardClinicDeptForTechnicalService_GetByIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEvent : global::System.EventArgs {
            
            private spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRowChangeEvent(spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace eHCMS.ReportLib.RptDrugDepts.DataSchema.Request.dsRequestDrugDeptForTechnicalServiceTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRequestDrugInwardClinicDeptForTechnicalService_GetByIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public spRequestDrugInwardClinicDeptForTechnicalService_GetByIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRequestDrugInwardClinicDeptForTechnicalService_GetByID";
            tableMapping.ColumnMappings.Add("ReqForTechID", "ReqForTechID");
            tableMapping.ColumnMappings.Add("StaffID", "StaffID");
            tableMapping.ColumnMappings.Add("DeptID", "DeptID");
            tableMapping.ColumnMappings.Add("ReqDate", "ReqDate");
            tableMapping.ColumnMappings.Add("OutFromStoreID", "OutFromStoreID");
            tableMapping.ColumnMappings.Add("InDeptStoreID", "InDeptStoreID");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("ReqStatus", "ReqStatus");
            tableMapping.ColumnMappings.Add("V_MedProductType", "V_MedProductType");
            tableMapping.ColumnMappings.Add("LogModified", "LogModified");
            tableMapping.ColumnMappings.Add("V_RegistrationType", "V_RegistrationType");
            tableMapping.ColumnMappings.Add("PtRegDetailID", "PtRegDetailID");
            tableMapping.ColumnMappings.Add("IsLock", "IsLock");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("InDeptStoreName", "InDeptStoreName");
            tableMapping.ColumnMappings.Add("OutFromStoreName", "OutFromStoreName");
            tableMapping.ColumnMappings.Add("DaNhanHang", "DaNhanHang");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRequestDrugInwardClinicDeptForTechnicalService_GetByID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReqDrugInClinicDeptID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRequestDrugDeptForTechnicalService.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable dataTable, global::System.Nullable<long> ReqDrugInClinicDeptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReqDrugInClinicDeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(ReqDrugInClinicDeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRequestDrugDeptForTechnicalService.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable GetData(global::System.Nullable<long> ReqDrugInClinicDeptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReqDrugInClinicDeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(ReqDrugInClinicDeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsRequestDrugDeptForTechnicalService.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable dataTable = new dsRequestDrugDeptForTechnicalService.spRequestDrugInwardClinicDeptForTechnicalService_GetByIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID";
            tableMapping.ColumnMappings.Add("GenMedProductID", "GenMedProductID");
            tableMapping.ColumnMappings.Add("ReqDrugInClinicDeptID", "ReqDrugInClinicDeptID");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("GenericName", "GenericName");
            tableMapping.ColumnMappings.Add("UnitID", "UnitID");
            tableMapping.ColumnMappings.Add("UnitName", "UnitName");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("HICode", "HICode");
            tableMapping.ColumnMappings.Add("UnitPackaging", "UnitPackaging");
            tableMapping.ColumnMappings.Add("Packaging", "Packaging");
            tableMapping.ColumnMappings.Add("Content", "Content");
            tableMapping.ColumnMappings.Add("ReqQty", "ReqQty");
            tableMapping.ColumnMappings.Add("ApprovedQty", "ApprovedQty");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ReqDrugInClinicDeptID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsRequestDrugDeptForTechnicalService.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable dataTable, global::System.Nullable<long> ReqDrugInClinicDeptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReqDrugInClinicDeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(ReqDrugInClinicDeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsRequestDrugDeptForTechnicalService.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable GetData(global::System.Nullable<long> ReqDrugInClinicDeptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ReqDrugInClinicDeptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(ReqDrugInClinicDeptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsRequestDrugDeptForTechnicalService.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable dataTable = new dsRequestDrugDeptForTechnicalService.spReqOutwardDrugClinicDeptPatientForTechnicalService_SumGetByIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(dsRequestDrugDeptForTechnicalService dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(dsRequestDrugDeptForTechnicalService dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(dsRequestDrugDeptForTechnicalService dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(dsRequestDrugDeptForTechnicalService dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591