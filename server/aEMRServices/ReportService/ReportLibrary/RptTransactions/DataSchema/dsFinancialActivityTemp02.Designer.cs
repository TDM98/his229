//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eHCMS.ReportLib.RptTransactions.DataSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsFinancialActivityTemp02")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsFinancialActivityTemp02 : global::System.Data.DataSet {
        
        private spRptFinancialActivityTemp02DataTable tablespRptFinancialActivityTemp02;
        
        private spGetRptFinancialActivityTemp02OutAmountDataTable tablespGetRptFinancialActivityTemp02OutAmount;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsFinancialActivityTemp02() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsFinancialActivityTemp02(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spRptFinancialActivityTemp02"] != null)) {
                    base.Tables.Add(new spRptFinancialActivityTemp02DataTable(ds.Tables["spRptFinancialActivityTemp02"]));
                }
                if ((ds.Tables["spGetRptFinancialActivityTemp02OutAmount"] != null)) {
                    base.Tables.Add(new spGetRptFinancialActivityTemp02OutAmountDataTable(ds.Tables["spGetRptFinancialActivityTemp02OutAmount"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRptFinancialActivityTemp02DataTable spRptFinancialActivityTemp02 {
            get {
                return this.tablespRptFinancialActivityTemp02;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spGetRptFinancialActivityTemp02OutAmountDataTable spGetRptFinancialActivityTemp02OutAmount {
            get {
                return this.tablespGetRptFinancialActivityTemp02OutAmount;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsFinancialActivityTemp02 cln = ((dsFinancialActivityTemp02)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spRptFinancialActivityTemp02"] != null)) {
                    base.Tables.Add(new spRptFinancialActivityTemp02DataTable(ds.Tables["spRptFinancialActivityTemp02"]));
                }
                if ((ds.Tables["spGetRptFinancialActivityTemp02OutAmount"] != null)) {
                    base.Tables.Add(new spGetRptFinancialActivityTemp02OutAmountDataTable(ds.Tables["spGetRptFinancialActivityTemp02OutAmount"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespRptFinancialActivityTemp02 = ((spRptFinancialActivityTemp02DataTable)(base.Tables["spRptFinancialActivityTemp02"]));
            if ((initTable == true)) {
                if ((this.tablespRptFinancialActivityTemp02 != null)) {
                    this.tablespRptFinancialActivityTemp02.InitVars();
                }
            }
            this.tablespGetRptFinancialActivityTemp02OutAmount = ((spGetRptFinancialActivityTemp02OutAmountDataTable)(base.Tables["spGetRptFinancialActivityTemp02OutAmount"]));
            if ((initTable == true)) {
                if ((this.tablespGetRptFinancialActivityTemp02OutAmount != null)) {
                    this.tablespGetRptFinancialActivityTemp02OutAmount.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsFinancialActivityTemp02";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsFinancialActivityTemp02.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespRptFinancialActivityTemp02 = new spRptFinancialActivityTemp02DataTable();
            base.Tables.Add(this.tablespRptFinancialActivityTemp02);
            this.tablespGetRptFinancialActivityTemp02OutAmount = new spGetRptFinancialActivityTemp02OutAmountDataTable();
            base.Tables.Add(this.tablespGetRptFinancialActivityTemp02OutAmount);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespRptFinancialActivityTemp02() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespGetRptFinancialActivityTemp02OutAmount() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsFinancialActivityTemp02 ds = new dsFinancialActivityTemp02();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spRptFinancialActivityTemp02RowChangeEventHandler(object sender, spRptFinancialActivityTemp02RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spGetRptFinancialActivityTemp02OutAmountRowChangeEventHandler(object sender, spGetRptFinancialActivityTemp02OutAmountRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRptFinancialActivityTemp02DataTable : global::System.Data.TypedTableBase<spRptFinancialActivityTemp02Row> {
            
            private global::System.Data.DataColumn columnExamAmount;
            
            private global::System.Data.DataColumn columnHIExamAmount;
            
            private global::System.Data.DataColumn columnUltraSoundAmount;
            
            private global::System.Data.DataColumn columnHIUltraSoundAmount;
            
            private global::System.Data.DataColumn columnXRayAmount;
            
            private global::System.Data.DataColumn columnHIXRayAmount;
            
            private global::System.Data.DataColumn columnECGAmount;
            
            private global::System.Data.DataColumn columnHIECGAmount;
            
            private global::System.Data.DataColumn columnBiochemicalAmount;
            
            private global::System.Data.DataColumn columnHIBiochemicalAmount;
            
            private global::System.Data.DataColumn columnBloodchemicalAmount;
            
            private global::System.Data.DataColumn columnHIBloodchemicalAmount;
            
            private global::System.Data.DataColumn columnFunctionalExplorationAmount;
            
            private global::System.Data.DataColumn columnHIFunctionalExplorationAmount;
            
            private global::System.Data.DataColumn columnBloodAmount;
            
            private global::System.Data.DataColumn columnHIBloodAmount;
            
            private global::System.Data.DataColumn columnBedAmount;
            
            private global::System.Data.DataColumn columnHIBedAmount;
            
            private global::System.Data.DataColumn columnDrugAmount;
            
            private global::System.Data.DataColumn columnHIDrugAmount;
            
            private global::System.Data.DataColumn columnSurgicalAmount;
            
            private global::System.Data.DataColumn columnHISurgicalAmount;
            
            private global::System.Data.DataColumn columnOtherAmount;
            
            private global::System.Data.DataColumn columnHIOtherAmount;
            
            private global::System.Data.DataColumn columnMicroBiologyAmount;
            
            private global::System.Data.DataColumn columnHIMicroBiologyAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRptFinancialActivityTemp02DataTable() {
                this.TableName = "spRptFinancialActivityTemp02";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRptFinancialActivityTemp02DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spRptFinancialActivityTemp02DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamAmountColumn {
                get {
                    return this.columnExamAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIExamAmountColumn {
                get {
                    return this.columnHIExamAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UltraSoundAmountColumn {
                get {
                    return this.columnUltraSoundAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIUltraSoundAmountColumn {
                get {
                    return this.columnHIUltraSoundAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn XRayAmountColumn {
                get {
                    return this.columnXRayAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIXRayAmountColumn {
                get {
                    return this.columnHIXRayAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ECGAmountColumn {
                get {
                    return this.columnECGAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIECGAmountColumn {
                get {
                    return this.columnHIECGAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BiochemicalAmountColumn {
                get {
                    return this.columnBiochemicalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIBiochemicalAmountColumn {
                get {
                    return this.columnHIBiochemicalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BloodchemicalAmountColumn {
                get {
                    return this.columnBloodchemicalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIBloodchemicalAmountColumn {
                get {
                    return this.columnHIBloodchemicalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FunctionalExplorationAmountColumn {
                get {
                    return this.columnFunctionalExplorationAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIFunctionalExplorationAmountColumn {
                get {
                    return this.columnHIFunctionalExplorationAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BloodAmountColumn {
                get {
                    return this.columnBloodAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIBloodAmountColumn {
                get {
                    return this.columnHIBloodAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BedAmountColumn {
                get {
                    return this.columnBedAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIBedAmountColumn {
                get {
                    return this.columnHIBedAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugAmountColumn {
                get {
                    return this.columnDrugAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIDrugAmountColumn {
                get {
                    return this.columnHIDrugAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SurgicalAmountColumn {
                get {
                    return this.columnSurgicalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HISurgicalAmountColumn {
                get {
                    return this.columnHISurgicalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherAmountColumn {
                get {
                    return this.columnOtherAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIOtherAmountColumn {
                get {
                    return this.columnHIOtherAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MicroBiologyAmountColumn {
                get {
                    return this.columnMicroBiologyAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIMicroBiologyAmountColumn {
                get {
                    return this.columnHIMicroBiologyAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRptFinancialActivityTemp02Row this[int index] {
                get {
                    return ((spRptFinancialActivityTemp02Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRptFinancialActivityTemp02RowChangeEventHandler spRptFinancialActivityTemp02RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRptFinancialActivityTemp02RowChangeEventHandler spRptFinancialActivityTemp02RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRptFinancialActivityTemp02RowChangeEventHandler spRptFinancialActivityTemp02RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRptFinancialActivityTemp02RowChangeEventHandler spRptFinancialActivityTemp02RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspRptFinancialActivityTemp02Row(spRptFinancialActivityTemp02Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRptFinancialActivityTemp02Row AddspRptFinancialActivityTemp02Row(
                        decimal ExamAmount, 
                        decimal HIExamAmount, 
                        decimal UltraSoundAmount, 
                        decimal HIUltraSoundAmount, 
                        decimal XRayAmount, 
                        decimal HIXRayAmount, 
                        decimal ECGAmount, 
                        decimal HIECGAmount, 
                        decimal BiochemicalAmount, 
                        decimal HIBiochemicalAmount, 
                        decimal BloodchemicalAmount, 
                        decimal HIBloodchemicalAmount, 
                        decimal FunctionalExplorationAmount, 
                        decimal HIFunctionalExplorationAmount, 
                        decimal BloodAmount, 
                        decimal HIBloodAmount, 
                        decimal BedAmount, 
                        decimal HIBedAmount, 
                        decimal DrugAmount, 
                        decimal HIDrugAmount, 
                        decimal SurgicalAmount, 
                        decimal HISurgicalAmount, 
                        decimal OtherAmount, 
                        decimal HIOtherAmount, 
                        decimal MicroBiologyAmount, 
                        decimal HIMicroBiologyAmount) {
                spRptFinancialActivityTemp02Row rowspRptFinancialActivityTemp02Row = ((spRptFinancialActivityTemp02Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ExamAmount,
                        HIExamAmount,
                        UltraSoundAmount,
                        HIUltraSoundAmount,
                        XRayAmount,
                        HIXRayAmount,
                        ECGAmount,
                        HIECGAmount,
                        BiochemicalAmount,
                        HIBiochemicalAmount,
                        BloodchemicalAmount,
                        HIBloodchemicalAmount,
                        FunctionalExplorationAmount,
                        HIFunctionalExplorationAmount,
                        BloodAmount,
                        HIBloodAmount,
                        BedAmount,
                        HIBedAmount,
                        DrugAmount,
                        HIDrugAmount,
                        SurgicalAmount,
                        HISurgicalAmount,
                        OtherAmount,
                        HIOtherAmount,
                        MicroBiologyAmount,
                        HIMicroBiologyAmount};
                rowspRptFinancialActivityTemp02Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRptFinancialActivityTemp02Row);
                return rowspRptFinancialActivityTemp02Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRptFinancialActivityTemp02DataTable cln = ((spRptFinancialActivityTemp02DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRptFinancialActivityTemp02DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnExamAmount = base.Columns["ExamAmount"];
                this.columnHIExamAmount = base.Columns["HIExamAmount"];
                this.columnUltraSoundAmount = base.Columns["UltraSoundAmount"];
                this.columnHIUltraSoundAmount = base.Columns["HIUltraSoundAmount"];
                this.columnXRayAmount = base.Columns["XRayAmount"];
                this.columnHIXRayAmount = base.Columns["HIXRayAmount"];
                this.columnECGAmount = base.Columns["ECGAmount"];
                this.columnHIECGAmount = base.Columns["HIECGAmount"];
                this.columnBiochemicalAmount = base.Columns["BiochemicalAmount"];
                this.columnHIBiochemicalAmount = base.Columns["HIBiochemicalAmount"];
                this.columnBloodchemicalAmount = base.Columns["BloodchemicalAmount"];
                this.columnHIBloodchemicalAmount = base.Columns["HIBloodchemicalAmount"];
                this.columnFunctionalExplorationAmount = base.Columns["FunctionalExplorationAmount"];
                this.columnHIFunctionalExplorationAmount = base.Columns["HIFunctionalExplorationAmount"];
                this.columnBloodAmount = base.Columns["BloodAmount"];
                this.columnHIBloodAmount = base.Columns["HIBloodAmount"];
                this.columnBedAmount = base.Columns["BedAmount"];
                this.columnHIBedAmount = base.Columns["HIBedAmount"];
                this.columnDrugAmount = base.Columns["DrugAmount"];
                this.columnHIDrugAmount = base.Columns["HIDrugAmount"];
                this.columnSurgicalAmount = base.Columns["SurgicalAmount"];
                this.columnHISurgicalAmount = base.Columns["HISurgicalAmount"];
                this.columnOtherAmount = base.Columns["OtherAmount"];
                this.columnHIOtherAmount = base.Columns["HIOtherAmount"];
                this.columnMicroBiologyAmount = base.Columns["MicroBiologyAmount"];
                this.columnHIMicroBiologyAmount = base.Columns["HIMicroBiologyAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnExamAmount = new global::System.Data.DataColumn("ExamAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamAmount);
                this.columnHIExamAmount = new global::System.Data.DataColumn("HIExamAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIExamAmount);
                this.columnUltraSoundAmount = new global::System.Data.DataColumn("UltraSoundAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUltraSoundAmount);
                this.columnHIUltraSoundAmount = new global::System.Data.DataColumn("HIUltraSoundAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIUltraSoundAmount);
                this.columnXRayAmount = new global::System.Data.DataColumn("XRayAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXRayAmount);
                this.columnHIXRayAmount = new global::System.Data.DataColumn("HIXRayAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIXRayAmount);
                this.columnECGAmount = new global::System.Data.DataColumn("ECGAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnECGAmount);
                this.columnHIECGAmount = new global::System.Data.DataColumn("HIECGAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIECGAmount);
                this.columnBiochemicalAmount = new global::System.Data.DataColumn("BiochemicalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBiochemicalAmount);
                this.columnHIBiochemicalAmount = new global::System.Data.DataColumn("HIBiochemicalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIBiochemicalAmount);
                this.columnBloodchemicalAmount = new global::System.Data.DataColumn("BloodchemicalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodchemicalAmount);
                this.columnHIBloodchemicalAmount = new global::System.Data.DataColumn("HIBloodchemicalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIBloodchemicalAmount);
                this.columnFunctionalExplorationAmount = new global::System.Data.DataColumn("FunctionalExplorationAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunctionalExplorationAmount);
                this.columnHIFunctionalExplorationAmount = new global::System.Data.DataColumn("HIFunctionalExplorationAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIFunctionalExplorationAmount);
                this.columnBloodAmount = new global::System.Data.DataColumn("BloodAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodAmount);
                this.columnHIBloodAmount = new global::System.Data.DataColumn("HIBloodAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIBloodAmount);
                this.columnBedAmount = new global::System.Data.DataColumn("BedAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBedAmount);
                this.columnHIBedAmount = new global::System.Data.DataColumn("HIBedAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIBedAmount);
                this.columnDrugAmount = new global::System.Data.DataColumn("DrugAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugAmount);
                this.columnHIDrugAmount = new global::System.Data.DataColumn("HIDrugAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIDrugAmount);
                this.columnSurgicalAmount = new global::System.Data.DataColumn("SurgicalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSurgicalAmount);
                this.columnHISurgicalAmount = new global::System.Data.DataColumn("HISurgicalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHISurgicalAmount);
                this.columnOtherAmount = new global::System.Data.DataColumn("OtherAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherAmount);
                this.columnHIOtherAmount = new global::System.Data.DataColumn("HIOtherAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIOtherAmount);
                this.columnMicroBiologyAmount = new global::System.Data.DataColumn("MicroBiologyAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMicroBiologyAmount);
                this.columnHIMicroBiologyAmount = new global::System.Data.DataColumn("HIMicroBiologyAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIMicroBiologyAmount);
                this.columnExamAmount.ReadOnly = true;
                this.columnHIExamAmount.ReadOnly = true;
                this.columnUltraSoundAmount.ReadOnly = true;
                this.columnHIUltraSoundAmount.ReadOnly = true;
                this.columnXRayAmount.ReadOnly = true;
                this.columnHIXRayAmount.ReadOnly = true;
                this.columnECGAmount.ReadOnly = true;
                this.columnHIECGAmount.ReadOnly = true;
                this.columnBiochemicalAmount.ReadOnly = true;
                this.columnHIBiochemicalAmount.ReadOnly = true;
                this.columnBloodchemicalAmount.ReadOnly = true;
                this.columnHIBloodchemicalAmount.ReadOnly = true;
                this.columnFunctionalExplorationAmount.ReadOnly = true;
                this.columnHIFunctionalExplorationAmount.ReadOnly = true;
                this.columnBloodAmount.ReadOnly = true;
                this.columnHIBloodAmount.ReadOnly = true;
                this.columnBedAmount.ReadOnly = true;
                this.columnHIBedAmount.ReadOnly = true;
                this.columnDrugAmount.ReadOnly = true;
                this.columnHIDrugAmount.ReadOnly = true;
                this.columnSurgicalAmount.ReadOnly = true;
                this.columnHISurgicalAmount.ReadOnly = true;
                this.columnOtherAmount.ReadOnly = true;
                this.columnHIOtherAmount.ReadOnly = true;
                this.columnMicroBiologyAmount.ReadOnly = true;
                this.columnHIMicroBiologyAmount.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRptFinancialActivityTemp02Row NewspRptFinancialActivityTemp02Row() {
                return ((spRptFinancialActivityTemp02Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRptFinancialActivityTemp02Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRptFinancialActivityTemp02Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRptFinancialActivityTemp02RowChanged != null)) {
                    this.spRptFinancialActivityTemp02RowChanged(this, new spRptFinancialActivityTemp02RowChangeEvent(((spRptFinancialActivityTemp02Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRptFinancialActivityTemp02RowChanging != null)) {
                    this.spRptFinancialActivityTemp02RowChanging(this, new spRptFinancialActivityTemp02RowChangeEvent(((spRptFinancialActivityTemp02Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRptFinancialActivityTemp02RowDeleted != null)) {
                    this.spRptFinancialActivityTemp02RowDeleted(this, new spRptFinancialActivityTemp02RowChangeEvent(((spRptFinancialActivityTemp02Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRptFinancialActivityTemp02RowDeleting != null)) {
                    this.spRptFinancialActivityTemp02RowDeleting(this, new spRptFinancialActivityTemp02RowChangeEvent(((spRptFinancialActivityTemp02Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespRptFinancialActivityTemp02Row(spRptFinancialActivityTemp02Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsFinancialActivityTemp02 ds = new dsFinancialActivityTemp02();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRptFinancialActivityTemp02DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spGetRptFinancialActivityTemp02OutAmountDataTable : global::System.Data.TypedTableBase<spGetRptFinancialActivityTemp02OutAmountRow> {
            
            private global::System.Data.DataColumn columnDrugOutAmount;
            
            private global::System.Data.DataColumn columnBloodOutAmount;
            
            private global::System.Data.DataColumn columnIntravenousOutAmount;
            
            private global::System.Data.DataColumn columnXRayOutAmount;
            
            private global::System.Data.DataColumn columnChemicalsOutAmount;
            
            private global::System.Data.DataColumn columnMedItemsOutAmount;
            
            private global::System.Data.DataColumn columnRewardOutAmount;
            
            private global::System.Data.DataColumn columnRegulateOutAmount;
            
            private global::System.Data.DataColumn columnOtherOutAmount;
            
            private global::System.Data.DataColumn columnBasicBuildingOutAmount;
            
            private global::System.Data.DataColumn columnAverageRewardOutAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spGetRptFinancialActivityTemp02OutAmountDataTable() {
                this.TableName = "spGetRptFinancialActivityTemp02OutAmount";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spGetRptFinancialActivityTemp02OutAmountDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spGetRptFinancialActivityTemp02OutAmountDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugOutAmountColumn {
                get {
                    return this.columnDrugOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BloodOutAmountColumn {
                get {
                    return this.columnBloodOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IntravenousOutAmountColumn {
                get {
                    return this.columnIntravenousOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn XRayOutAmountColumn {
                get {
                    return this.columnXRayOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChemicalsOutAmountColumn {
                get {
                    return this.columnChemicalsOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MedItemsOutAmountColumn {
                get {
                    return this.columnMedItemsOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RewardOutAmountColumn {
                get {
                    return this.columnRewardOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegulateOutAmountColumn {
                get {
                    return this.columnRegulateOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherOutAmountColumn {
                get {
                    return this.columnOtherOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BasicBuildingOutAmountColumn {
                get {
                    return this.columnBasicBuildingOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AverageRewardOutAmountColumn {
                get {
                    return this.columnAverageRewardOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spGetRptFinancialActivityTemp02OutAmountRow this[int index] {
                get {
                    return ((spGetRptFinancialActivityTemp02OutAmountRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spGetRptFinancialActivityTemp02OutAmountRowChangeEventHandler spGetRptFinancialActivityTemp02OutAmountRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spGetRptFinancialActivityTemp02OutAmountRowChangeEventHandler spGetRptFinancialActivityTemp02OutAmountRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spGetRptFinancialActivityTemp02OutAmountRowChangeEventHandler spGetRptFinancialActivityTemp02OutAmountRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spGetRptFinancialActivityTemp02OutAmountRowChangeEventHandler spGetRptFinancialActivityTemp02OutAmountRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspGetRptFinancialActivityTemp02OutAmountRow(spGetRptFinancialActivityTemp02OutAmountRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spGetRptFinancialActivityTemp02OutAmountRow AddspGetRptFinancialActivityTemp02OutAmountRow(decimal DrugOutAmount, decimal BloodOutAmount, decimal IntravenousOutAmount, decimal XRayOutAmount, decimal ChemicalsOutAmount, decimal MedItemsOutAmount, decimal RewardOutAmount, decimal RegulateOutAmount, decimal OtherOutAmount, decimal BasicBuildingOutAmount, decimal AverageRewardOutAmount) {
                spGetRptFinancialActivityTemp02OutAmountRow rowspGetRptFinancialActivityTemp02OutAmountRow = ((spGetRptFinancialActivityTemp02OutAmountRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DrugOutAmount,
                        BloodOutAmount,
                        IntravenousOutAmount,
                        XRayOutAmount,
                        ChemicalsOutAmount,
                        MedItemsOutAmount,
                        RewardOutAmount,
                        RegulateOutAmount,
                        OtherOutAmount,
                        BasicBuildingOutAmount,
                        AverageRewardOutAmount};
                rowspGetRptFinancialActivityTemp02OutAmountRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspGetRptFinancialActivityTemp02OutAmountRow);
                return rowspGetRptFinancialActivityTemp02OutAmountRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spGetRptFinancialActivityTemp02OutAmountDataTable cln = ((spGetRptFinancialActivityTemp02OutAmountDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spGetRptFinancialActivityTemp02OutAmountDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDrugOutAmount = base.Columns["DrugOutAmount"];
                this.columnBloodOutAmount = base.Columns["BloodOutAmount"];
                this.columnIntravenousOutAmount = base.Columns["IntravenousOutAmount"];
                this.columnXRayOutAmount = base.Columns["XRayOutAmount"];
                this.columnChemicalsOutAmount = base.Columns["ChemicalsOutAmount"];
                this.columnMedItemsOutAmount = base.Columns["MedItemsOutAmount"];
                this.columnRewardOutAmount = base.Columns["RewardOutAmount"];
                this.columnRegulateOutAmount = base.Columns["RegulateOutAmount"];
                this.columnOtherOutAmount = base.Columns["OtherOutAmount"];
                this.columnBasicBuildingOutAmount = base.Columns["BasicBuildingOutAmount"];
                this.columnAverageRewardOutAmount = base.Columns["AverageRewardOutAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDrugOutAmount = new global::System.Data.DataColumn("DrugOutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugOutAmount);
                this.columnBloodOutAmount = new global::System.Data.DataColumn("BloodOutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodOutAmount);
                this.columnIntravenousOutAmount = new global::System.Data.DataColumn("IntravenousOutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIntravenousOutAmount);
                this.columnXRayOutAmount = new global::System.Data.DataColumn("XRayOutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXRayOutAmount);
                this.columnChemicalsOutAmount = new global::System.Data.DataColumn("ChemicalsOutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChemicalsOutAmount);
                this.columnMedItemsOutAmount = new global::System.Data.DataColumn("MedItemsOutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedItemsOutAmount);
                this.columnRewardOutAmount = new global::System.Data.DataColumn("RewardOutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRewardOutAmount);
                this.columnRegulateOutAmount = new global::System.Data.DataColumn("RegulateOutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegulateOutAmount);
                this.columnOtherOutAmount = new global::System.Data.DataColumn("OtherOutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherOutAmount);
                this.columnBasicBuildingOutAmount = new global::System.Data.DataColumn("BasicBuildingOutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicBuildingOutAmount);
                this.columnAverageRewardOutAmount = new global::System.Data.DataColumn("AverageRewardOutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageRewardOutAmount);
                this.columnDrugOutAmount.ReadOnly = true;
                this.columnBloodOutAmount.ReadOnly = true;
                this.columnIntravenousOutAmount.ReadOnly = true;
                this.columnXRayOutAmount.ReadOnly = true;
                this.columnChemicalsOutAmount.ReadOnly = true;
                this.columnMedItemsOutAmount.ReadOnly = true;
                this.columnRewardOutAmount.ReadOnly = true;
                this.columnRegulateOutAmount.ReadOnly = true;
                this.columnOtherOutAmount.ReadOnly = true;
                this.columnBasicBuildingOutAmount.ReadOnly = true;
                this.columnAverageRewardOutAmount.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spGetRptFinancialActivityTemp02OutAmountRow NewspGetRptFinancialActivityTemp02OutAmountRow() {
                return ((spGetRptFinancialActivityTemp02OutAmountRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spGetRptFinancialActivityTemp02OutAmountRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spGetRptFinancialActivityTemp02OutAmountRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spGetRptFinancialActivityTemp02OutAmountRowChanged != null)) {
                    this.spGetRptFinancialActivityTemp02OutAmountRowChanged(this, new spGetRptFinancialActivityTemp02OutAmountRowChangeEvent(((spGetRptFinancialActivityTemp02OutAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spGetRptFinancialActivityTemp02OutAmountRowChanging != null)) {
                    this.spGetRptFinancialActivityTemp02OutAmountRowChanging(this, new spGetRptFinancialActivityTemp02OutAmountRowChangeEvent(((spGetRptFinancialActivityTemp02OutAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spGetRptFinancialActivityTemp02OutAmountRowDeleted != null)) {
                    this.spGetRptFinancialActivityTemp02OutAmountRowDeleted(this, new spGetRptFinancialActivityTemp02OutAmountRowChangeEvent(((spGetRptFinancialActivityTemp02OutAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spGetRptFinancialActivityTemp02OutAmountRowDeleting != null)) {
                    this.spGetRptFinancialActivityTemp02OutAmountRowDeleting(this, new spGetRptFinancialActivityTemp02OutAmountRowChangeEvent(((spGetRptFinancialActivityTemp02OutAmountRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespGetRptFinancialActivityTemp02OutAmountRow(spGetRptFinancialActivityTemp02OutAmountRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsFinancialActivityTemp02 ds = new dsFinancialActivityTemp02();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spGetRptFinancialActivityTemp02OutAmountDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRptFinancialActivityTemp02Row : global::System.Data.DataRow {
            
            private spRptFinancialActivityTemp02DataTable tablespRptFinancialActivityTemp02;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRptFinancialActivityTemp02Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRptFinancialActivityTemp02 = ((spRptFinancialActivityTemp02DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExamAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.ExamAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamAmount\' in table \'spRptFinancialActivityTemp02\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.ExamAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIExamAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIExamAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIExamAmount\' in table \'spRptFinancialActivityTemp02\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIExamAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UltraSoundAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.UltraSoundAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UltraSoundAmount\' in table \'spRptFinancialActivityTemp02\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.UltraSoundAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIUltraSoundAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIUltraSoundAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIUltraSoundAmount\' in table \'spRptFinancialActivityTemp02\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIUltraSoundAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal XRayAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.XRayAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XRayAmount\' in table \'spRptFinancialActivityTemp02\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.XRayAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIXRayAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIXRayAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIXRayAmount\' in table \'spRptFinancialActivityTemp02\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIXRayAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ECGAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.ECGAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ECGAmount\' in table \'spRptFinancialActivityTemp02\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.ECGAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIECGAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIECGAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIECGAmount\' in table \'spRptFinancialActivityTemp02\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIECGAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BiochemicalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.BiochemicalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BiochemicalAmount\' in table \'spRptFinancialActivityTemp02\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.BiochemicalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIBiochemicalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIBiochemicalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIBiochemicalAmount\' in table \'spRptFinancialActivityTemp02" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIBiochemicalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BloodchemicalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.BloodchemicalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodchemicalAmount\' in table \'spRptFinancialActivityTemp02" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.BloodchemicalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIBloodchemicalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIBloodchemicalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIBloodchemicalAmount\' in table \'spRptFinancialActivityTemp" +
                                "02\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIBloodchemicalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FunctionalExplorationAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.FunctionalExplorationAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FunctionalExplorationAmount\' in table \'spRptFinancialActivi" +
                                "tyTemp02\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.FunctionalExplorationAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIFunctionalExplorationAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIFunctionalExplorationAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIFunctionalExplorationAmount\' in table \'spRptFinancialActi" +
                                "vityTemp02\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIFunctionalExplorationAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BloodAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.BloodAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodAmount\' in table \'spRptFinancialActivityTemp02\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.BloodAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIBloodAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIBloodAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIBloodAmount\' in table \'spRptFinancialActivityTemp02\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIBloodAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BedAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.BedAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BedAmount\' in table \'spRptFinancialActivityTemp02\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.BedAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIBedAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIBedAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIBedAmount\' in table \'spRptFinancialActivityTemp02\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIBedAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DrugAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.DrugAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugAmount\' in table \'spRptFinancialActivityTemp02\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.DrugAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIDrugAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIDrugAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIDrugAmount\' in table \'spRptFinancialActivityTemp02\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIDrugAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SurgicalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.SurgicalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SurgicalAmount\' in table \'spRptFinancialActivityTemp02\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.SurgicalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HISurgicalAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HISurgicalAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HISurgicalAmount\' in table \'spRptFinancialActivityTemp02\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HISurgicalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.OtherAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherAmount\' in table \'spRptFinancialActivityTemp02\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.OtherAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIOtherAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIOtherAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIOtherAmount\' in table \'spRptFinancialActivityTemp02\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIOtherAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MicroBiologyAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.MicroBiologyAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MicroBiologyAmount\' in table \'spRptFinancialActivityTemp02\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.MicroBiologyAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIMicroBiologyAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespRptFinancialActivityTemp02.HIMicroBiologyAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIMicroBiologyAmount\' in table \'spRptFinancialActivityTemp0" +
                                "2\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptFinancialActivityTemp02.HIMicroBiologyAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExamAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.ExamAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExamAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.ExamAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIExamAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIExamAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIExamAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIExamAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUltraSoundAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.UltraSoundAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUltraSoundAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.UltraSoundAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIUltraSoundAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIUltraSoundAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIUltraSoundAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIUltraSoundAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsXRayAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.XRayAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetXRayAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.XRayAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIXRayAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIXRayAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIXRayAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIXRayAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsECGAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.ECGAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetECGAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.ECGAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIECGAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIECGAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIECGAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIECGAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBiochemicalAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.BiochemicalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBiochemicalAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.BiochemicalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIBiochemicalAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIBiochemicalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIBiochemicalAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIBiochemicalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBloodchemicalAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.BloodchemicalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBloodchemicalAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.BloodchemicalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIBloodchemicalAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIBloodchemicalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIBloodchemicalAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIBloodchemicalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFunctionalExplorationAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.FunctionalExplorationAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFunctionalExplorationAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.FunctionalExplorationAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIFunctionalExplorationAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIFunctionalExplorationAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIFunctionalExplorationAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIFunctionalExplorationAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBloodAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.BloodAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBloodAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.BloodAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIBloodAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIBloodAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIBloodAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIBloodAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBedAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.BedAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBedAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.BedAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIBedAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIBedAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIBedAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIBedAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.DrugAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.DrugAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIDrugAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIDrugAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIDrugAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIDrugAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSurgicalAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.SurgicalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSurgicalAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.SurgicalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHISurgicalAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HISurgicalAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHISurgicalAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HISurgicalAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.OtherAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.OtherAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIOtherAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIOtherAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIOtherAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIOtherAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMicroBiologyAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.MicroBiologyAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMicroBiologyAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.MicroBiologyAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIMicroBiologyAmountNull() {
                return this.IsNull(this.tablespRptFinancialActivityTemp02.HIMicroBiologyAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIMicroBiologyAmountNull() {
                this[this.tablespRptFinancialActivityTemp02.HIMicroBiologyAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spGetRptFinancialActivityTemp02OutAmountRow : global::System.Data.DataRow {
            
            private spGetRptFinancialActivityTemp02OutAmountDataTable tablespGetRptFinancialActivityTemp02OutAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spGetRptFinancialActivityTemp02OutAmountRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespGetRptFinancialActivityTemp02OutAmount = ((spGetRptFinancialActivityTemp02OutAmountDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DrugOutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespGetRptFinancialActivityTemp02OutAmount.DrugOutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugOutAmount\' in table \'spGetRptFinancialActivityTemp02Out" +
                                "Amount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetRptFinancialActivityTemp02OutAmount.DrugOutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BloodOutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespGetRptFinancialActivityTemp02OutAmount.BloodOutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodOutAmount\' in table \'spGetRptFinancialActivityTemp02Ou" +
                                "tAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetRptFinancialActivityTemp02OutAmount.BloodOutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal IntravenousOutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespGetRptFinancialActivityTemp02OutAmount.IntravenousOutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IntravenousOutAmount\' in table \'spGetRptFinancialActivityTe" +
                                "mp02OutAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetRptFinancialActivityTemp02OutAmount.IntravenousOutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal XRayOutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespGetRptFinancialActivityTemp02OutAmount.XRayOutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XRayOutAmount\' in table \'spGetRptFinancialActivityTemp02Out" +
                                "Amount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetRptFinancialActivityTemp02OutAmount.XRayOutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ChemicalsOutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespGetRptFinancialActivityTemp02OutAmount.ChemicalsOutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChemicalsOutAmount\' in table \'spGetRptFinancialActivityTemp" +
                                "02OutAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetRptFinancialActivityTemp02OutAmount.ChemicalsOutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MedItemsOutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespGetRptFinancialActivityTemp02OutAmount.MedItemsOutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedItemsOutAmount\' in table \'spGetRptFinancialActivityTemp0" +
                                "2OutAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetRptFinancialActivityTemp02OutAmount.MedItemsOutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RewardOutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespGetRptFinancialActivityTemp02OutAmount.RewardOutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RewardOutAmount\' in table \'spGetRptFinancialActivityTemp02O" +
                                "utAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetRptFinancialActivityTemp02OutAmount.RewardOutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RegulateOutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespGetRptFinancialActivityTemp02OutAmount.RegulateOutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegulateOutAmount\' in table \'spGetRptFinancialActivityTemp0" +
                                "2OutAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetRptFinancialActivityTemp02OutAmount.RegulateOutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherOutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespGetRptFinancialActivityTemp02OutAmount.OtherOutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OtherOutAmount\' in table \'spGetRptFinancialActivityTemp02Ou" +
                                "tAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetRptFinancialActivityTemp02OutAmount.OtherOutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BasicBuildingOutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespGetRptFinancialActivityTemp02OutAmount.BasicBuildingOutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BasicBuildingOutAmount\' in table \'spGetRptFinancialActivity" +
                                "Temp02OutAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetRptFinancialActivityTemp02OutAmount.BasicBuildingOutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AverageRewardOutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespGetRptFinancialActivityTemp02OutAmount.AverageRewardOutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AverageRewardOutAmount\' in table \'spGetRptFinancialActivity" +
                                "Temp02OutAmount\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetRptFinancialActivityTemp02OutAmount.AverageRewardOutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugOutAmountNull() {
                return this.IsNull(this.tablespGetRptFinancialActivityTemp02OutAmount.DrugOutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugOutAmountNull() {
                this[this.tablespGetRptFinancialActivityTemp02OutAmount.DrugOutAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBloodOutAmountNull() {
                return this.IsNull(this.tablespGetRptFinancialActivityTemp02OutAmount.BloodOutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBloodOutAmountNull() {
                this[this.tablespGetRptFinancialActivityTemp02OutAmount.BloodOutAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIntravenousOutAmountNull() {
                return this.IsNull(this.tablespGetRptFinancialActivityTemp02OutAmount.IntravenousOutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIntravenousOutAmountNull() {
                this[this.tablespGetRptFinancialActivityTemp02OutAmount.IntravenousOutAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsXRayOutAmountNull() {
                return this.IsNull(this.tablespGetRptFinancialActivityTemp02OutAmount.XRayOutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetXRayOutAmountNull() {
                this[this.tablespGetRptFinancialActivityTemp02OutAmount.XRayOutAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChemicalsOutAmountNull() {
                return this.IsNull(this.tablespGetRptFinancialActivityTemp02OutAmount.ChemicalsOutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChemicalsOutAmountNull() {
                this[this.tablespGetRptFinancialActivityTemp02OutAmount.ChemicalsOutAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMedItemsOutAmountNull() {
                return this.IsNull(this.tablespGetRptFinancialActivityTemp02OutAmount.MedItemsOutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMedItemsOutAmountNull() {
                this[this.tablespGetRptFinancialActivityTemp02OutAmount.MedItemsOutAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRewardOutAmountNull() {
                return this.IsNull(this.tablespGetRptFinancialActivityTemp02OutAmount.RewardOutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRewardOutAmountNull() {
                this[this.tablespGetRptFinancialActivityTemp02OutAmount.RewardOutAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegulateOutAmountNull() {
                return this.IsNull(this.tablespGetRptFinancialActivityTemp02OutAmount.RegulateOutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegulateOutAmountNull() {
                this[this.tablespGetRptFinancialActivityTemp02OutAmount.RegulateOutAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOtherOutAmountNull() {
                return this.IsNull(this.tablespGetRptFinancialActivityTemp02OutAmount.OtherOutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOtherOutAmountNull() {
                this[this.tablespGetRptFinancialActivityTemp02OutAmount.OtherOutAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBasicBuildingOutAmountNull() {
                return this.IsNull(this.tablespGetRptFinancialActivityTemp02OutAmount.BasicBuildingOutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBasicBuildingOutAmountNull() {
                this[this.tablespGetRptFinancialActivityTemp02OutAmount.BasicBuildingOutAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAverageRewardOutAmountNull() {
                return this.IsNull(this.tablespGetRptFinancialActivityTemp02OutAmount.AverageRewardOutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAverageRewardOutAmountNull() {
                this[this.tablespGetRptFinancialActivityTemp02OutAmount.AverageRewardOutAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spRptFinancialActivityTemp02RowChangeEvent : global::System.EventArgs {
            
            private spRptFinancialActivityTemp02Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRptFinancialActivityTemp02RowChangeEvent(spRptFinancialActivityTemp02Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRptFinancialActivityTemp02Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spGetRptFinancialActivityTemp02OutAmountRowChangeEvent : global::System.EventArgs {
            
            private spGetRptFinancialActivityTemp02OutAmountRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spGetRptFinancialActivityTemp02OutAmountRowChangeEvent(spGetRptFinancialActivityTemp02OutAmountRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spGetRptFinancialActivityTemp02OutAmountRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace eHCMS.ReportLib.RptTransactions.DataSchema.dsFinancialActivityTemp02TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRptFinancialActivityTemp02TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spRptFinancialActivityTemp02TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRptFinancialActivityTemp02";
            tableMapping.ColumnMappings.Add("ExamAmount", "ExamAmount");
            tableMapping.ColumnMappings.Add("HIExamAmount", "HIExamAmount");
            tableMapping.ColumnMappings.Add("UltraSoundAmount", "UltraSoundAmount");
            tableMapping.ColumnMappings.Add("HIUltraSoundAmount", "HIUltraSoundAmount");
            tableMapping.ColumnMappings.Add("XRayAmount", "XRayAmount");
            tableMapping.ColumnMappings.Add("HIXRayAmount", "HIXRayAmount");
            tableMapping.ColumnMappings.Add("ECGAmount", "ECGAmount");
            tableMapping.ColumnMappings.Add("HIECGAmount", "HIECGAmount");
            tableMapping.ColumnMappings.Add("BiochemicalAmount", "BiochemicalAmount");
            tableMapping.ColumnMappings.Add("HIBiochemicalAmount", "HIBiochemicalAmount");
            tableMapping.ColumnMappings.Add("BloodchemicalAmount", "BloodchemicalAmount");
            tableMapping.ColumnMappings.Add("HIBloodchemicalAmount", "HIBloodchemicalAmount");
            tableMapping.ColumnMappings.Add("FunctionalExplorationAmount", "FunctionalExplorationAmount");
            tableMapping.ColumnMappings.Add("HIFunctionalExplorationAmount", "HIFunctionalExplorationAmount");
            tableMapping.ColumnMappings.Add("BloodAmount", "BloodAmount");
            tableMapping.ColumnMappings.Add("HIBloodAmount", "HIBloodAmount");
            tableMapping.ColumnMappings.Add("BedAmount", "BedAmount");
            tableMapping.ColumnMappings.Add("HIBedAmount", "HIBedAmount");
            tableMapping.ColumnMappings.Add("HIDrugAmount", "HIDrugAmount");
            tableMapping.ColumnMappings.Add("SurgicalAmount", "SurgicalAmount");
            tableMapping.ColumnMappings.Add("HISurgicalAmount", "HISurgicalAmount");
            tableMapping.ColumnMappings.Add("OtherAmount", "OtherAmount");
            tableMapping.ColumnMappings.Add("HIOtherAmount", "HIOtherAmount");
            tableMapping.ColumnMappings.Add("DrugAmount", "DrugAmount");
            tableMapping.ColumnMappings.Add("MicroBiologyAmount", "MicroBiologyAmount");
            tableMapping.ColumnMappings.Add("HIMicroBiologyAmount", "HIMicroBiologyAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRptFinancialActivityTemp02";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsFinancialActivityTemp02.spRptFinancialActivityTemp02DataTable dataTable, global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> EndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((StartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(EndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsFinancialActivityTemp02.spRptFinancialActivityTemp02DataTable GetData(global::System.Nullable<global::System.DateTime> StartDate, global::System.Nullable<global::System.DateTime> EndDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((StartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((EndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(EndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            dsFinancialActivityTemp02.spRptFinancialActivityTemp02DataTable dataTable = new dsFinancialActivityTemp02.spRptFinancialActivityTemp02DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spGetRptFinancialActivityTemp02OutAmountTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spGetRptFinancialActivityTemp02OutAmountTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spGetRptFinancialActivityTemp02OutAmount";
            tableMapping.ColumnMappings.Add("DrugOutAmount", "DrugOutAmount");
            tableMapping.ColumnMappings.Add("BloodOutAmount", "BloodOutAmount");
            tableMapping.ColumnMappings.Add("IntravenousOutAmount", "IntravenousOutAmount");
            tableMapping.ColumnMappings.Add("XRayOutAmount", "XRayOutAmount");
            tableMapping.ColumnMappings.Add("ChemicalsOutAmount", "ChemicalsOutAmount");
            tableMapping.ColumnMappings.Add("MedItemsOutAmount", "MedItemsOutAmount");
            tableMapping.ColumnMappings.Add("RewardOutAmount", "RewardOutAmount");
            tableMapping.ColumnMappings.Add("RegulateOutAmount", "RegulateOutAmount");
            tableMapping.ColumnMappings.Add("OtherOutAmount", "OtherOutAmount");
            tableMapping.ColumnMappings.Add("BasicBuildingOutAmount", "BasicBuildingOutAmount");
            tableMapping.ColumnMappings.Add("AverageRewardOutAmount", "AverageRewardOutAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spGetRptFinancialActivityTemp02OutAmount";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FromDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ToDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsFinancialActivityTemp02.spGetRptFinancialActivityTemp02OutAmountDataTable dataTable, global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsFinancialActivityTemp02.spGetRptFinancialActivityTemp02OutAmountDataTable GetData(global::System.Nullable<global::System.DateTime> FromDate, global::System.Nullable<global::System.DateTime> ToDate) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FromDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(FromDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ToDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(ToDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            dsFinancialActivityTemp02.spGetRptFinancialActivityTemp02OutAmountDataTable dataTable = new dsFinancialActivityTemp02.spGetRptFinancialActivityTemp02OutAmountDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsFinancialActivityTemp02 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsFinancialActivityTemp02 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsFinancialActivityTemp02 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsFinancialActivityTemp02 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591