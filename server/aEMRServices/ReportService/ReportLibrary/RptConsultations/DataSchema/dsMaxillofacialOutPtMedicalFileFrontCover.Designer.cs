//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eHCMS.ReportLib.RptConsultations.DataSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsMaxillofacialOutPtMedicalFileFrontCover")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsMaxillofacialOutPtMedicalFileFrontCover : global::System.Data.DataSet {
        
        private spRptGeneralOutPtMedicalFileFilmsRecvDataTable tablespRptGeneralOutPtMedicalFileFilmsRecv;
        
        private spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable tablespRptGeneralOutPtMedicalFileDeptDetailInfos;
        
        private spRptMaxillofacialOutPtMedicalFileDataTable tablespRptMaxillofacialOutPtMedicalFile;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public dsMaxillofacialOutPtMedicalFileFrontCover() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected dsMaxillofacialOutPtMedicalFileFrontCover(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spRptGeneralOutPtMedicalFileFilmsRecv"] != null)) {
                    base.Tables.Add(new spRptGeneralOutPtMedicalFileFilmsRecvDataTable(ds.Tables["spRptGeneralOutPtMedicalFileFilmsRecv"]));
                }
                if ((ds.Tables["spRptGeneralOutPtMedicalFileDeptDetailInfos"] != null)) {
                    base.Tables.Add(new spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable(ds.Tables["spRptGeneralOutPtMedicalFileDeptDetailInfos"]));
                }
                if ((ds.Tables["spRptMaxillofacialOutPtMedicalFile"] != null)) {
                    base.Tables.Add(new spRptMaxillofacialOutPtMedicalFileDataTable(ds.Tables["spRptMaxillofacialOutPtMedicalFile"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRptGeneralOutPtMedicalFileFilmsRecvDataTable spRptGeneralOutPtMedicalFileFilmsRecv {
            get {
                return this.tablespRptGeneralOutPtMedicalFileFilmsRecv;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable spRptGeneralOutPtMedicalFileDeptDetailInfos {
            get {
                return this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRptMaxillofacialOutPtMedicalFileDataTable spRptMaxillofacialOutPtMedicalFile {
            get {
                return this.tablespRptMaxillofacialOutPtMedicalFile;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsMaxillofacialOutPtMedicalFileFrontCover cln = ((dsMaxillofacialOutPtMedicalFileFrontCover)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spRptGeneralOutPtMedicalFileFilmsRecv"] != null)) {
                    base.Tables.Add(new spRptGeneralOutPtMedicalFileFilmsRecvDataTable(ds.Tables["spRptGeneralOutPtMedicalFileFilmsRecv"]));
                }
                if ((ds.Tables["spRptGeneralOutPtMedicalFileDeptDetailInfos"] != null)) {
                    base.Tables.Add(new spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable(ds.Tables["spRptGeneralOutPtMedicalFileDeptDetailInfos"]));
                }
                if ((ds.Tables["spRptMaxillofacialOutPtMedicalFile"] != null)) {
                    base.Tables.Add(new spRptMaxillofacialOutPtMedicalFileDataTable(ds.Tables["spRptMaxillofacialOutPtMedicalFile"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespRptGeneralOutPtMedicalFileFilmsRecv = ((spRptGeneralOutPtMedicalFileFilmsRecvDataTable)(base.Tables["spRptGeneralOutPtMedicalFileFilmsRecv"]));
            if ((initTable == true)) {
                if ((this.tablespRptGeneralOutPtMedicalFileFilmsRecv != null)) {
                    this.tablespRptGeneralOutPtMedicalFileFilmsRecv.InitVars();
                }
            }
            this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos = ((spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable)(base.Tables["spRptGeneralOutPtMedicalFileDeptDetailInfos"]));
            if ((initTable == true)) {
                if ((this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos != null)) {
                    this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.InitVars();
                }
            }
            this.tablespRptMaxillofacialOutPtMedicalFile = ((spRptMaxillofacialOutPtMedicalFileDataTable)(base.Tables["spRptMaxillofacialOutPtMedicalFile"]));
            if ((initTable == true)) {
                if ((this.tablespRptMaxillofacialOutPtMedicalFile != null)) {
                    this.tablespRptMaxillofacialOutPtMedicalFile.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsMaxillofacialOutPtMedicalFileFrontCover";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsMaxillofacialOutPtMedicalFileFrontCover.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespRptGeneralOutPtMedicalFileFilmsRecv = new spRptGeneralOutPtMedicalFileFilmsRecvDataTable();
            base.Tables.Add(this.tablespRptGeneralOutPtMedicalFileFilmsRecv);
            this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos = new spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable();
            base.Tables.Add(this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos);
            this.tablespRptMaxillofacialOutPtMedicalFile = new spRptMaxillofacialOutPtMedicalFileDataTable();
            base.Tables.Add(this.tablespRptMaxillofacialOutPtMedicalFile);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializespRptGeneralOutPtMedicalFileFilmsRecv() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializespRptGeneralOutPtMedicalFileDeptDetailInfos() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializespRptMaxillofacialOutPtMedicalFile() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsMaxillofacialOutPtMedicalFileFrontCover ds = new dsMaxillofacialOutPtMedicalFileFrontCover();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEventHandler(object sender, spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEventHandler(object sender, spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void spRptMaxillofacialOutPtMedicalFileRowChangeEventHandler(object sender, spRptMaxillofacialOutPtMedicalFileRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRptGeneralOutPtMedicalFileFilmsRecvDataTable : global::System.Data.TypedTableBase<spRptGeneralOutPtMedicalFileFilmsRecvRow> {
            
            private global::System.Data.DataColumn columnPCLSubCategoryName;
            
            private global::System.Data.DataColumn columnPCLSubCategoryDescription;
            
            private global::System.Data.DataColumn columnDefaultNumFilmsRecv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileFilmsRecvDataTable() {
                this.TableName = "spRptGeneralOutPtMedicalFileFilmsRecv";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spRptGeneralOutPtMedicalFileFilmsRecvDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected spRptGeneralOutPtMedicalFileFilmsRecvDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PCLSubCategoryNameColumn {
                get {
                    return this.columnPCLSubCategoryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PCLSubCategoryDescriptionColumn {
                get {
                    return this.columnPCLSubCategoryDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DefaultNumFilmsRecvColumn {
                get {
                    return this.columnDefaultNumFilmsRecv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileFilmsRecvRow this[int index] {
                get {
                    return ((spRptGeneralOutPtMedicalFileFilmsRecvRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEventHandler spRptGeneralOutPtMedicalFileFilmsRecvRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEventHandler spRptGeneralOutPtMedicalFileFilmsRecvRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEventHandler spRptGeneralOutPtMedicalFileFilmsRecvRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEventHandler spRptGeneralOutPtMedicalFileFilmsRecvRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddspRptGeneralOutPtMedicalFileFilmsRecvRow(spRptGeneralOutPtMedicalFileFilmsRecvRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileFilmsRecvRow AddspRptGeneralOutPtMedicalFileFilmsRecvRow(string PCLSubCategoryName, string PCLSubCategoryDescription, short DefaultNumFilmsRecv) {
                spRptGeneralOutPtMedicalFileFilmsRecvRow rowspRptGeneralOutPtMedicalFileFilmsRecvRow = ((spRptGeneralOutPtMedicalFileFilmsRecvRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PCLSubCategoryName,
                        PCLSubCategoryDescription,
                        DefaultNumFilmsRecv};
                rowspRptGeneralOutPtMedicalFileFilmsRecvRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRptGeneralOutPtMedicalFileFilmsRecvRow);
                return rowspRptGeneralOutPtMedicalFileFilmsRecvRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRptGeneralOutPtMedicalFileFilmsRecvDataTable cln = ((spRptGeneralOutPtMedicalFileFilmsRecvDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRptGeneralOutPtMedicalFileFilmsRecvDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnPCLSubCategoryName = base.Columns["PCLSubCategoryName"];
                this.columnPCLSubCategoryDescription = base.Columns["PCLSubCategoryDescription"];
                this.columnDefaultNumFilmsRecv = base.Columns["DefaultNumFilmsRecv"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnPCLSubCategoryName = new global::System.Data.DataColumn("PCLSubCategoryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCLSubCategoryName);
                this.columnPCLSubCategoryDescription = new global::System.Data.DataColumn("PCLSubCategoryDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCLSubCategoryDescription);
                this.columnDefaultNumFilmsRecv = new global::System.Data.DataColumn("DefaultNumFilmsRecv", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefaultNumFilmsRecv);
                this.columnPCLSubCategoryName.MaxLength = 100;
                this.columnPCLSubCategoryDescription.ReadOnly = true;
                this.columnPCLSubCategoryDescription.MaxLength = 252;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileFilmsRecvRow NewspRptGeneralOutPtMedicalFileFilmsRecvRow() {
                return ((spRptGeneralOutPtMedicalFileFilmsRecvRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRptGeneralOutPtMedicalFileFilmsRecvRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRptGeneralOutPtMedicalFileFilmsRecvRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRptGeneralOutPtMedicalFileFilmsRecvRowChanged != null)) {
                    this.spRptGeneralOutPtMedicalFileFilmsRecvRowChanged(this, new spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEvent(((spRptGeneralOutPtMedicalFileFilmsRecvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRptGeneralOutPtMedicalFileFilmsRecvRowChanging != null)) {
                    this.spRptGeneralOutPtMedicalFileFilmsRecvRowChanging(this, new spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEvent(((spRptGeneralOutPtMedicalFileFilmsRecvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRptGeneralOutPtMedicalFileFilmsRecvRowDeleted != null)) {
                    this.spRptGeneralOutPtMedicalFileFilmsRecvRowDeleted(this, new spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEvent(((spRptGeneralOutPtMedicalFileFilmsRecvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRptGeneralOutPtMedicalFileFilmsRecvRowDeleting != null)) {
                    this.spRptGeneralOutPtMedicalFileFilmsRecvRowDeleting(this, new spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEvent(((spRptGeneralOutPtMedicalFileFilmsRecvRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemovespRptGeneralOutPtMedicalFileFilmsRecvRow(spRptGeneralOutPtMedicalFileFilmsRecvRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMaxillofacialOutPtMedicalFileFrontCover ds = new dsMaxillofacialOutPtMedicalFileFrontCover();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRptGeneralOutPtMedicalFileFilmsRecvDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable : global::System.Data.TypedTableBase<spRptGeneralOutPtMedicalFileDeptDetailInfosRow> {
            
            private global::System.Data.DataColumn columnDeptCode;
            
            private global::System.Data.DataColumn columnFromDate;
            
            private global::System.Data.DataColumn columnICD10Code;
            
            private global::System.Data.DataColumn columnConsultingDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable() {
                this.TableName = "spRptGeneralOutPtMedicalFileDeptDetailInfos";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DeptCodeColumn {
                get {
                    return this.columnDeptCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FromDateColumn {
                get {
                    return this.columnFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ICD10CodeColumn {
                get {
                    return this.columnICD10Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConsultingDateColumn {
                get {
                    return this.columnConsultingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileDeptDetailInfosRow this[int index] {
                get {
                    return ((spRptGeneralOutPtMedicalFileDeptDetailInfosRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEventHandler spRptGeneralOutPtMedicalFileDeptDetailInfosRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEventHandler spRptGeneralOutPtMedicalFileDeptDetailInfosRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEventHandler spRptGeneralOutPtMedicalFileDeptDetailInfosRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEventHandler spRptGeneralOutPtMedicalFileDeptDetailInfosRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddspRptGeneralOutPtMedicalFileDeptDetailInfosRow(spRptGeneralOutPtMedicalFileDeptDetailInfosRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileDeptDetailInfosRow AddspRptGeneralOutPtMedicalFileDeptDetailInfosRow(string DeptCode, System.DateTime FromDate, string ICD10Code, int ConsultingDate) {
                spRptGeneralOutPtMedicalFileDeptDetailInfosRow rowspRptGeneralOutPtMedicalFileDeptDetailInfosRow = ((spRptGeneralOutPtMedicalFileDeptDetailInfosRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DeptCode,
                        FromDate,
                        ICD10Code,
                        ConsultingDate};
                rowspRptGeneralOutPtMedicalFileDeptDetailInfosRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRptGeneralOutPtMedicalFileDeptDetailInfosRow);
                return rowspRptGeneralOutPtMedicalFileDeptDetailInfosRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable cln = ((spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnDeptCode = base.Columns["DeptCode"];
                this.columnFromDate = base.Columns["FromDate"];
                this.columnICD10Code = base.Columns["ICD10Code"];
                this.columnConsultingDate = base.Columns["ConsultingDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnDeptCode = new global::System.Data.DataColumn("DeptCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptCode);
                this.columnFromDate = new global::System.Data.DataColumn("FromDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFromDate);
                this.columnICD10Code = new global::System.Data.DataColumn("ICD10Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICD10Code);
                this.columnConsultingDate = new global::System.Data.DataColumn("ConsultingDate", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultingDate);
                this.columnDeptCode.MaxLength = 15;
                this.columnFromDate.AllowDBNull = false;
                this.columnICD10Code.MaxLength = 10;
                this.columnConsultingDate.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileDeptDetailInfosRow NewspRptGeneralOutPtMedicalFileDeptDetailInfosRow() {
                return ((spRptGeneralOutPtMedicalFileDeptDetailInfosRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRptGeneralOutPtMedicalFileDeptDetailInfosRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRptGeneralOutPtMedicalFileDeptDetailInfosRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRptGeneralOutPtMedicalFileDeptDetailInfosRowChanged != null)) {
                    this.spRptGeneralOutPtMedicalFileDeptDetailInfosRowChanged(this, new spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEvent(((spRptGeneralOutPtMedicalFileDeptDetailInfosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRptGeneralOutPtMedicalFileDeptDetailInfosRowChanging != null)) {
                    this.spRptGeneralOutPtMedicalFileDeptDetailInfosRowChanging(this, new spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEvent(((spRptGeneralOutPtMedicalFileDeptDetailInfosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRptGeneralOutPtMedicalFileDeptDetailInfosRowDeleted != null)) {
                    this.spRptGeneralOutPtMedicalFileDeptDetailInfosRowDeleted(this, new spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEvent(((spRptGeneralOutPtMedicalFileDeptDetailInfosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRptGeneralOutPtMedicalFileDeptDetailInfosRowDeleting != null)) {
                    this.spRptGeneralOutPtMedicalFileDeptDetailInfosRowDeleting(this, new spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEvent(((spRptGeneralOutPtMedicalFileDeptDetailInfosRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemovespRptGeneralOutPtMedicalFileDeptDetailInfosRow(spRptGeneralOutPtMedicalFileDeptDetailInfosRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMaxillofacialOutPtMedicalFileFrontCover ds = new dsMaxillofacialOutPtMedicalFileFrontCover();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRptMaxillofacialOutPtMedicalFileDataTable : global::System.Data.TypedTableBase<spRptMaxillofacialOutPtMedicalFileRow> {
            
            private global::System.Data.DataColumn columnPtRegistrationCode;
            
            private global::System.Data.DataColumn columnPatientCode;
            
            private global::System.Data.DataColumn columnDeptName;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnPatientOccupation;
            
            private global::System.Data.DataColumn columnEthnic;
            
            private global::System.Data.DataColumn columnIsForeigner;
            
            private global::System.Data.DataColumn columnPatientStreetAddress;
            
            private global::System.Data.DataColumn columnWardName;
            
            private global::System.Data.DataColumn columnSuburbName;
            
            private global::System.Data.DataColumn columnCityProvinceName;
            
            private global::System.Data.DataColumn columnPatientEmployer;
            
            private global::System.Data.DataColumn columnHisID;
            
            private global::System.Data.DataColumn columnHICardNo;
            
            private global::System.Data.DataColumn columnValidDateTo;
            
            private global::System.Data.DataColumn columnFContactFullName;
            
            private global::System.Data.DataColumn columnFContactAddress;
            
            private global::System.Data.DataColumn columnFContactCellPhone;
            
            private global::System.Data.DataColumn columnExamDate;
            
            private global::System.Data.DataColumn columnIsOutPtExam;
            
            private global::System.Data.DataColumn columnObjectType;
            
            private global::System.Data.DataColumn columnArrivedType;
            
            private global::System.Data.DataColumn columnBasicDiagTreatment;
            
            private global::System.Data.DataColumn columnDischargeDate;
            
            private global::System.Data.DataColumn columnPulse;
            
            private global::System.Data.DataColumn columnTemperature;
            
            private global::System.Data.DataColumn columnSystolicPressure;
            
            private global::System.Data.DataColumn columnDiastolicPressure;
            
            private global::System.Data.DataColumn columnRespiratoryRate;
            
            private global::System.Data.DataColumn columnWeight;
            
            private global::System.Data.DataColumn columnBMI;
            
            private global::System.Data.DataColumn columnPtRegDetailID;
            
            private global::System.Data.DataColumn columnHistoryAndPhysicalExamination;
            
            private global::System.Data.DataColumn columnPastMedicalHistory;
            
            private global::System.Data.DataColumn columnPastMedicalHistoryOfFamily;
            
            private global::System.Data.DataColumn columnPhysicalExamination;
            
            private global::System.Data.DataColumn columnPhysicalExaminationAllParts;
            
            private global::System.Data.DataColumn columnParaclinicalNote;
            
            private global::System.Data.DataColumn columnMedicalInProcessed;
            
            private global::System.Data.DataColumn columnLaboratoryNote;
            
            private global::System.Data.DataColumn columnTreatmentMethod;
            
            private global::System.Data.DataColumn columnDischargeStatus;
            
            private global::System.Data.DataColumn columnTreatmentSolution;
            
            private global::System.Data.DataColumn columnStaffID;
            
            private global::System.Data.DataColumn columnRecCreatedDate;
            
            private global::System.Data.DataColumn columnSentStaffID;
            
            private global::System.Data.DataColumn columnFirstDiagnostic;
            
            private global::System.Data.DataColumn columnReasonAdmission;
            
            private global::System.Data.DataColumn columnDischargeDiagnostic;
            
            private global::System.Data.DataColumn columnPathologicalProcessAndClinicalCourse;
            
            private global::System.Data.DataColumn columnPCLResultsHaveDiagnosticValue;
            
            private global::System.Data.DataColumn columnDischargeDiagnostic_MainDisease;
            
            private global::System.Data.DataColumn columnDischargeDiagnostic_IncludingDisease;
            
            private global::System.Data.DataColumn columnTreatments;
            
            private global::System.Data.DataColumn columnConditionDischarge;
            
            private global::System.Data.DataColumn columnDirectionOfTreatment;
            
            private global::System.Data.DataColumn columnDiagnosisFinal;
            
            private global::System.Data.DataColumn columnICD10Name;
            
            private global::System.Data.DataColumn columnICD10Code;
            
            private global::System.Data.DataColumn columnSubICD10Code;
            
            private global::System.Data.DataColumn columnSubICD10Name;
            
            private global::System.Data.DataColumn columnProgDateFrom;
            
            private global::System.Data.DataColumn columnProgDateTo;
            
            private global::System.Data.DataColumn columnMedicalRecordNote;
            
            private global::System.Data.DataColumn columnDiagnosisOfOutpatientDept;
            
            private global::System.Data.DataColumn columnProcessedByDownline;
            
            private global::System.Data.DataColumn columnSpecialistDisease;
            
            private global::System.Data.DataColumn columnJobName;
            
            private global::System.Data.DataColumn columnJobCode;
            
            private global::System.Data.DataColumn columnV_Ethnic;
            
            private global::System.Data.DataColumn columnEthnicName;
            
            private global::System.Data.DataColumn columnNationalityCode;
            
            private global::System.Data.DataColumn columnCountryName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptMaxillofacialOutPtMedicalFileDataTable() {
                this.TableName = "spRptMaxillofacialOutPtMedicalFile";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spRptMaxillofacialOutPtMedicalFileDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected spRptMaxillofacialOutPtMedicalFileDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PtRegistrationCodeColumn {
                get {
                    return this.columnPtRegistrationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientCodeColumn {
                get {
                    return this.columnPatientCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DeptNameColumn {
                get {
                    return this.columnDeptName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientOccupationColumn {
                get {
                    return this.columnPatientOccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EthnicColumn {
                get {
                    return this.columnEthnic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsForeignerColumn {
                get {
                    return this.columnIsForeigner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientStreetAddressColumn {
                get {
                    return this.columnPatientStreetAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WardNameColumn {
                get {
                    return this.columnWardName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SuburbNameColumn {
                get {
                    return this.columnSuburbName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CityProvinceNameColumn {
                get {
                    return this.columnCityProvinceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientEmployerColumn {
                get {
                    return this.columnPatientEmployer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HisIDColumn {
                get {
                    return this.columnHisID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HICardNoColumn {
                get {
                    return this.columnHICardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ValidDateToColumn {
                get {
                    return this.columnValidDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FContactFullNameColumn {
                get {
                    return this.columnFContactFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FContactAddressColumn {
                get {
                    return this.columnFContactAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FContactCellPhoneColumn {
                get {
                    return this.columnFContactCellPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ExamDateColumn {
                get {
                    return this.columnExamDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsOutPtExamColumn {
                get {
                    return this.columnIsOutPtExam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ObjectTypeColumn {
                get {
                    return this.columnObjectType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ArrivedTypeColumn {
                get {
                    return this.columnArrivedType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BasicDiagTreatmentColumn {
                get {
                    return this.columnBasicDiagTreatment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DischargeDateColumn {
                get {
                    return this.columnDischargeDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PulseColumn {
                get {
                    return this.columnPulse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TemperatureColumn {
                get {
                    return this.columnTemperature;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SystolicPressureColumn {
                get {
                    return this.columnSystolicPressure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiastolicPressureColumn {
                get {
                    return this.columnDiastolicPressure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RespiratoryRateColumn {
                get {
                    return this.columnRespiratoryRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WeightColumn {
                get {
                    return this.columnWeight;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BMIColumn {
                get {
                    return this.columnBMI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PtRegDetailIDColumn {
                get {
                    return this.columnPtRegDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn HistoryAndPhysicalExaminationColumn {
                get {
                    return this.columnHistoryAndPhysicalExamination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PastMedicalHistoryColumn {
                get {
                    return this.columnPastMedicalHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PastMedicalHistoryOfFamilyColumn {
                get {
                    return this.columnPastMedicalHistoryOfFamily;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PhysicalExaminationColumn {
                get {
                    return this.columnPhysicalExamination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PhysicalExaminationAllPartsColumn {
                get {
                    return this.columnPhysicalExaminationAllParts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ParaclinicalNoteColumn {
                get {
                    return this.columnParaclinicalNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MedicalInProcessedColumn {
                get {
                    return this.columnMedicalInProcessed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LaboratoryNoteColumn {
                get {
                    return this.columnLaboratoryNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TreatmentMethodColumn {
                get {
                    return this.columnTreatmentMethod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DischargeStatusColumn {
                get {
                    return this.columnDischargeStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TreatmentSolutionColumn {
                get {
                    return this.columnTreatmentSolution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn StaffIDColumn {
                get {
                    return this.columnStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RecCreatedDateColumn {
                get {
                    return this.columnRecCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SentStaffIDColumn {
                get {
                    return this.columnSentStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FirstDiagnosticColumn {
                get {
                    return this.columnFirstDiagnostic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ReasonAdmissionColumn {
                get {
                    return this.columnReasonAdmission;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DischargeDiagnosticColumn {
                get {
                    return this.columnDischargeDiagnostic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PathologicalProcessAndClinicalCourseColumn {
                get {
                    return this.columnPathologicalProcessAndClinicalCourse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PCLResultsHaveDiagnosticValueColumn {
                get {
                    return this.columnPCLResultsHaveDiagnosticValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DischargeDiagnostic_MainDiseaseColumn {
                get {
                    return this.columnDischargeDiagnostic_MainDisease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DischargeDiagnostic_IncludingDiseaseColumn {
                get {
                    return this.columnDischargeDiagnostic_IncludingDisease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TreatmentsColumn {
                get {
                    return this.columnTreatments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ConditionDischargeColumn {
                get {
                    return this.columnConditionDischarge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DirectionOfTreatmentColumn {
                get {
                    return this.columnDirectionOfTreatment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiagnosisFinalColumn {
                get {
                    return this.columnDiagnosisFinal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ICD10NameColumn {
                get {
                    return this.columnICD10Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ICD10CodeColumn {
                get {
                    return this.columnICD10Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubICD10CodeColumn {
                get {
                    return this.columnSubICD10Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SubICD10NameColumn {
                get {
                    return this.columnSubICD10Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgDateFromColumn {
                get {
                    return this.columnProgDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProgDateToColumn {
                get {
                    return this.columnProgDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MedicalRecordNoteColumn {
                get {
                    return this.columnMedicalRecordNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DiagnosisOfOutpatientDeptColumn {
                get {
                    return this.columnDiagnosisOfOutpatientDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn ProcessedByDownlineColumn {
                get {
                    return this.columnProcessedByDownline;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SpecialistDiseaseColumn {
                get {
                    return this.columnSpecialistDisease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn JobNameColumn {
                get {
                    return this.columnJobName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn JobCodeColumn {
                get {
                    return this.columnJobCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_EthnicColumn {
                get {
                    return this.columnV_Ethnic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn EthnicNameColumn {
                get {
                    return this.columnEthnicName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NationalityCodeColumn {
                get {
                    return this.columnNationalityCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CountryNameColumn {
                get {
                    return this.columnCountryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptMaxillofacialOutPtMedicalFileRow this[int index] {
                get {
                    return ((spRptMaxillofacialOutPtMedicalFileRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptMaxillofacialOutPtMedicalFileRowChangeEventHandler spRptMaxillofacialOutPtMedicalFileRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptMaxillofacialOutPtMedicalFileRowChangeEventHandler spRptMaxillofacialOutPtMedicalFileRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptMaxillofacialOutPtMedicalFileRowChangeEventHandler spRptMaxillofacialOutPtMedicalFileRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spRptMaxillofacialOutPtMedicalFileRowChangeEventHandler spRptMaxillofacialOutPtMedicalFileRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddspRptMaxillofacialOutPtMedicalFileRow(spRptMaxillofacialOutPtMedicalFileRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptMaxillofacialOutPtMedicalFileRow AddspRptMaxillofacialOutPtMedicalFileRow(
                        string PtRegistrationCode, 
                        string PatientCode, 
                        string DeptName, 
                        string FullName, 
                        string DOB, 
                        string Age, 
                        string Gender, 
                        string PatientOccupation, 
                        string Ethnic, 
                        bool IsForeigner, 
                        string PatientStreetAddress, 
                        string WardName, 
                        string SuburbName, 
                        string CityProvinceName, 
                        string PatientEmployer, 
                        long HisID, 
                        string HICardNo, 
                        System.DateTime ValidDateTo, 
                        string FContactFullName, 
                        string FContactAddress, 
                        string FContactCellPhone, 
                        System.DateTime ExamDate, 
                        bool IsOutPtExam, 
                        short ObjectType, 
                        short ArrivedType, 
                        string BasicDiagTreatment, 
                        System.DateTime DischargeDate, 
                        double Pulse, 
                        double Temperature, 
                        double SystolicPressure, 
                        double DiastolicPressure, 
                        double RespiratoryRate, 
                        double Weight, 
                        double BMI, 
                        long PtRegDetailID, 
                        string HistoryAndPhysicalExamination, 
                        string PastMedicalHistory, 
                        string PastMedicalHistoryOfFamily, 
                        string PhysicalExamination, 
                        string PhysicalExaminationAllParts, 
                        string ParaclinicalNote, 
                        string MedicalInProcessed, 
                        string LaboratoryNote, 
                        string TreatmentMethod, 
                        string DischargeStatus, 
                        string TreatmentSolution, 
                        long StaffID, 
                        System.DateTime RecCreatedDate, 
                        long SentStaffID, 
                        string FirstDiagnostic, 
                        string ReasonAdmission, 
                        string DischargeDiagnostic, 
                        string PathologicalProcessAndClinicalCourse, 
                        string PCLResultsHaveDiagnosticValue, 
                        string DischargeDiagnostic_MainDisease, 
                        string DischargeDiagnostic_IncludingDisease, 
                        string Treatments, 
                        string ConditionDischarge, 
                        string DirectionOfTreatment, 
                        string DiagnosisFinal, 
                        string ICD10Name, 
                        string ICD10Code, 
                        string SubICD10Code, 
                        string SubICD10Name, 
                        System.DateTime ProgDateFrom, 
                        System.DateTime ProgDateTo, 
                        string MedicalRecordNote, 
                        string DiagnosisOfOutpatientDept, 
                        string ProcessedByDownline, 
                        string SpecialistDisease, 
                        string JobName, 
                        string JobCode, 
                        long V_Ethnic, 
                        string EthnicName, 
                        int NationalityCode, 
                        string CountryName) {
                spRptMaxillofacialOutPtMedicalFileRow rowspRptMaxillofacialOutPtMedicalFileRow = ((spRptMaxillofacialOutPtMedicalFileRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PtRegistrationCode,
                        PatientCode,
                        DeptName,
                        FullName,
                        DOB,
                        Age,
                        Gender,
                        PatientOccupation,
                        Ethnic,
                        IsForeigner,
                        PatientStreetAddress,
                        WardName,
                        SuburbName,
                        CityProvinceName,
                        PatientEmployer,
                        HisID,
                        HICardNo,
                        ValidDateTo,
                        FContactFullName,
                        FContactAddress,
                        FContactCellPhone,
                        ExamDate,
                        IsOutPtExam,
                        ObjectType,
                        ArrivedType,
                        BasicDiagTreatment,
                        DischargeDate,
                        Pulse,
                        Temperature,
                        SystolicPressure,
                        DiastolicPressure,
                        RespiratoryRate,
                        Weight,
                        BMI,
                        PtRegDetailID,
                        HistoryAndPhysicalExamination,
                        PastMedicalHistory,
                        PastMedicalHistoryOfFamily,
                        PhysicalExamination,
                        PhysicalExaminationAllParts,
                        ParaclinicalNote,
                        MedicalInProcessed,
                        LaboratoryNote,
                        TreatmentMethod,
                        DischargeStatus,
                        TreatmentSolution,
                        StaffID,
                        RecCreatedDate,
                        SentStaffID,
                        FirstDiagnostic,
                        ReasonAdmission,
                        DischargeDiagnostic,
                        PathologicalProcessAndClinicalCourse,
                        PCLResultsHaveDiagnosticValue,
                        DischargeDiagnostic_MainDisease,
                        DischargeDiagnostic_IncludingDisease,
                        Treatments,
                        ConditionDischarge,
                        DirectionOfTreatment,
                        DiagnosisFinal,
                        ICD10Name,
                        ICD10Code,
                        SubICD10Code,
                        SubICD10Name,
                        ProgDateFrom,
                        ProgDateTo,
                        MedicalRecordNote,
                        DiagnosisOfOutpatientDept,
                        ProcessedByDownline,
                        SpecialistDisease,
                        JobName,
                        JobCode,
                        V_Ethnic,
                        EthnicName,
                        NationalityCode,
                        CountryName};
                rowspRptMaxillofacialOutPtMedicalFileRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRptMaxillofacialOutPtMedicalFileRow);
                return rowspRptMaxillofacialOutPtMedicalFileRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRptMaxillofacialOutPtMedicalFileDataTable cln = ((spRptMaxillofacialOutPtMedicalFileDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRptMaxillofacialOutPtMedicalFileDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnPtRegistrationCode = base.Columns["PtRegistrationCode"];
                this.columnPatientCode = base.Columns["PatientCode"];
                this.columnDeptName = base.Columns["DeptName"];
                this.columnFullName = base.Columns["FullName"];
                this.columnDOB = base.Columns["DOB"];
                this.columnAge = base.Columns["Age"];
                this.columnGender = base.Columns["Gender"];
                this.columnPatientOccupation = base.Columns["PatientOccupation"];
                this.columnEthnic = base.Columns["Ethnic"];
                this.columnIsForeigner = base.Columns["IsForeigner"];
                this.columnPatientStreetAddress = base.Columns["PatientStreetAddress"];
                this.columnWardName = base.Columns["WardName"];
                this.columnSuburbName = base.Columns["SuburbName"];
                this.columnCityProvinceName = base.Columns["CityProvinceName"];
                this.columnPatientEmployer = base.Columns["PatientEmployer"];
                this.columnHisID = base.Columns["HisID"];
                this.columnHICardNo = base.Columns["HICardNo"];
                this.columnValidDateTo = base.Columns["ValidDateTo"];
                this.columnFContactFullName = base.Columns["FContactFullName"];
                this.columnFContactAddress = base.Columns["FContactAddress"];
                this.columnFContactCellPhone = base.Columns["FContactCellPhone"];
                this.columnExamDate = base.Columns["ExamDate"];
                this.columnIsOutPtExam = base.Columns["IsOutPtExam"];
                this.columnObjectType = base.Columns["ObjectType"];
                this.columnArrivedType = base.Columns["ArrivedType"];
                this.columnBasicDiagTreatment = base.Columns["BasicDiagTreatment"];
                this.columnDischargeDate = base.Columns["DischargeDate"];
                this.columnPulse = base.Columns["Pulse"];
                this.columnTemperature = base.Columns["Temperature"];
                this.columnSystolicPressure = base.Columns["SystolicPressure"];
                this.columnDiastolicPressure = base.Columns["DiastolicPressure"];
                this.columnRespiratoryRate = base.Columns["RespiratoryRate"];
                this.columnWeight = base.Columns["Weight"];
                this.columnBMI = base.Columns["BMI"];
                this.columnPtRegDetailID = base.Columns["PtRegDetailID"];
                this.columnHistoryAndPhysicalExamination = base.Columns["HistoryAndPhysicalExamination"];
                this.columnPastMedicalHistory = base.Columns["PastMedicalHistory"];
                this.columnPastMedicalHistoryOfFamily = base.Columns["PastMedicalHistoryOfFamily"];
                this.columnPhysicalExamination = base.Columns["PhysicalExamination"];
                this.columnPhysicalExaminationAllParts = base.Columns["PhysicalExaminationAllParts"];
                this.columnParaclinicalNote = base.Columns["ParaclinicalNote"];
                this.columnMedicalInProcessed = base.Columns["MedicalInProcessed"];
                this.columnLaboratoryNote = base.Columns["LaboratoryNote"];
                this.columnTreatmentMethod = base.Columns["TreatmentMethod"];
                this.columnDischargeStatus = base.Columns["DischargeStatus"];
                this.columnTreatmentSolution = base.Columns["TreatmentSolution"];
                this.columnStaffID = base.Columns["StaffID"];
                this.columnRecCreatedDate = base.Columns["RecCreatedDate"];
                this.columnSentStaffID = base.Columns["SentStaffID"];
                this.columnFirstDiagnostic = base.Columns["FirstDiagnostic"];
                this.columnReasonAdmission = base.Columns["ReasonAdmission"];
                this.columnDischargeDiagnostic = base.Columns["DischargeDiagnostic"];
                this.columnPathologicalProcessAndClinicalCourse = base.Columns["PathologicalProcessAndClinicalCourse"];
                this.columnPCLResultsHaveDiagnosticValue = base.Columns["PCLResultsHaveDiagnosticValue"];
                this.columnDischargeDiagnostic_MainDisease = base.Columns["DischargeDiagnostic_MainDisease"];
                this.columnDischargeDiagnostic_IncludingDisease = base.Columns["DischargeDiagnostic_IncludingDisease"];
                this.columnTreatments = base.Columns["Treatments"];
                this.columnConditionDischarge = base.Columns["ConditionDischarge"];
                this.columnDirectionOfTreatment = base.Columns["DirectionOfTreatment"];
                this.columnDiagnosisFinal = base.Columns["DiagnosisFinal"];
                this.columnICD10Name = base.Columns["ICD10Name"];
                this.columnICD10Code = base.Columns["ICD10Code"];
                this.columnSubICD10Code = base.Columns["SubICD10Code"];
                this.columnSubICD10Name = base.Columns["SubICD10Name"];
                this.columnProgDateFrom = base.Columns["ProgDateFrom"];
                this.columnProgDateTo = base.Columns["ProgDateTo"];
                this.columnMedicalRecordNote = base.Columns["MedicalRecordNote"];
                this.columnDiagnosisOfOutpatientDept = base.Columns["DiagnosisOfOutpatientDept"];
                this.columnProcessedByDownline = base.Columns["ProcessedByDownline"];
                this.columnSpecialistDisease = base.Columns["SpecialistDisease"];
                this.columnJobName = base.Columns["JobName"];
                this.columnJobCode = base.Columns["JobCode"];
                this.columnV_Ethnic = base.Columns["V_Ethnic"];
                this.columnEthnicName = base.Columns["EthnicName"];
                this.columnNationalityCode = base.Columns["NationalityCode"];
                this.columnCountryName = base.Columns["CountryName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnPtRegistrationCode = new global::System.Data.DataColumn("PtRegistrationCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegistrationCode);
                this.columnPatientCode = new global::System.Data.DataColumn("PatientCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientCode);
                this.columnDeptName = new global::System.Data.DataColumn("DeptName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptName);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnPatientOccupation = new global::System.Data.DataColumn("PatientOccupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientOccupation);
                this.columnEthnic = new global::System.Data.DataColumn("Ethnic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthnic);
                this.columnIsForeigner = new global::System.Data.DataColumn("IsForeigner", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsForeigner);
                this.columnPatientStreetAddress = new global::System.Data.DataColumn("PatientStreetAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientStreetAddress);
                this.columnWardName = new global::System.Data.DataColumn("WardName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWardName);
                this.columnSuburbName = new global::System.Data.DataColumn("SuburbName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuburbName);
                this.columnCityProvinceName = new global::System.Data.DataColumn("CityProvinceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityProvinceName);
                this.columnPatientEmployer = new global::System.Data.DataColumn("PatientEmployer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientEmployer);
                this.columnHisID = new global::System.Data.DataColumn("HisID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHisID);
                this.columnHICardNo = new global::System.Data.DataColumn("HICardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHICardNo);
                this.columnValidDateTo = new global::System.Data.DataColumn("ValidDateTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidDateTo);
                this.columnFContactFullName = new global::System.Data.DataColumn("FContactFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactFullName);
                this.columnFContactAddress = new global::System.Data.DataColumn("FContactAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactAddress);
                this.columnFContactCellPhone = new global::System.Data.DataColumn("FContactCellPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactCellPhone);
                this.columnExamDate = new global::System.Data.DataColumn("ExamDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamDate);
                this.columnIsOutPtExam = new global::System.Data.DataColumn("IsOutPtExam", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOutPtExam);
                this.columnObjectType = new global::System.Data.DataColumn("ObjectType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectType);
                this.columnArrivedType = new global::System.Data.DataColumn("ArrivedType", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArrivedType);
                this.columnBasicDiagTreatment = new global::System.Data.DataColumn("BasicDiagTreatment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBasicDiagTreatment);
                this.columnDischargeDate = new global::System.Data.DataColumn("DischargeDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeDate);
                this.columnPulse = new global::System.Data.DataColumn("Pulse", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPulse);
                this.columnTemperature = new global::System.Data.DataColumn("Temperature", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTemperature);
                this.columnSystolicPressure = new global::System.Data.DataColumn("SystolicPressure", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSystolicPressure);
                this.columnDiastolicPressure = new global::System.Data.DataColumn("DiastolicPressure", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiastolicPressure);
                this.columnRespiratoryRate = new global::System.Data.DataColumn("RespiratoryRate", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRespiratoryRate);
                this.columnWeight = new global::System.Data.DataColumn("Weight", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWeight);
                this.columnBMI = new global::System.Data.DataColumn("BMI", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBMI);
                this.columnPtRegDetailID = new global::System.Data.DataColumn("PtRegDetailID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegDetailID);
                this.columnHistoryAndPhysicalExamination = new global::System.Data.DataColumn("HistoryAndPhysicalExamination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistoryAndPhysicalExamination);
                this.columnPastMedicalHistory = new global::System.Data.DataColumn("PastMedicalHistory", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPastMedicalHistory);
                this.columnPastMedicalHistoryOfFamily = new global::System.Data.DataColumn("PastMedicalHistoryOfFamily", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPastMedicalHistoryOfFamily);
                this.columnPhysicalExamination = new global::System.Data.DataColumn("PhysicalExamination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicalExamination);
                this.columnPhysicalExaminationAllParts = new global::System.Data.DataColumn("PhysicalExaminationAllParts", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysicalExaminationAllParts);
                this.columnParaclinicalNote = new global::System.Data.DataColumn("ParaclinicalNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParaclinicalNote);
                this.columnMedicalInProcessed = new global::System.Data.DataColumn("MedicalInProcessed", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalInProcessed);
                this.columnLaboratoryNote = new global::System.Data.DataColumn("LaboratoryNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaboratoryNote);
                this.columnTreatmentMethod = new global::System.Data.DataColumn("TreatmentMethod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTreatmentMethod);
                this.columnDischargeStatus = new global::System.Data.DataColumn("DischargeStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeStatus);
                this.columnTreatmentSolution = new global::System.Data.DataColumn("TreatmentSolution", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTreatmentSolution);
                this.columnStaffID = new global::System.Data.DataColumn("StaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID);
                this.columnRecCreatedDate = new global::System.Data.DataColumn("RecCreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecCreatedDate);
                this.columnSentStaffID = new global::System.Data.DataColumn("SentStaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSentStaffID);
                this.columnFirstDiagnostic = new global::System.Data.DataColumn("FirstDiagnostic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstDiagnostic);
                this.columnReasonAdmission = new global::System.Data.DataColumn("ReasonAdmission", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasonAdmission);
                this.columnDischargeDiagnostic = new global::System.Data.DataColumn("DischargeDiagnostic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeDiagnostic);
                this.columnPathologicalProcessAndClinicalCourse = new global::System.Data.DataColumn("PathologicalProcessAndClinicalCourse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPathologicalProcessAndClinicalCourse);
                this.columnPCLResultsHaveDiagnosticValue = new global::System.Data.DataColumn("PCLResultsHaveDiagnosticValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCLResultsHaveDiagnosticValue);
                this.columnDischargeDiagnostic_MainDisease = new global::System.Data.DataColumn("DischargeDiagnostic_MainDisease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeDiagnostic_MainDisease);
                this.columnDischargeDiagnostic_IncludingDisease = new global::System.Data.DataColumn("DischargeDiagnostic_IncludingDisease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDischargeDiagnostic_IncludingDisease);
                this.columnTreatments = new global::System.Data.DataColumn("Treatments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTreatments);
                this.columnConditionDischarge = new global::System.Data.DataColumn("ConditionDischarge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConditionDischarge);
                this.columnDirectionOfTreatment = new global::System.Data.DataColumn("DirectionOfTreatment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectionOfTreatment);
                this.columnDiagnosisFinal = new global::System.Data.DataColumn("DiagnosisFinal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosisFinal);
                this.columnICD10Name = new global::System.Data.DataColumn("ICD10Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICD10Name);
                this.columnICD10Code = new global::System.Data.DataColumn("ICD10Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICD10Code);
                this.columnSubICD10Code = new global::System.Data.DataColumn("SubICD10Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubICD10Code);
                this.columnSubICD10Name = new global::System.Data.DataColumn("SubICD10Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubICD10Name);
                this.columnProgDateFrom = new global::System.Data.DataColumn("ProgDateFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgDateFrom);
                this.columnProgDateTo = new global::System.Data.DataColumn("ProgDateTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgDateTo);
                this.columnMedicalRecordNote = new global::System.Data.DataColumn("MedicalRecordNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedicalRecordNote);
                this.columnDiagnosisOfOutpatientDept = new global::System.Data.DataColumn("DiagnosisOfOutpatientDept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosisOfOutpatientDept);
                this.columnProcessedByDownline = new global::System.Data.DataColumn("ProcessedByDownline", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessedByDownline);
                this.columnSpecialistDisease = new global::System.Data.DataColumn("SpecialistDisease", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialistDisease);
                this.columnJobName = new global::System.Data.DataColumn("JobName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobName);
                this.columnJobCode = new global::System.Data.DataColumn("JobCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCode);
                this.columnV_Ethnic = new global::System.Data.DataColumn("V_Ethnic", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_Ethnic);
                this.columnEthnicName = new global::System.Data.DataColumn("EthnicName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthnicName);
                this.columnNationalityCode = new global::System.Data.DataColumn("NationalityCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalityCode);
                this.columnCountryName = new global::System.Data.DataColumn("CountryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryName);
                this.columnPtRegistrationCode.MaxLength = 20;
                this.columnPatientCode.ReadOnly = true;
                this.columnPatientCode.MaxLength = 20;
                this.columnDeptName.MaxLength = 125;
                this.columnFullName.AllowDBNull = false;
                this.columnFullName.MaxLength = 65;
                this.columnDOB.ReadOnly = true;
                this.columnDOB.MaxLength = 8000;
                this.columnAge.ReadOnly = true;
                this.columnAge.MaxLength = 2;
                this.columnGender.AllowDBNull = false;
                this.columnGender.MaxLength = 1;
                this.columnPatientOccupation.ReadOnly = true;
                this.columnPatientOccupation.MaxLength = 125;
                this.columnEthnic.ReadOnly = true;
                this.columnEthnic.MaxLength = 125;
                this.columnIsForeigner.ReadOnly = true;
                this.columnPatientStreetAddress.MaxLength = 255;
                this.columnWardName.ReadOnly = true;
                this.columnWardName.MaxLength = 255;
                this.columnSuburbName.ReadOnly = true;
                this.columnSuburbName.MaxLength = 255;
                this.columnCityProvinceName.MaxLength = 80;
                this.columnPatientEmployer.ReadOnly = true;
                this.columnPatientEmployer.MaxLength = 512;
                this.columnHICardNo.MaxLength = 20;
                this.columnFContactFullName.MaxLength = 200;
                this.columnFContactAddress.MaxLength = 125;
                this.columnFContactCellPhone.ReadOnly = true;
                this.columnFContactCellPhone.MaxLength = 15;
                this.columnExamDate.AllowDBNull = false;
                this.columnIsOutPtExam.ReadOnly = true;
                this.columnObjectType.ReadOnly = true;
                this.columnArrivedType.ReadOnly = true;
                this.columnBasicDiagTreatment.MaxLength = 255;
                this.columnHistoryAndPhysicalExamination.MaxLength = 2000;
                this.columnPastMedicalHistory.MaxLength = 2000;
                this.columnPastMedicalHistoryOfFamily.MaxLength = 2000;
                this.columnPhysicalExamination.MaxLength = 2000;
                this.columnPhysicalExaminationAllParts.MaxLength = 2000;
                this.columnParaclinicalNote.MaxLength = 2000;
                this.columnMedicalInProcessed.MaxLength = 2000;
                this.columnLaboratoryNote.MaxLength = 2000;
                this.columnTreatmentMethod.MaxLength = 2000;
                this.columnDischargeStatus.MaxLength = 2000;
                this.columnTreatmentSolution.MaxLength = 2000;
                this.columnFirstDiagnostic.MaxLength = 2000;
                this.columnReasonAdmission.MaxLength = 2000;
                this.columnDischargeDiagnostic.MaxLength = 2000;
                this.columnPathologicalProcessAndClinicalCourse.MaxLength = 2000;
                this.columnPCLResultsHaveDiagnosticValue.MaxLength = 2000;
                this.columnDischargeDiagnostic_MainDisease.MaxLength = 2000;
                this.columnDischargeDiagnostic_IncludingDisease.MaxLength = 2000;
                this.columnTreatments.MaxLength = 2000;
                this.columnConditionDischarge.MaxLength = 2000;
                this.columnDirectionOfTreatment.MaxLength = 2000;
                this.columnDiagnosisFinal.MaxLength = 512;
                this.columnICD10Name.ReadOnly = true;
                this.columnICD10Name.MaxLength = 255;
                this.columnICD10Code.ReadOnly = true;
                this.columnICD10Code.MaxLength = 8000;
                this.columnSubICD10Code.ReadOnly = true;
                this.columnSubICD10Code.MaxLength = 8000;
                this.columnSubICD10Name.ReadOnly = true;
                this.columnSubICD10Name.MaxLength = 255;
                this.columnProgDateFrom.AllowDBNull = false;
                this.columnMedicalRecordNote.MaxLength = 2000;
                this.columnDiagnosisOfOutpatientDept.MaxLength = 2000;
                this.columnProcessedByDownline.MaxLength = 2000;
                this.columnSpecialistDisease.MaxLength = 2000;
                this.columnJobName.ReadOnly = true;
                this.columnJobName.MaxLength = 125;
                this.columnJobCode.ReadOnly = true;
                this.columnJobCode.MaxLength = 10;
                this.columnEthnicName.MaxLength = 125;
                this.columnNationalityCode.ReadOnly = true;
                this.columnCountryName.ReadOnly = true;
                this.columnCountryName.MaxLength = 128;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptMaxillofacialOutPtMedicalFileRow NewspRptMaxillofacialOutPtMedicalFileRow() {
                return ((spRptMaxillofacialOutPtMedicalFileRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRptMaxillofacialOutPtMedicalFileRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRptMaxillofacialOutPtMedicalFileRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRptMaxillofacialOutPtMedicalFileRowChanged != null)) {
                    this.spRptMaxillofacialOutPtMedicalFileRowChanged(this, new spRptMaxillofacialOutPtMedicalFileRowChangeEvent(((spRptMaxillofacialOutPtMedicalFileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRptMaxillofacialOutPtMedicalFileRowChanging != null)) {
                    this.spRptMaxillofacialOutPtMedicalFileRowChanging(this, new spRptMaxillofacialOutPtMedicalFileRowChangeEvent(((spRptMaxillofacialOutPtMedicalFileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRptMaxillofacialOutPtMedicalFileRowDeleted != null)) {
                    this.spRptMaxillofacialOutPtMedicalFileRowDeleted(this, new spRptMaxillofacialOutPtMedicalFileRowChangeEvent(((spRptMaxillofacialOutPtMedicalFileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRptMaxillofacialOutPtMedicalFileRowDeleting != null)) {
                    this.spRptMaxillofacialOutPtMedicalFileRowDeleting(this, new spRptMaxillofacialOutPtMedicalFileRowChangeEvent(((spRptMaxillofacialOutPtMedicalFileRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemovespRptMaxillofacialOutPtMedicalFileRow(spRptMaxillofacialOutPtMedicalFileRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsMaxillofacialOutPtMedicalFileFrontCover ds = new dsMaxillofacialOutPtMedicalFileFrontCover();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRptMaxillofacialOutPtMedicalFileDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRptGeneralOutPtMedicalFileFilmsRecvRow : global::System.Data.DataRow {
            
            private spRptGeneralOutPtMedicalFileFilmsRecvDataTable tablespRptGeneralOutPtMedicalFileFilmsRecv;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spRptGeneralOutPtMedicalFileFilmsRecvRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRptGeneralOutPtMedicalFileFilmsRecv = ((spRptGeneralOutPtMedicalFileFilmsRecvDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PCLSubCategoryName {
                get {
                    try {
                        return ((string)(this[this.tablespRptGeneralOutPtMedicalFileFilmsRecv.PCLSubCategoryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCLSubCategoryName\' in table \'spRptGeneralOutPtMedicalFileF" +
                                "ilmsRecv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptGeneralOutPtMedicalFileFilmsRecv.PCLSubCategoryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PCLSubCategoryDescription {
                get {
                    try {
                        return ((string)(this[this.tablespRptGeneralOutPtMedicalFileFilmsRecv.PCLSubCategoryDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCLSubCategoryDescription\' in table \'spRptGeneralOutPtMedic" +
                                "alFileFilmsRecv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptGeneralOutPtMedicalFileFilmsRecv.PCLSubCategoryDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short DefaultNumFilmsRecv {
                get {
                    try {
                        return ((short)(this[this.tablespRptGeneralOutPtMedicalFileFilmsRecv.DefaultNumFilmsRecvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DefaultNumFilmsRecv\' in table \'spRptGeneralOutPtMedicalFile" +
                                "FilmsRecv\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptGeneralOutPtMedicalFileFilmsRecv.DefaultNumFilmsRecvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPCLSubCategoryNameNull() {
                return this.IsNull(this.tablespRptGeneralOutPtMedicalFileFilmsRecv.PCLSubCategoryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPCLSubCategoryNameNull() {
                this[this.tablespRptGeneralOutPtMedicalFileFilmsRecv.PCLSubCategoryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPCLSubCategoryDescriptionNull() {
                return this.IsNull(this.tablespRptGeneralOutPtMedicalFileFilmsRecv.PCLSubCategoryDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPCLSubCategoryDescriptionNull() {
                this[this.tablespRptGeneralOutPtMedicalFileFilmsRecv.PCLSubCategoryDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDefaultNumFilmsRecvNull() {
                return this.IsNull(this.tablespRptGeneralOutPtMedicalFileFilmsRecv.DefaultNumFilmsRecvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDefaultNumFilmsRecvNull() {
                this[this.tablespRptGeneralOutPtMedicalFileFilmsRecv.DefaultNumFilmsRecvColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRptGeneralOutPtMedicalFileDeptDetailInfosRow : global::System.Data.DataRow {
            
            private spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable tablespRptGeneralOutPtMedicalFileDeptDetailInfos;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spRptGeneralOutPtMedicalFileDeptDetailInfosRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos = ((spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DeptCode {
                get {
                    try {
                        return ((string)(this[this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.DeptCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptCode\' in table \'spRptGeneralOutPtMedicalFileDeptDetailI" +
                                "nfos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.DeptCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime FromDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.FromDateColumn]));
                }
                set {
                    this[this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.FromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ICD10Code {
                get {
                    try {
                        return ((string)(this[this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.ICD10CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICD10Code\' in table \'spRptGeneralOutPtMedicalFileDeptDetail" +
                                "Infos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.ICD10CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int ConsultingDate {
                get {
                    try {
                        return ((int)(this[this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.ConsultingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsultingDate\' in table \'spRptGeneralOutPtMedicalFileDeptD" +
                                "etailInfos\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.ConsultingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDeptCodeNull() {
                return this.IsNull(this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.DeptCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDeptCodeNull() {
                this[this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.DeptCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsICD10CodeNull() {
                return this.IsNull(this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.ICD10CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetICD10CodeNull() {
                this[this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.ICD10CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConsultingDateNull() {
                return this.IsNull(this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.ConsultingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetConsultingDateNull() {
                this[this.tablespRptGeneralOutPtMedicalFileDeptDetailInfos.ConsultingDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRptMaxillofacialOutPtMedicalFileRow : global::System.Data.DataRow {
            
            private spRptMaxillofacialOutPtMedicalFileDataTable tablespRptMaxillofacialOutPtMedicalFile;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spRptMaxillofacialOutPtMedicalFileRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRptMaxillofacialOutPtMedicalFile = ((spRptMaxillofacialOutPtMedicalFileDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PtRegistrationCode {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PtRegistrationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtRegistrationCode\' in table \'spRptMaxillofacialOutPtMedica" +
                                "lFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PtRegistrationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientCode {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientCode\' in table \'spRptMaxillofacialOutPtMedicalFile\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DeptName {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.DeptNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptName\' in table \'spRptMaxillofacialOutPtMedicalFile\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.DeptNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FullName {
                get {
                    return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.FullNameColumn]));
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DOB {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'spRptMaxillofacialOutPtMedicalFile\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Age {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'spRptMaxillofacialOutPtMedicalFile\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Gender {
                get {
                    return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.GenderColumn]));
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientOccupation {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientOccupationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientOccupation\' in table \'spRptMaxillofacialOutPtMedical" +
                                "File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientOccupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Ethnic {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.EthnicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ethnic\' in table \'spRptMaxillofacialOutPtMedicalFile\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.EthnicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsForeigner {
                get {
                    try {
                        return ((bool)(this[this.tablespRptMaxillofacialOutPtMedicalFile.IsForeignerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsForeigner\' in table \'spRptMaxillofacialOutPtMedicalFile\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.IsForeignerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientStreetAddress {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientStreetAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientStreetAddress\' in table \'spRptMaxillofacialOutPtMedi" +
                                "calFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientStreetAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WardName {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.WardNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WardName\' in table \'spRptMaxillofacialOutPtMedicalFile\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.WardNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SuburbName {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.SuburbNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuburbName\' in table \'spRptMaxillofacialOutPtMedicalFile\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.SuburbNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CityProvinceName {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.CityProvinceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityProvinceName\' in table \'spRptMaxillofacialOutPtMedicalF" +
                                "ile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.CityProvinceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientEmployer {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientEmployerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientEmployer\' in table \'spRptMaxillofacialOutPtMedicalFi" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientEmployerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long HisID {
                get {
                    try {
                        return ((long)(this[this.tablespRptMaxillofacialOutPtMedicalFile.HisIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HisID\' in table \'spRptMaxillofacialOutPtMedicalFile\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.HisIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HICardNo {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.HICardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HICardNo\' in table \'spRptMaxillofacialOutPtMedicalFile\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.HICardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime ValidDateTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ValidDateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValidDateTo\' in table \'spRptMaxillofacialOutPtMedicalFile\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ValidDateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FContactFullName {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.FContactFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactFullName\' in table \'spRptMaxillofacialOutPtMedicalF" +
                                "ile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.FContactFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FContactAddress {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.FContactAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactAddress\' in table \'spRptMaxillofacialOutPtMedicalFi" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.FContactAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FContactCellPhone {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.FContactCellPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactCellPhone\' in table \'spRptMaxillofacialOutPtMedical" +
                                "File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.FContactCellPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime ExamDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ExamDateColumn]));
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ExamDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOutPtExam {
                get {
                    try {
                        return ((bool)(this[this.tablespRptMaxillofacialOutPtMedicalFile.IsOutPtExamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsOutPtExam\' in table \'spRptMaxillofacialOutPtMedicalFile\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.IsOutPtExamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short ObjectType {
                get {
                    try {
                        return ((short)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ObjectTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectType\' in table \'spRptMaxillofacialOutPtMedicalFile\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ObjectTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public short ArrivedType {
                get {
                    try {
                        return ((short)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ArrivedTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ArrivedType\' in table \'spRptMaxillofacialOutPtMedicalFile\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ArrivedTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string BasicDiagTreatment {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.BasicDiagTreatmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BasicDiagTreatment\' in table \'spRptMaxillofacialOutPtMedica" +
                                "lFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.BasicDiagTreatmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DischargeDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeDate\' in table \'spRptMaxillofacialOutPtMedicalFile" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double Pulse {
                get {
                    try {
                        return ((double)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PulseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pulse\' in table \'spRptMaxillofacialOutPtMedicalFile\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PulseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double Temperature {
                get {
                    try {
                        return ((double)(this[this.tablespRptMaxillofacialOutPtMedicalFile.TemperatureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Temperature\' in table \'spRptMaxillofacialOutPtMedicalFile\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.TemperatureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double SystolicPressure {
                get {
                    try {
                        return ((double)(this[this.tablespRptMaxillofacialOutPtMedicalFile.SystolicPressureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SystolicPressure\' in table \'spRptMaxillofacialOutPtMedicalF" +
                                "ile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.SystolicPressureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double DiastolicPressure {
                get {
                    try {
                        return ((double)(this[this.tablespRptMaxillofacialOutPtMedicalFile.DiastolicPressureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiastolicPressure\' in table \'spRptMaxillofacialOutPtMedical" +
                                "File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.DiastolicPressureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double RespiratoryRate {
                get {
                    try {
                        return ((double)(this[this.tablespRptMaxillofacialOutPtMedicalFile.RespiratoryRateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RespiratoryRate\' in table \'spRptMaxillofacialOutPtMedicalFi" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.RespiratoryRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double Weight {
                get {
                    try {
                        return ((double)(this[this.tablespRptMaxillofacialOutPtMedicalFile.WeightColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Weight\' in table \'spRptMaxillofacialOutPtMedicalFile\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.WeightColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public double BMI {
                get {
                    try {
                        return ((double)(this[this.tablespRptMaxillofacialOutPtMedicalFile.BMIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BMI\' in table \'spRptMaxillofacialOutPtMedicalFile\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.BMIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long PtRegDetailID {
                get {
                    try {
                        return ((long)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PtRegDetailIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtRegDetailID\' in table \'spRptMaxillofacialOutPtMedicalFile" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PtRegDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string HistoryAndPhysicalExamination {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.HistoryAndPhysicalExaminationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HistoryAndPhysicalExamination\' in table \'spRptMaxillofacial" +
                                "OutPtMedicalFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.HistoryAndPhysicalExaminationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PastMedicalHistory {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PastMedicalHistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PastMedicalHistory\' in table \'spRptMaxillofacialOutPtMedica" +
                                "lFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PastMedicalHistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PastMedicalHistoryOfFamily {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PastMedicalHistoryOfFamilyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PastMedicalHistoryOfFamily\' in table \'spRptMaxillofacialOut" +
                                "PtMedicalFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PastMedicalHistoryOfFamilyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PhysicalExamination {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PhysicalExaminationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicalExamination\' in table \'spRptMaxillofacialOutPtMedic" +
                                "alFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PhysicalExaminationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PhysicalExaminationAllParts {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PhysicalExaminationAllPartsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhysicalExaminationAllParts\' in table \'spRptMaxillofacialOu" +
                                "tPtMedicalFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PhysicalExaminationAllPartsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ParaclinicalNote {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ParaclinicalNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParaclinicalNote\' in table \'spRptMaxillofacialOutPtMedicalF" +
                                "ile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ParaclinicalNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MedicalInProcessed {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.MedicalInProcessedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicalInProcessed\' in table \'spRptMaxillofacialOutPtMedica" +
                                "lFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.MedicalInProcessedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LaboratoryNote {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.LaboratoryNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LaboratoryNote\' in table \'spRptMaxillofacialOutPtMedicalFil" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.LaboratoryNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TreatmentMethod {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentMethodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TreatmentMethod\' in table \'spRptMaxillofacialOutPtMedicalFi" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentMethodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DischargeStatus {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeStatus\' in table \'spRptMaxillofacialOutPtMedicalFi" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string TreatmentSolution {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentSolutionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TreatmentSolution\' in table \'spRptMaxillofacialOutPtMedical" +
                                "File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentSolutionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long StaffID {
                get {
                    try {
                        return ((long)(this[this.tablespRptMaxillofacialOutPtMedicalFile.StaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffID\' in table \'spRptMaxillofacialOutPtMedicalFile\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.StaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime RecCreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRptMaxillofacialOutPtMedicalFile.RecCreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecCreatedDate\' in table \'spRptMaxillofacialOutPtMedicalFil" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.RecCreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long SentStaffID {
                get {
                    try {
                        return ((long)(this[this.tablespRptMaxillofacialOutPtMedicalFile.SentStaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SentStaffID\' in table \'spRptMaxillofacialOutPtMedicalFile\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.SentStaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FirstDiagnostic {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.FirstDiagnosticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstDiagnostic\' in table \'spRptMaxillofacialOutPtMedicalFi" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.FirstDiagnosticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ReasonAdmission {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ReasonAdmissionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReasonAdmission\' in table \'spRptMaxillofacialOutPtMedicalFi" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ReasonAdmissionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DischargeDiagnostic {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnosticColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeDiagnostic\' in table \'spRptMaxillofacialOutPtMedic" +
                                "alFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnosticColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PathologicalProcessAndClinicalCourse {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PathologicalProcessAndClinicalCourseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PathologicalProcessAndClinicalCourse\' in table \'spRptMaxill" +
                                "ofacialOutPtMedicalFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PathologicalProcessAndClinicalCourseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PCLResultsHaveDiagnosticValue {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.PCLResultsHaveDiagnosticValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCLResultsHaveDiagnosticValue\' in table \'spRptMaxillofacial" +
                                "OutPtMedicalFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.PCLResultsHaveDiagnosticValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DischargeDiagnostic_MainDisease {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnostic_MainDiseaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeDiagnostic_MainDisease\' in table \'spRptMaxillofaci" +
                                "alOutPtMedicalFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnostic_MainDiseaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DischargeDiagnostic_IncludingDisease {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnostic_IncludingDiseaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DischargeDiagnostic_IncludingDisease\' in table \'spRptMaxill" +
                                "ofacialOutPtMedicalFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnostic_IncludingDiseaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Treatments {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Treatments\' in table \'spRptMaxillofacialOutPtMedicalFile\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ConditionDischarge {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ConditionDischargeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConditionDischarge\' in table \'spRptMaxillofacialOutPtMedica" +
                                "lFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ConditionDischargeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DirectionOfTreatment {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.DirectionOfTreatmentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DirectionOfTreatment\' in table \'spRptMaxillofacialOutPtMedi" +
                                "calFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.DirectionOfTreatmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DiagnosisFinal {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.DiagnosisFinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosisFinal\' in table \'spRptMaxillofacialOutPtMedicalFil" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.DiagnosisFinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ICD10Name {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ICD10NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICD10Name\' in table \'spRptMaxillofacialOutPtMedicalFile\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ICD10NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ICD10Code {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ICD10CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICD10Code\' in table \'spRptMaxillofacialOutPtMedicalFile\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ICD10CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SubICD10Code {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.SubICD10CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubICD10Code\' in table \'spRptMaxillofacialOutPtMedicalFile\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.SubICD10CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SubICD10Name {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.SubICD10NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubICD10Name\' in table \'spRptMaxillofacialOutPtMedicalFile\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.SubICD10NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime ProgDateFrom {
                get {
                    return ((global::System.DateTime)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ProgDateFromColumn]));
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ProgDateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime ProgDateTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ProgDateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProgDateTo\' in table \'spRptMaxillofacialOutPtMedicalFile\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ProgDateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MedicalRecordNote {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.MedicalRecordNoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedicalRecordNote\' in table \'spRptMaxillofacialOutPtMedical" +
                                "File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.MedicalRecordNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string DiagnosisOfOutpatientDept {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.DiagnosisOfOutpatientDeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosisOfOutpatientDept\' in table \'spRptMaxillofacialOutP" +
                                "tMedicalFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.DiagnosisOfOutpatientDeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string ProcessedByDownline {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.ProcessedByDownlineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProcessedByDownline\' in table \'spRptMaxillofacialOutPtMedic" +
                                "alFile\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.ProcessedByDownlineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string SpecialistDisease {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.SpecialistDiseaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SpecialistDisease\' in table \'spRptMaxillofacialOutPtMedical" +
                                "File\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.SpecialistDiseaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string JobName {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.JobNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobName\' in table \'spRptMaxillofacialOutPtMedicalFile\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.JobNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string JobCode {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.JobCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobCode\' in table \'spRptMaxillofacialOutPtMedicalFile\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.JobCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_Ethnic {
                get {
                    try {
                        return ((long)(this[this.tablespRptMaxillofacialOutPtMedicalFile.V_EthnicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_Ethnic\' in table \'spRptMaxillofacialOutPtMedicalFile\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.V_EthnicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string EthnicName {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.EthnicNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EthnicName\' in table \'spRptMaxillofacialOutPtMedicalFile\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.EthnicNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int NationalityCode {
                get {
                    try {
                        return ((int)(this[this.tablespRptMaxillofacialOutPtMedicalFile.NationalityCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NationalityCode\' in table \'spRptMaxillofacialOutPtMedicalFi" +
                                "le\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.NationalityCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string CountryName {
                get {
                    try {
                        return ((string)(this[this.tablespRptMaxillofacialOutPtMedicalFile.CountryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryName\' in table \'spRptMaxillofacialOutPtMedicalFile\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRptMaxillofacialOutPtMedicalFile.CountryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPtRegistrationCodeNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PtRegistrationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPtRegistrationCodeNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PtRegistrationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientCodeNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PatientCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientCodeNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDeptNameNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.DeptNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDeptNameNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.DeptNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDOBNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDOBNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAgeNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientOccupationNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PatientOccupationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientOccupationNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientOccupationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEthnicNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.EthnicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEthnicNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.EthnicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsForeignerNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.IsForeignerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsForeignerNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.IsForeignerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientStreetAddressNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PatientStreetAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientStreetAddressNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientStreetAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWardNameNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.WardNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWardNameNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.WardNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSuburbNameNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.SuburbNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSuburbNameNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.SuburbNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCityProvinceNameNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.CityProvinceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCityProvinceNameNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.CityProvinceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientEmployerNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PatientEmployerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientEmployerNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PatientEmployerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHisIDNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.HisIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHisIDNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.HisIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHICardNoNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.HICardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHICardNoNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.HICardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsValidDateToNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.ValidDateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetValidDateToNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.ValidDateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFContactFullNameNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.FContactFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFContactFullNameNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.FContactFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFContactAddressNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.FContactAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFContactAddressNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.FContactAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFContactCellPhoneNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.FContactCellPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFContactCellPhoneNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.FContactCellPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsOutPtExamNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.IsOutPtExamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsOutPtExamNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.IsOutPtExamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsObjectTypeNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.ObjectTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetObjectTypeNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.ObjectTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsArrivedTypeNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.ArrivedTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetArrivedTypeNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.ArrivedTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBasicDiagTreatmentNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.BasicDiagTreatmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBasicDiagTreatmentNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.BasicDiagTreatmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDischargeDateNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDischargeDateNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPulseNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PulseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPulseNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PulseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTemperatureNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.TemperatureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTemperatureNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.TemperatureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSystolicPressureNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.SystolicPressureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSystolicPressureNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.SystolicPressureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDiastolicPressureNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.DiastolicPressureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDiastolicPressureNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.DiastolicPressureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRespiratoryRateNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.RespiratoryRateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRespiratoryRateNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.RespiratoryRateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWeightNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.WeightColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWeightNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.WeightColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBMINull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.BMIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBMINull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.BMIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPtRegDetailIDNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PtRegDetailIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPtRegDetailIDNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PtRegDetailIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsHistoryAndPhysicalExaminationNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.HistoryAndPhysicalExaminationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetHistoryAndPhysicalExaminationNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.HistoryAndPhysicalExaminationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPastMedicalHistoryNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PastMedicalHistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPastMedicalHistoryNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PastMedicalHistoryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPastMedicalHistoryOfFamilyNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PastMedicalHistoryOfFamilyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPastMedicalHistoryOfFamilyNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PastMedicalHistoryOfFamilyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPhysicalExaminationNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PhysicalExaminationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPhysicalExaminationNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PhysicalExaminationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPhysicalExaminationAllPartsNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PhysicalExaminationAllPartsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPhysicalExaminationAllPartsNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PhysicalExaminationAllPartsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsParaclinicalNoteNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.ParaclinicalNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetParaclinicalNoteNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.ParaclinicalNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMedicalInProcessedNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.MedicalInProcessedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMedicalInProcessedNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.MedicalInProcessedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLaboratoryNoteNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.LaboratoryNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLaboratoryNoteNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.LaboratoryNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTreatmentMethodNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentMethodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTreatmentMethodNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentMethodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDischargeStatusNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.DischargeStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDischargeStatusNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTreatmentSolutionNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentSolutionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTreatmentSolutionNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentSolutionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsStaffIDNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.StaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetStaffIDNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.StaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRecCreatedDateNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.RecCreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRecCreatedDateNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.RecCreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSentStaffIDNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.SentStaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSentStaffIDNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.SentStaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFirstDiagnosticNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.FirstDiagnosticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFirstDiagnosticNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.FirstDiagnosticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsReasonAdmissionNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.ReasonAdmissionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetReasonAdmissionNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.ReasonAdmissionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDischargeDiagnosticNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnosticColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDischargeDiagnosticNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnosticColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPathologicalProcessAndClinicalCourseNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PathologicalProcessAndClinicalCourseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPathologicalProcessAndClinicalCourseNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PathologicalProcessAndClinicalCourseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPCLResultsHaveDiagnosticValueNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.PCLResultsHaveDiagnosticValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPCLResultsHaveDiagnosticValueNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.PCLResultsHaveDiagnosticValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDischargeDiagnostic_MainDiseaseNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnostic_MainDiseaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDischargeDiagnostic_MainDiseaseNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnostic_MainDiseaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDischargeDiagnostic_IncludingDiseaseNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnostic_IncludingDiseaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDischargeDiagnostic_IncludingDiseaseNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.DischargeDiagnostic_IncludingDiseaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTreatmentsNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTreatmentsNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.TreatmentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsConditionDischargeNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.ConditionDischargeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetConditionDischargeNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.ConditionDischargeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDirectionOfTreatmentNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.DirectionOfTreatmentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDirectionOfTreatmentNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.DirectionOfTreatmentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDiagnosisFinalNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.DiagnosisFinalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDiagnosisFinalNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.DiagnosisFinalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsICD10NameNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.ICD10NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetICD10NameNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.ICD10NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsICD10CodeNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.ICD10CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetICD10CodeNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.ICD10CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubICD10CodeNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.SubICD10CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubICD10CodeNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.SubICD10CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSubICD10NameNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.SubICD10NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSubICD10NameNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.SubICD10NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProgDateToNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.ProgDateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProgDateToNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.ProgDateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMedicalRecordNoteNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.MedicalRecordNoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMedicalRecordNoteNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.MedicalRecordNoteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDiagnosisOfOutpatientDeptNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.DiagnosisOfOutpatientDeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDiagnosisOfOutpatientDeptNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.DiagnosisOfOutpatientDeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsProcessedByDownlineNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.ProcessedByDownlineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetProcessedByDownlineNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.ProcessedByDownlineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSpecialistDiseaseNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.SpecialistDiseaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSpecialistDiseaseNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.SpecialistDiseaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsJobNameNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.JobNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetJobNameNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.JobNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsJobCodeNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.JobCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetJobCodeNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.JobCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_EthnicNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.V_EthnicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_EthnicNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.V_EthnicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsEthnicNameNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.EthnicNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetEthnicNameNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.EthnicNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNationalityCodeNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.NationalityCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNationalityCodeNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.NationalityCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCountryNameNull() {
                return this.IsNull(this.tablespRptMaxillofacialOutPtMedicalFile.CountryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCountryNameNull() {
                this[this.tablespRptMaxillofacialOutPtMedicalFile.CountryNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEvent : global::System.EventArgs {
            
            private spRptGeneralOutPtMedicalFileFilmsRecvRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileFilmsRecvRowChangeEvent(spRptGeneralOutPtMedicalFileFilmsRecvRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileFilmsRecvRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEvent : global::System.EventArgs {
            
            private spRptGeneralOutPtMedicalFileDeptDetailInfosRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileDeptDetailInfosRowChangeEvent(spRptGeneralOutPtMedicalFileDeptDetailInfosRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptGeneralOutPtMedicalFileDeptDetailInfosRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class spRptMaxillofacialOutPtMedicalFileRowChangeEvent : global::System.EventArgs {
            
            private spRptMaxillofacialOutPtMedicalFileRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptMaxillofacialOutPtMedicalFileRowChangeEvent(spRptMaxillofacialOutPtMedicalFileRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spRptMaxillofacialOutPtMedicalFileRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace eHCMS.ReportLib.RptConsultations.DataSchema.dsMaxillofacialOutPtMedicalFileFrontCoverTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRptGeneralOutPtMedicalFileFilmsRecvTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public spRptGeneralOutPtMedicalFileFilmsRecvTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRptGeneralOutPtMedicalFileFilmsRecv";
            tableMapping.ColumnMappings.Add("PCLSubCategoryName", "PCLSubCategoryName");
            tableMapping.ColumnMappings.Add("PCLSubCategoryDescription", "PCLSubCategoryDescription");
            tableMapping.ColumnMappings.Add("DefaultNumFilmsRecv", "DefaultNumFilmsRecv");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRptGeneralOutPtMedicalFileFilmsRecv";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PtRegDetailID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutPtTreatmentProgramID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMaxillofacialOutPtMedicalFileFrontCover.spRptGeneralOutPtMedicalFileFilmsRecvDataTable dataTable, global::System.Nullable<long> PtRegDetailID, global::System.Nullable<long> OutPtTreatmentProgramID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PtRegDetailID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PtRegDetailID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((OutPtTreatmentProgramID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(OutPtTreatmentProgramID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMaxillofacialOutPtMedicalFileFrontCover.spRptGeneralOutPtMedicalFileFilmsRecvDataTable GetData(global::System.Nullable<long> PtRegDetailID, global::System.Nullable<long> OutPtTreatmentProgramID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PtRegDetailID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PtRegDetailID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((OutPtTreatmentProgramID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(OutPtTreatmentProgramID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            dsMaxillofacialOutPtMedicalFileFrontCover.spRptGeneralOutPtMedicalFileFilmsRecvDataTable dataTable = new dsMaxillofacialOutPtMedicalFileFrontCover.spRptGeneralOutPtMedicalFileFilmsRecvDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRptGeneralOutPtMedicalFileDeptDetailInfosTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public spRptGeneralOutPtMedicalFileDeptDetailInfosTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRptGeneralOutPtMedicalFileDeptDetailInfos";
            tableMapping.ColumnMappings.Add("DeptCode", "DeptCode");
            tableMapping.ColumnMappings.Add("FromDate", "FromDate");
            tableMapping.ColumnMappings.Add("ICD10Code", "ICD10Code");
            tableMapping.ColumnMappings.Add("ConsultingDate", "ConsultingDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRptGeneralOutPtMedicalFileDeptDetailInfos";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PtRegDetailID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PtRegistrationID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMaxillofacialOutPtMedicalFileFrontCover.spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable dataTable, global::System.Nullable<long> PtRegDetailID, global::System.Nullable<long> PtRegistrationID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PtRegDetailID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PtRegDetailID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PtRegistrationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(PtRegistrationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMaxillofacialOutPtMedicalFileFrontCover.spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable GetData(global::System.Nullable<long> PtRegDetailID, global::System.Nullable<long> PtRegistrationID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PtRegDetailID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PtRegDetailID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PtRegistrationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(PtRegistrationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            dsMaxillofacialOutPtMedicalFileFrontCover.spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable dataTable = new dsMaxillofacialOutPtMedicalFileFrontCover.spRptGeneralOutPtMedicalFileDeptDetailInfosDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spRptMaxillofacialOutPtMedicalFileTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public spRptMaxillofacialOutPtMedicalFileTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRptMaxillofacialOutPtMedicalFile";
            tableMapping.ColumnMappings.Add("PtRegistrationCode", "PtRegistrationCode");
            tableMapping.ColumnMappings.Add("PatientCode", "PatientCode");
            tableMapping.ColumnMappings.Add("DeptName", "DeptName");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("Age", "Age");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("PatientOccupation", "PatientOccupation");
            tableMapping.ColumnMappings.Add("Ethnic", "Ethnic");
            tableMapping.ColumnMappings.Add("IsForeigner", "IsForeigner");
            tableMapping.ColumnMappings.Add("PatientStreetAddress", "PatientStreetAddress");
            tableMapping.ColumnMappings.Add("WardName", "WardName");
            tableMapping.ColumnMappings.Add("SuburbName", "SuburbName");
            tableMapping.ColumnMappings.Add("CityProvinceName", "CityProvinceName");
            tableMapping.ColumnMappings.Add("PatientEmployer", "PatientEmployer");
            tableMapping.ColumnMappings.Add("HisID", "HisID");
            tableMapping.ColumnMappings.Add("HICardNo", "HICardNo");
            tableMapping.ColumnMappings.Add("ValidDateTo", "ValidDateTo");
            tableMapping.ColumnMappings.Add("FContactFullName", "FContactFullName");
            tableMapping.ColumnMappings.Add("FContactAddress", "FContactAddress");
            tableMapping.ColumnMappings.Add("FContactCellPhone", "FContactCellPhone");
            tableMapping.ColumnMappings.Add("ExamDate", "ExamDate");
            tableMapping.ColumnMappings.Add("IsOutPtExam", "IsOutPtExam");
            tableMapping.ColumnMappings.Add("ObjectType", "ObjectType");
            tableMapping.ColumnMappings.Add("ArrivedType", "ArrivedType");
            tableMapping.ColumnMappings.Add("BasicDiagTreatment", "BasicDiagTreatment");
            tableMapping.ColumnMappings.Add("DischargeDate", "DischargeDate");
            tableMapping.ColumnMappings.Add("Pulse", "Pulse");
            tableMapping.ColumnMappings.Add("Temperature", "Temperature");
            tableMapping.ColumnMappings.Add("SystolicPressure", "SystolicPressure");
            tableMapping.ColumnMappings.Add("DiastolicPressure", "DiastolicPressure");
            tableMapping.ColumnMappings.Add("RespiratoryRate", "RespiratoryRate");
            tableMapping.ColumnMappings.Add("Weight", "Weight");
            tableMapping.ColumnMappings.Add("BMI", "BMI");
            tableMapping.ColumnMappings.Add("PtRegDetailID", "PtRegDetailID");
            tableMapping.ColumnMappings.Add("HistoryAndPhysicalExamination", "HistoryAndPhysicalExamination");
            tableMapping.ColumnMappings.Add("PastMedicalHistory", "PastMedicalHistory");
            tableMapping.ColumnMappings.Add("PastMedicalHistoryOfFamily", "PastMedicalHistoryOfFamily");
            tableMapping.ColumnMappings.Add("PhysicalExamination", "PhysicalExamination");
            tableMapping.ColumnMappings.Add("PhysicalExaminationAllParts", "PhysicalExaminationAllParts");
            tableMapping.ColumnMappings.Add("ParaclinicalNote", "ParaclinicalNote");
            tableMapping.ColumnMappings.Add("MedicalInProcessed", "MedicalInProcessed");
            tableMapping.ColumnMappings.Add("LaboratoryNote", "LaboratoryNote");
            tableMapping.ColumnMappings.Add("TreatmentMethod", "TreatmentMethod");
            tableMapping.ColumnMappings.Add("DischargeStatus", "DischargeStatus");
            tableMapping.ColumnMappings.Add("TreatmentSolution", "TreatmentSolution");
            tableMapping.ColumnMappings.Add("StaffID", "StaffID");
            tableMapping.ColumnMappings.Add("RecCreatedDate", "RecCreatedDate");
            tableMapping.ColumnMappings.Add("SentStaffID", "SentStaffID");
            tableMapping.ColumnMappings.Add("FirstDiagnostic", "FirstDiagnostic");
            tableMapping.ColumnMappings.Add("ReasonAdmission", "ReasonAdmission");
            tableMapping.ColumnMappings.Add("DischargeDiagnostic", "DischargeDiagnostic");
            tableMapping.ColumnMappings.Add("PathologicalProcessAndClinicalCourse", "PathologicalProcessAndClinicalCourse");
            tableMapping.ColumnMappings.Add("PCLResultsHaveDiagnosticValue", "PCLResultsHaveDiagnosticValue");
            tableMapping.ColumnMappings.Add("DischargeDiagnostic_MainDisease", "DischargeDiagnostic_MainDisease");
            tableMapping.ColumnMappings.Add("DischargeDiagnostic_IncludingDisease", "DischargeDiagnostic_IncludingDisease");
            tableMapping.ColumnMappings.Add("Treatments", "Treatments");
            tableMapping.ColumnMappings.Add("ConditionDischarge", "ConditionDischarge");
            tableMapping.ColumnMappings.Add("DirectionOfTreatment", "DirectionOfTreatment");
            tableMapping.ColumnMappings.Add("DiagnosisFinal", "DiagnosisFinal");
            tableMapping.ColumnMappings.Add("ICD10Name", "ICD10Name");
            tableMapping.ColumnMappings.Add("ICD10Code", "ICD10Code");
            tableMapping.ColumnMappings.Add("SubICD10Code", "SubICD10Code");
            tableMapping.ColumnMappings.Add("SubICD10Name", "SubICD10Name");
            tableMapping.ColumnMappings.Add("ProgDateFrom", "ProgDateFrom");
            tableMapping.ColumnMappings.Add("ProgDateTo", "ProgDateTo");
            tableMapping.ColumnMappings.Add("MedicalRecordNote", "MedicalRecordNote");
            tableMapping.ColumnMappings.Add("DiagnosisOfOutpatientDept", "DiagnosisOfOutpatientDept");
            tableMapping.ColumnMappings.Add("ProcessedByDownline", "ProcessedByDownline");
            tableMapping.ColumnMappings.Add("SpecialistDisease", "SpecialistDisease");
            tableMapping.ColumnMappings.Add("JobName", "JobName");
            tableMapping.ColumnMappings.Add("JobCode", "JobCode");
            tableMapping.ColumnMappings.Add("V_Ethnic", "V_Ethnic");
            tableMapping.ColumnMappings.Add("EthnicName", "EthnicName");
            tableMapping.ColumnMappings.Add("NationalityCode", "NationalityCode");
            tableMapping.ColumnMappings.Add("CountryName", "CountryName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRptMaxillofacialOutPtMedicalFile";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PtRegDetailID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PtRegistrationID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@V_RegistrationType", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutPtTreatmentProgramID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsMaxillofacialOutPtMedicalFileFrontCover.spRptMaxillofacialOutPtMedicalFileDataTable dataTable, global::System.Nullable<long> PtRegDetailID, global::System.Nullable<long> PtRegistrationID, global::System.Nullable<long> V_RegistrationType, global::System.Nullable<long> OutPtTreatmentProgramID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PtRegDetailID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PtRegDetailID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PtRegistrationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(PtRegistrationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((V_RegistrationType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((long)(V_RegistrationType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((OutPtTreatmentProgramID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((long)(OutPtTreatmentProgramID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsMaxillofacialOutPtMedicalFileFrontCover.spRptMaxillofacialOutPtMedicalFileDataTable GetData(global::System.Nullable<long> PtRegDetailID, global::System.Nullable<long> PtRegistrationID, global::System.Nullable<long> V_RegistrationType, global::System.Nullable<long> OutPtTreatmentProgramID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PtRegDetailID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PtRegDetailID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PtRegistrationID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(PtRegistrationID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((V_RegistrationType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((long)(V_RegistrationType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((OutPtTreatmentProgramID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((long)(OutPtTreatmentProgramID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            dsMaxillofacialOutPtMedicalFileFrontCover.spRptMaxillofacialOutPtMedicalFileDataTable dataTable = new dsMaxillofacialOutPtMedicalFileFrontCover.spRptMaxillofacialOutPtMedicalFileDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(dsMaxillofacialOutPtMedicalFileFrontCover dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(dsMaxillofacialOutPtMedicalFileFrontCover dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(dsMaxillofacialOutPtMedicalFileFrontCover dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(dsMaxillofacialOutPtMedicalFileFrontCover dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591