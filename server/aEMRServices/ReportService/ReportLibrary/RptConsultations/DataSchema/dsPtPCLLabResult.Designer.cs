//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eHCMS.ReportLib.RptConsultations.DataSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsPtPCLLabResult")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsPtPCLLabResult : global::System.Data.DataSet {
        
        private spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable tablespRpt_PatientPCLRequest_GetHeaderInfoByID;
        
        private spRpt_PatientPCLLabResults_GetHeaderInfoDataTable tablespRpt_PatientPCLLabResults_GetHeaderInfo;
        
        private spRpt_PatientPCLLabResults_GetDetailsInfoDataTable tablespRpt_PatientPCLLabResults_GetDetailsInfo;
        
        private global::System.Data.DataRelation relationspRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInfo;
        
        private global::System.Data.DataRelation relationspRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInfo;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsPtPCLLabResult() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsPtPCLLabResult(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spRpt_PatientPCLRequest_GetHeaderInfoByID"] != null)) {
                    base.Tables.Add(new spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable(ds.Tables["spRpt_PatientPCLRequest_GetHeaderInfoByID"]));
                }
                if ((ds.Tables["spRpt_PatientPCLLabResults_GetHeaderInfo"] != null)) {
                    base.Tables.Add(new spRpt_PatientPCLLabResults_GetHeaderInfoDataTable(ds.Tables["spRpt_PatientPCLLabResults_GetHeaderInfo"]));
                }
                if ((ds.Tables["spRpt_PatientPCLLabResults_GetDetailsInfo"] != null)) {
                    base.Tables.Add(new spRpt_PatientPCLLabResults_GetDetailsInfoDataTable(ds.Tables["spRpt_PatientPCLLabResults_GetDetailsInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable spRpt_PatientPCLRequest_GetHeaderInfoByID {
            get {
                return this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRpt_PatientPCLLabResults_GetHeaderInfoDataTable spRpt_PatientPCLLabResults_GetHeaderInfo {
            get {
                return this.tablespRpt_PatientPCLLabResults_GetHeaderInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spRpt_PatientPCLLabResults_GetDetailsInfoDataTable spRpt_PatientPCLLabResults_GetDetailsInfo {
            get {
                return this.tablespRpt_PatientPCLLabResults_GetDetailsInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsPtPCLLabResult cln = ((dsPtPCLLabResult)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spRpt_PatientPCLRequest_GetHeaderInfoByID"] != null)) {
                    base.Tables.Add(new spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable(ds.Tables["spRpt_PatientPCLRequest_GetHeaderInfoByID"]));
                }
                if ((ds.Tables["spRpt_PatientPCLLabResults_GetHeaderInfo"] != null)) {
                    base.Tables.Add(new spRpt_PatientPCLLabResults_GetHeaderInfoDataTable(ds.Tables["spRpt_PatientPCLLabResults_GetHeaderInfo"]));
                }
                if ((ds.Tables["spRpt_PatientPCLLabResults_GetDetailsInfo"] != null)) {
                    base.Tables.Add(new spRpt_PatientPCLLabResults_GetDetailsInfoDataTable(ds.Tables["spRpt_PatientPCLLabResults_GetDetailsInfo"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID = ((spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable)(base.Tables["spRpt_PatientPCLRequest_GetHeaderInfoByID"]));
            if ((initTable == true)) {
                if ((this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID != null)) {
                    this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.InitVars();
                }
            }
            this.tablespRpt_PatientPCLLabResults_GetHeaderInfo = ((spRpt_PatientPCLLabResults_GetHeaderInfoDataTable)(base.Tables["spRpt_PatientPCLLabResults_GetHeaderInfo"]));
            if ((initTable == true)) {
                if ((this.tablespRpt_PatientPCLLabResults_GetHeaderInfo != null)) {
                    this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.InitVars();
                }
            }
            this.tablespRpt_PatientPCLLabResults_GetDetailsInfo = ((spRpt_PatientPCLLabResults_GetDetailsInfoDataTable)(base.Tables["spRpt_PatientPCLLabResults_GetDetailsInfo"]));
            if ((initTable == true)) {
                if ((this.tablespRpt_PatientPCLLabResults_GetDetailsInfo != null)) {
                    this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.InitVars();
                }
            }
            this.relationspRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInfo = this.Relations["spRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInf" +
                "o"];
            this.relationspRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInfo = this.Relations["spRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInf" +
                "o"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsPtPCLLabResult";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsPtPCLLabResult.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID = new spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable();
            base.Tables.Add(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID);
            this.tablespRpt_PatientPCLLabResults_GetHeaderInfo = new spRpt_PatientPCLLabResults_GetHeaderInfoDataTable();
            base.Tables.Add(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo);
            this.tablespRpt_PatientPCLLabResults_GetDetailsInfo = new spRpt_PatientPCLLabResults_GetDetailsInfoDataTable();
            base.Tables.Add(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo);
            this.relationspRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInfo = new global::System.Data.DataRelation("spRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInf" +
                    "o", new global::System.Data.DataColumn[] {
                        this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientPCLReqIDColumn}, new global::System.Data.DataColumn[] {
                        this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PatientPCLReqIDColumn}, false);
            this.Relations.Add(this.relationspRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInfo);
            this.relationspRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInfo = new global::System.Data.DataRelation("spRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInf" +
                    "o", new global::System.Data.DataColumn[] {
                        this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.LabResultIDColumn}, new global::System.Data.DataColumn[] {
                        this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.LabResultIDColumn}, false);
            this.Relations.Add(this.relationspRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInfo);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespRpt_PatientPCLRequest_GetHeaderInfoByID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespRpt_PatientPCLLabResults_GetHeaderInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespRpt_PatientPCLLabResults_GetDetailsInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsPtPCLLabResult ds = new dsPtPCLLabResult();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEventHandler(object sender, spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEventHandler(object sender, spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEventHandler(object sender, spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable : global::System.Data.TypedTableBase<spRpt_PatientPCLRequest_GetHeaderInfoByIDRow> {
            
            private global::System.Data.DataColumn columnPatientPCLReqID;
            
            private global::System.Data.DataColumn columnPCLFormID;
            
            private global::System.Data.DataColumn columnServiceRecID;
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnNationalMedicalCode;
            
            private global::System.Data.DataColumn columnPatientEmployer;
            
            private global::System.Data.DataColumn columnPatientCode;
            
            private global::System.Data.DataColumn columnPatientBarcode;
            
            private global::System.Data.DataColumn columnIDNumber;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnAgeOnly;
            
            private global::System.Data.DataColumn columnDateBecamePatient;
            
            private global::System.Data.DataColumn columnPatientStreetAddress;
            
            private global::System.Data.DataColumn columnPatientSurburb;
            
            private global::System.Data.DataColumn columnPatientPhoneNumber;
            
            private global::System.Data.DataColumn columnPatientCellPhoneNumber;
            
            private global::System.Data.DataColumn columnPatientEmailAddress;
            
            private global::System.Data.DataColumn columnPatientOccupation;
            
            private global::System.Data.DataColumn columnFContactFullName;
            
            private global::System.Data.DataColumn columnFContactAddress;
            
            private global::System.Data.DataColumn columnFContactHomePhone;
            
            private global::System.Data.DataColumn columnFContactBusinessPhone;
            
            private global::System.Data.DataColumn columnFContactCellPhone;
            
            private global::System.Data.DataColumn columnEthnic;
            
            private global::System.Data.DataColumn columnMaritalStatus;
            
            private global::System.Data.DataColumn columnFamilyRelationship;
            
            private global::System.Data.DataColumn columnHIID;
            
            private global::System.Data.DataColumn columnPatientID1;
            
            private global::System.Data.DataColumn columnIBID;
            
            private global::System.Data.DataColumn columnHIPCode;
            
            private global::System.Data.DataColumn columnHICardNo;
            
            private global::System.Data.DataColumn columnRegistrationCode;
            
            private global::System.Data.DataColumn columnRegistrationLocation;
            
            private global::System.Data.DataColumn columnValidDateFrom;
            
            private global::System.Data.DataColumn columnValidDateTo;
            
            private global::System.Data.DataColumn columnEditLocked;
            
            private global::System.Data.DataColumn columnInvalidFlag;
            
            private global::System.Data.DataColumn columnCityProvinceName;
            
            private global::System.Data.DataColumn columnReqDoctorName;
            
            private global::System.Data.DataColumn columnReqDoctorPhone;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable() {
                this.TableName = "spRpt_PatientPCLRequest_GetHeaderInfoByID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientPCLReqIDColumn {
                get {
                    return this.columnPatientPCLReqID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCLFormIDColumn {
                get {
                    return this.columnPCLFormID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceRecIDColumn {
                get {
                    return this.columnServiceRecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NationalMedicalCodeColumn {
                get {
                    return this.columnNationalMedicalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientEmployerColumn {
                get {
                    return this.columnPatientEmployer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientCodeColumn {
                get {
                    return this.columnPatientCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientBarcodeColumn {
                get {
                    return this.columnPatientBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDNumberColumn {
                get {
                    return this.columnIDNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeOnlyColumn {
                get {
                    return this.columnAgeOnly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateBecamePatientColumn {
                get {
                    return this.columnDateBecamePatient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientStreetAddressColumn {
                get {
                    return this.columnPatientStreetAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientSurburbColumn {
                get {
                    return this.columnPatientSurburb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientPhoneNumberColumn {
                get {
                    return this.columnPatientPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientCellPhoneNumberColumn {
                get {
                    return this.columnPatientCellPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientEmailAddressColumn {
                get {
                    return this.columnPatientEmailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientOccupationColumn {
                get {
                    return this.columnPatientOccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FContactFullNameColumn {
                get {
                    return this.columnFContactFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FContactAddressColumn {
                get {
                    return this.columnFContactAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FContactHomePhoneColumn {
                get {
                    return this.columnFContactHomePhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FContactBusinessPhoneColumn {
                get {
                    return this.columnFContactBusinessPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FContactCellPhoneColumn {
                get {
                    return this.columnFContactCellPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EthnicColumn {
                get {
                    return this.columnEthnic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaritalStatusColumn {
                get {
                    return this.columnMaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FamilyRelationshipColumn {
                get {
                    return this.columnFamilyRelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIIDColumn {
                get {
                    return this.columnHIID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientID1Column {
                get {
                    return this.columnPatientID1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IBIDColumn {
                get {
                    return this.columnIBID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIPCodeColumn {
                get {
                    return this.columnHIPCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HICardNoColumn {
                get {
                    return this.columnHICardNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegistrationCodeColumn {
                get {
                    return this.columnRegistrationCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegistrationLocationColumn {
                get {
                    return this.columnRegistrationLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValidDateFromColumn {
                get {
                    return this.columnValidDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValidDateToColumn {
                get {
                    return this.columnValidDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EditLockedColumn {
                get {
                    return this.columnEditLocked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvalidFlagColumn {
                get {
                    return this.columnInvalidFlag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityProvinceNameColumn {
                get {
                    return this.columnCityProvinceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqDoctorNameColumn {
                get {
                    return this.columnReqDoctorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqDoctorPhoneColumn {
                get {
                    return this.columnReqDoctorPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLRequest_GetHeaderInfoByIDRow this[int index] {
                get {
                    return ((spRpt_PatientPCLRequest_GetHeaderInfoByIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEventHandler spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEventHandler spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEventHandler spRpt_PatientPCLRequest_GetHeaderInfoByIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEventHandler spRpt_PatientPCLRequest_GetHeaderInfoByIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspRpt_PatientPCLRequest_GetHeaderInfoByIDRow(spRpt_PatientPCLRequest_GetHeaderInfoByIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLRequest_GetHeaderInfoByIDRow AddspRpt_PatientPCLRequest_GetHeaderInfoByIDRow(
                        long PCLFormID, 
                        string NationalMedicalCode, 
                        string PatientEmployer, 
                        string PatientCode, 
                        string PatientBarcode, 
                        string IDNumber, 
                        string FullName, 
                        string Gender, 
                        System.DateTime DOB, 
                        bool AgeOnly, 
                        System.DateTime DateBecamePatient, 
                        string PatientStreetAddress, 
                        string PatientSurburb, 
                        string PatientPhoneNumber, 
                        string PatientCellPhoneNumber, 
                        string PatientEmailAddress, 
                        string PatientOccupation, 
                        string FContactFullName, 
                        string FContactAddress, 
                        string FContactHomePhone, 
                        string FContactBusinessPhone, 
                        string FContactCellPhone, 
                        string Ethnic, 
                        string MaritalStatus, 
                        string FamilyRelationship, 
                        long PatientID1, 
                        int IBID, 
                        string HIPCode, 
                        string HICardNo, 
                        string RegistrationCode, 
                        string RegistrationLocation, 
                        System.DateTime ValidDateFrom, 
                        System.DateTime ValidDateTo, 
                        bool EditLocked, 
                        bool InvalidFlag, 
                        string CityProvinceName, 
                        string ReqDoctorName, 
                        string ReqDoctorPhone) {
                spRpt_PatientPCLRequest_GetHeaderInfoByIDRow rowspRpt_PatientPCLRequest_GetHeaderInfoByIDRow = ((spRpt_PatientPCLRequest_GetHeaderInfoByIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PCLFormID,
                        null,
                        null,
                        NationalMedicalCode,
                        PatientEmployer,
                        PatientCode,
                        PatientBarcode,
                        IDNumber,
                        FullName,
                        Gender,
                        DOB,
                        AgeOnly,
                        DateBecamePatient,
                        PatientStreetAddress,
                        PatientSurburb,
                        PatientPhoneNumber,
                        PatientCellPhoneNumber,
                        PatientEmailAddress,
                        PatientOccupation,
                        FContactFullName,
                        FContactAddress,
                        FContactHomePhone,
                        FContactBusinessPhone,
                        FContactCellPhone,
                        Ethnic,
                        MaritalStatus,
                        FamilyRelationship,
                        null,
                        PatientID1,
                        IBID,
                        HIPCode,
                        HICardNo,
                        RegistrationCode,
                        RegistrationLocation,
                        ValidDateFrom,
                        ValidDateTo,
                        EditLocked,
                        InvalidFlag,
                        CityProvinceName,
                        ReqDoctorName,
                        ReqDoctorPhone};
                rowspRpt_PatientPCLRequest_GetHeaderInfoByIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRpt_PatientPCLRequest_GetHeaderInfoByIDRow);
                return rowspRpt_PatientPCLRequest_GetHeaderInfoByIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLRequest_GetHeaderInfoByIDRow FindByPatientPCLReqID(long PatientPCLReqID) {
                return ((spRpt_PatientPCLRequest_GetHeaderInfoByIDRow)(this.Rows.Find(new object[] {
                            PatientPCLReqID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable cln = ((spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientPCLReqID = base.Columns["PatientPCLReqID"];
                this.columnPCLFormID = base.Columns["PCLFormID"];
                this.columnServiceRecID = base.Columns["ServiceRecID"];
                this.columnPatientID = base.Columns["PatientID"];
                this.columnNationalMedicalCode = base.Columns["NationalMedicalCode"];
                this.columnPatientEmployer = base.Columns["PatientEmployer"];
                this.columnPatientCode = base.Columns["PatientCode"];
                this.columnPatientBarcode = base.Columns["PatientBarcode"];
                this.columnIDNumber = base.Columns["IDNumber"];
                this.columnFullName = base.Columns["FullName"];
                this.columnGender = base.Columns["Gender"];
                this.columnDOB = base.Columns["DOB"];
                this.columnAgeOnly = base.Columns["AgeOnly"];
                this.columnDateBecamePatient = base.Columns["DateBecamePatient"];
                this.columnPatientStreetAddress = base.Columns["PatientStreetAddress"];
                this.columnPatientSurburb = base.Columns["PatientSurburb"];
                this.columnPatientPhoneNumber = base.Columns["PatientPhoneNumber"];
                this.columnPatientCellPhoneNumber = base.Columns["PatientCellPhoneNumber"];
                this.columnPatientEmailAddress = base.Columns["PatientEmailAddress"];
                this.columnPatientOccupation = base.Columns["PatientOccupation"];
                this.columnFContactFullName = base.Columns["FContactFullName"];
                this.columnFContactAddress = base.Columns["FContactAddress"];
                this.columnFContactHomePhone = base.Columns["FContactHomePhone"];
                this.columnFContactBusinessPhone = base.Columns["FContactBusinessPhone"];
                this.columnFContactCellPhone = base.Columns["FContactCellPhone"];
                this.columnEthnic = base.Columns["Ethnic"];
                this.columnMaritalStatus = base.Columns["MaritalStatus"];
                this.columnFamilyRelationship = base.Columns["FamilyRelationship"];
                this.columnHIID = base.Columns["HIID"];
                this.columnPatientID1 = base.Columns["PatientID1"];
                this.columnIBID = base.Columns["IBID"];
                this.columnHIPCode = base.Columns["HIPCode"];
                this.columnHICardNo = base.Columns["HICardNo"];
                this.columnRegistrationCode = base.Columns["RegistrationCode"];
                this.columnRegistrationLocation = base.Columns["RegistrationLocation"];
                this.columnValidDateFrom = base.Columns["ValidDateFrom"];
                this.columnValidDateTo = base.Columns["ValidDateTo"];
                this.columnEditLocked = base.Columns["EditLocked"];
                this.columnInvalidFlag = base.Columns["InvalidFlag"];
                this.columnCityProvinceName = base.Columns["CityProvinceName"];
                this.columnReqDoctorName = base.Columns["ReqDoctorName"];
                this.columnReqDoctorPhone = base.Columns["ReqDoctorPhone"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientPCLReqID = new global::System.Data.DataColumn("PatientPCLReqID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientPCLReqID);
                this.columnPCLFormID = new global::System.Data.DataColumn("PCLFormID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCLFormID);
                this.columnServiceRecID = new global::System.Data.DataColumn("ServiceRecID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceRecID);
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnNationalMedicalCode = new global::System.Data.DataColumn("NationalMedicalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalMedicalCode);
                this.columnPatientEmployer = new global::System.Data.DataColumn("PatientEmployer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientEmployer);
                this.columnPatientCode = new global::System.Data.DataColumn("PatientCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientCode);
                this.columnPatientBarcode = new global::System.Data.DataColumn("PatientBarcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientBarcode);
                this.columnIDNumber = new global::System.Data.DataColumn("IDNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDNumber);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnAgeOnly = new global::System.Data.DataColumn("AgeOnly", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOnly);
                this.columnDateBecamePatient = new global::System.Data.DataColumn("DateBecamePatient", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateBecamePatient);
                this.columnPatientStreetAddress = new global::System.Data.DataColumn("PatientStreetAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientStreetAddress);
                this.columnPatientSurburb = new global::System.Data.DataColumn("PatientSurburb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientSurburb);
                this.columnPatientPhoneNumber = new global::System.Data.DataColumn("PatientPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientPhoneNumber);
                this.columnPatientCellPhoneNumber = new global::System.Data.DataColumn("PatientCellPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientCellPhoneNumber);
                this.columnPatientEmailAddress = new global::System.Data.DataColumn("PatientEmailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientEmailAddress);
                this.columnPatientOccupation = new global::System.Data.DataColumn("PatientOccupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientOccupation);
                this.columnFContactFullName = new global::System.Data.DataColumn("FContactFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactFullName);
                this.columnFContactAddress = new global::System.Data.DataColumn("FContactAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactAddress);
                this.columnFContactHomePhone = new global::System.Data.DataColumn("FContactHomePhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactHomePhone);
                this.columnFContactBusinessPhone = new global::System.Data.DataColumn("FContactBusinessPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactBusinessPhone);
                this.columnFContactCellPhone = new global::System.Data.DataColumn("FContactCellPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactCellPhone);
                this.columnEthnic = new global::System.Data.DataColumn("Ethnic", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthnic);
                this.columnMaritalStatus = new global::System.Data.DataColumn("MaritalStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaritalStatus);
                this.columnFamilyRelationship = new global::System.Data.DataColumn("FamilyRelationship", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyRelationship);
                this.columnHIID = new global::System.Data.DataColumn("HIID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIID);
                this.columnPatientID1 = new global::System.Data.DataColumn("PatientID1", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID1);
                this.columnIBID = new global::System.Data.DataColumn("IBID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIBID);
                this.columnHIPCode = new global::System.Data.DataColumn("HIPCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPCode);
                this.columnHICardNo = new global::System.Data.DataColumn("HICardNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHICardNo);
                this.columnRegistrationCode = new global::System.Data.DataColumn("RegistrationCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegistrationCode);
                this.columnRegistrationLocation = new global::System.Data.DataColumn("RegistrationLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegistrationLocation);
                this.columnValidDateFrom = new global::System.Data.DataColumn("ValidDateFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidDateFrom);
                this.columnValidDateTo = new global::System.Data.DataColumn("ValidDateTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidDateTo);
                this.columnEditLocked = new global::System.Data.DataColumn("EditLocked", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEditLocked);
                this.columnInvalidFlag = new global::System.Data.DataColumn("InvalidFlag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvalidFlag);
                this.columnCityProvinceName = new global::System.Data.DataColumn("CityProvinceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityProvinceName);
                this.columnReqDoctorName = new global::System.Data.DataColumn("ReqDoctorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqDoctorName);
                this.columnReqDoctorPhone = new global::System.Data.DataColumn("ReqDoctorPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqDoctorPhone);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientPCLReqID}, true));
                this.columnPatientPCLReqID.AutoIncrement = true;
                this.columnPatientPCLReqID.AllowDBNull = false;
                this.columnPatientPCLReqID.ReadOnly = true;
                this.columnPatientPCLReqID.Unique = true;
                this.columnServiceRecID.AutoIncrement = true;
                this.columnServiceRecID.AllowDBNull = false;
                this.columnServiceRecID.ReadOnly = true;
                this.columnPatientID.AutoIncrement = true;
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.ReadOnly = true;
                this.columnNationalMedicalCode.MaxLength = 17;
                this.columnPatientEmployer.MaxLength = 25;
                this.columnPatientCode.AllowDBNull = false;
                this.columnPatientCode.MaxLength = 8;
                this.columnPatientBarcode.MaxLength = 13;
                this.columnIDNumber.MaxLength = 15;
                this.columnFullName.AllowDBNull = false;
                this.columnFullName.MaxLength = 65;
                this.columnGender.AllowDBNull = false;
                this.columnGender.MaxLength = 1;
                this.columnPatientStreetAddress.MaxLength = 255;
                this.columnPatientSurburb.MaxLength = 80;
                this.columnPatientPhoneNumber.MaxLength = 17;
                this.columnPatientCellPhoneNumber.MaxLength = 13;
                this.columnPatientEmailAddress.MaxLength = 80;
                this.columnPatientOccupation.MaxLength = 125;
                this.columnFContactFullName.MaxLength = 35;
                this.columnFContactAddress.MaxLength = 125;
                this.columnFContactHomePhone.MaxLength = 15;
                this.columnFContactBusinessPhone.MaxLength = 15;
                this.columnFContactCellPhone.MaxLength = 15;
                this.columnEthnic.ReadOnly = true;
                this.columnEthnic.MaxLength = 125;
                this.columnMaritalStatus.ReadOnly = true;
                this.columnMaritalStatus.MaxLength = 125;
                this.columnFamilyRelationship.ReadOnly = true;
                this.columnFamilyRelationship.MaxLength = 125;
                this.columnHIID.AutoIncrement = true;
                this.columnHIID.ReadOnly = true;
                this.columnHIPCode.MaxLength = 2;
                this.columnHICardNo.MaxLength = 15;
                this.columnRegistrationCode.MaxLength = 7;
                this.columnRegistrationLocation.MaxLength = 128;
                this.columnCityProvinceName.MaxLength = 80;
                this.columnReqDoctorName.ReadOnly = true;
                this.columnReqDoctorName.MaxLength = 65;
                this.columnReqDoctorPhone.ReadOnly = true;
                this.columnReqDoctorPhone.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLRequest_GetHeaderInfoByIDRow NewspRpt_PatientPCLRequest_GetHeaderInfoByIDRow() {
                return ((spRpt_PatientPCLRequest_GetHeaderInfoByIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRpt_PatientPCLRequest_GetHeaderInfoByIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRpt_PatientPCLRequest_GetHeaderInfoByIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChanged != null)) {
                    this.spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChanged(this, new spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEvent(((spRpt_PatientPCLRequest_GetHeaderInfoByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChanging != null)) {
                    this.spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChanging(this, new spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEvent(((spRpt_PatientPCLRequest_GetHeaderInfoByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRpt_PatientPCLRequest_GetHeaderInfoByIDRowDeleted != null)) {
                    this.spRpt_PatientPCLRequest_GetHeaderInfoByIDRowDeleted(this, new spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEvent(((spRpt_PatientPCLRequest_GetHeaderInfoByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRpt_PatientPCLRequest_GetHeaderInfoByIDRowDeleting != null)) {
                    this.spRpt_PatientPCLRequest_GetHeaderInfoByIDRowDeleting(this, new spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEvent(((spRpt_PatientPCLRequest_GetHeaderInfoByIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespRpt_PatientPCLRequest_GetHeaderInfoByIDRow(spRpt_PatientPCLRequest_GetHeaderInfoByIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPtPCLLabResult ds = new dsPtPCLLabResult();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRpt_PatientPCLLabResults_GetHeaderInfoDataTable : global::System.Data.TypedTableBase<spRpt_PatientPCLLabResults_GetHeaderInfoRow> {
            
            private global::System.Data.DataColumn columnLabResultID;
            
            private global::System.Data.DataColumn columnPCLExtRefID;
            
            private global::System.Data.DataColumn columnPatientPCLReqID;
            
            private global::System.Data.DataColumn columnStaffID;
            
            private global::System.Data.DataColumn columnAgencyID;
            
            private global::System.Data.DataColumn columnSamplingDate;
            
            private global::System.Data.DataColumn columnSampleCode;
            
            private global::System.Data.DataColumn columnDiagnosisOnExam;
            
            private global::System.Data.DataColumn columnPCLForOutPatient;
            
            private global::System.Data.DataColumn columnIsExternalExam;
            
            private global::System.Data.DataColumn columnMedSpecID;
            
            private global::System.Data.DataColumn columnRequestedDoctor;
            
            private global::System.Data.DataColumn columnExamDate;
            
            private global::System.Data.DataColumn columnDiagnosis;
            
            private global::System.Data.DataColumn columnDoctorComments;
            
            private global::System.Data.DataColumn columnMedSpecName;
            
            private global::System.Data.DataColumn columnAgencyName;
            
            private global::System.Data.DataColumn columnLaboratorianName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetHeaderInfoDataTable() {
                this.TableName = "spRpt_PatientPCLLabResults_GetHeaderInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRpt_PatientPCLLabResults_GetHeaderInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spRpt_PatientPCLLabResults_GetHeaderInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabResultIDColumn {
                get {
                    return this.columnLabResultID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCLExtRefIDColumn {
                get {
                    return this.columnPCLExtRefID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientPCLReqIDColumn {
                get {
                    return this.columnPatientPCLReqID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StaffIDColumn {
                get {
                    return this.columnStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgencyIDColumn {
                get {
                    return this.columnAgencyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SamplingDateColumn {
                get {
                    return this.columnSamplingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SampleCodeColumn {
                get {
                    return this.columnSampleCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosisOnExamColumn {
                get {
                    return this.columnDiagnosisOnExam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCLForOutPatientColumn {
                get {
                    return this.columnPCLForOutPatient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsExternalExamColumn {
                get {
                    return this.columnIsExternalExam;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MedSpecIDColumn {
                get {
                    return this.columnMedSpecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RequestedDoctorColumn {
                get {
                    return this.columnRequestedDoctor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamDateColumn {
                get {
                    return this.columnExamDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosisColumn {
                get {
                    return this.columnDiagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoctorCommentsColumn {
                get {
                    return this.columnDoctorComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MedSpecNameColumn {
                get {
                    return this.columnMedSpecName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgencyNameColumn {
                get {
                    return this.columnAgencyName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LaboratorianNameColumn {
                get {
                    return this.columnLaboratorianName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetHeaderInfoRow this[int index] {
                get {
                    return ((spRpt_PatientPCLLabResults_GetHeaderInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEventHandler spRpt_PatientPCLLabResults_GetHeaderInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEventHandler spRpt_PatientPCLLabResults_GetHeaderInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEventHandler spRpt_PatientPCLLabResults_GetHeaderInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEventHandler spRpt_PatientPCLLabResults_GetHeaderInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspRpt_PatientPCLLabResults_GetHeaderInfoRow(spRpt_PatientPCLLabResults_GetHeaderInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetHeaderInfoRow AddspRpt_PatientPCLLabResults_GetHeaderInfoRow(
                        long PCLExtRefID, 
                        spRpt_PatientPCLRequest_GetHeaderInfoByIDRow parentspRpt_PatientPCLRequest_GetHeaderInfoByIDRowByspRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInfo, 
                        long StaffID, 
                        long AgencyID, 
                        System.DateTime SamplingDate, 
                        string SampleCode, 
                        string DiagnosisOnExam, 
                        bool PCLForOutPatient, 
                        bool IsExternalExam, 
                        long MedSpecID, 
                        string RequestedDoctor, 
                        System.DateTime ExamDate, 
                        string Diagnosis, 
                        string DoctorComments, 
                        string MedSpecName, 
                        string AgencyName, 
                        string LaboratorianName) {
                spRpt_PatientPCLLabResults_GetHeaderInfoRow rowspRpt_PatientPCLLabResults_GetHeaderInfoRow = ((spRpt_PatientPCLLabResults_GetHeaderInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PCLExtRefID,
                        null,
                        StaffID,
                        AgencyID,
                        SamplingDate,
                        SampleCode,
                        DiagnosisOnExam,
                        PCLForOutPatient,
                        IsExternalExam,
                        MedSpecID,
                        RequestedDoctor,
                        ExamDate,
                        Diagnosis,
                        DoctorComments,
                        MedSpecName,
                        AgencyName,
                        LaboratorianName};
                if ((parentspRpt_PatientPCLRequest_GetHeaderInfoByIDRowByspRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInfo != null)) {
                    columnValuesArray[2] = parentspRpt_PatientPCLRequest_GetHeaderInfoByIDRowByspRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInfo[0];
                }
                rowspRpt_PatientPCLLabResults_GetHeaderInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRpt_PatientPCLLabResults_GetHeaderInfoRow);
                return rowspRpt_PatientPCLLabResults_GetHeaderInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetHeaderInfoRow FindByLabResultID(long LabResultID) {
                return ((spRpt_PatientPCLLabResults_GetHeaderInfoRow)(this.Rows.Find(new object[] {
                            LabResultID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRpt_PatientPCLLabResults_GetHeaderInfoDataTable cln = ((spRpt_PatientPCLLabResults_GetHeaderInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRpt_PatientPCLLabResults_GetHeaderInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLabResultID = base.Columns["LabResultID"];
                this.columnPCLExtRefID = base.Columns["PCLExtRefID"];
                this.columnPatientPCLReqID = base.Columns["PatientPCLReqID"];
                this.columnStaffID = base.Columns["StaffID"];
                this.columnAgencyID = base.Columns["AgencyID"];
                this.columnSamplingDate = base.Columns["SamplingDate"];
                this.columnSampleCode = base.Columns["SampleCode"];
                this.columnDiagnosisOnExam = base.Columns["DiagnosisOnExam"];
                this.columnPCLForOutPatient = base.Columns["PCLForOutPatient"];
                this.columnIsExternalExam = base.Columns["IsExternalExam"];
                this.columnMedSpecID = base.Columns["MedSpecID"];
                this.columnRequestedDoctor = base.Columns["RequestedDoctor"];
                this.columnExamDate = base.Columns["ExamDate"];
                this.columnDiagnosis = base.Columns["Diagnosis"];
                this.columnDoctorComments = base.Columns["DoctorComments"];
                this.columnMedSpecName = base.Columns["MedSpecName"];
                this.columnAgencyName = base.Columns["AgencyName"];
                this.columnLaboratorianName = base.Columns["LaboratorianName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLabResultID = new global::System.Data.DataColumn("LabResultID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabResultID);
                this.columnPCLExtRefID = new global::System.Data.DataColumn("PCLExtRefID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCLExtRefID);
                this.columnPatientPCLReqID = new global::System.Data.DataColumn("PatientPCLReqID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientPCLReqID);
                this.columnStaffID = new global::System.Data.DataColumn("StaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID);
                this.columnAgencyID = new global::System.Data.DataColumn("AgencyID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgencyID);
                this.columnSamplingDate = new global::System.Data.DataColumn("SamplingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSamplingDate);
                this.columnSampleCode = new global::System.Data.DataColumn("SampleCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSampleCode);
                this.columnDiagnosisOnExam = new global::System.Data.DataColumn("DiagnosisOnExam", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosisOnExam);
                this.columnPCLForOutPatient = new global::System.Data.DataColumn("PCLForOutPatient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCLForOutPatient);
                this.columnIsExternalExam = new global::System.Data.DataColumn("IsExternalExam", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExternalExam);
                this.columnMedSpecID = new global::System.Data.DataColumn("MedSpecID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedSpecID);
                this.columnRequestedDoctor = new global::System.Data.DataColumn("RequestedDoctor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestedDoctor);
                this.columnExamDate = new global::System.Data.DataColumn("ExamDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamDate);
                this.columnDiagnosis = new global::System.Data.DataColumn("Diagnosis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosis);
                this.columnDoctorComments = new global::System.Data.DataColumn("DoctorComments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctorComments);
                this.columnMedSpecName = new global::System.Data.DataColumn("MedSpecName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedSpecName);
                this.columnAgencyName = new global::System.Data.DataColumn("AgencyName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgencyName);
                this.columnLaboratorianName = new global::System.Data.DataColumn("LaboratorianName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLaboratorianName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLabResultID}, true));
                this.columnLabResultID.AutoIncrement = true;
                this.columnLabResultID.AllowDBNull = false;
                this.columnLabResultID.ReadOnly = true;
                this.columnLabResultID.Unique = true;
                this.columnSamplingDate.AllowDBNull = false;
                this.columnSampleCode.MaxLength = 15;
                this.columnDiagnosisOnExam.MaxLength = 512;
                this.columnRequestedDoctor.ReadOnly = true;
                this.columnRequestedDoctor.MaxLength = 65;
                this.columnExamDate.ReadOnly = true;
                this.columnDiagnosis.AllowDBNull = false;
                this.columnDiagnosis.MaxLength = 512;
                this.columnDoctorComments.MaxLength = 255;
                this.columnMedSpecName.AllowDBNull = false;
                this.columnMedSpecName.MaxLength = 80;
                this.columnAgencyName.ReadOnly = true;
                this.columnAgencyName.MaxLength = 255;
                this.columnLaboratorianName.ReadOnly = true;
                this.columnLaboratorianName.MaxLength = 65;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetHeaderInfoRow NewspRpt_PatientPCLLabResults_GetHeaderInfoRow() {
                return ((spRpt_PatientPCLLabResults_GetHeaderInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRpt_PatientPCLLabResults_GetHeaderInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRpt_PatientPCLLabResults_GetHeaderInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRpt_PatientPCLLabResults_GetHeaderInfoRowChanged != null)) {
                    this.spRpt_PatientPCLLabResults_GetHeaderInfoRowChanged(this, new spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEvent(((spRpt_PatientPCLLabResults_GetHeaderInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRpt_PatientPCLLabResults_GetHeaderInfoRowChanging != null)) {
                    this.spRpt_PatientPCLLabResults_GetHeaderInfoRowChanging(this, new spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEvent(((spRpt_PatientPCLLabResults_GetHeaderInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRpt_PatientPCLLabResults_GetHeaderInfoRowDeleted != null)) {
                    this.spRpt_PatientPCLLabResults_GetHeaderInfoRowDeleted(this, new spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEvent(((spRpt_PatientPCLLabResults_GetHeaderInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRpt_PatientPCLLabResults_GetHeaderInfoRowDeleting != null)) {
                    this.spRpt_PatientPCLLabResults_GetHeaderInfoRowDeleting(this, new spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEvent(((spRpt_PatientPCLLabResults_GetHeaderInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespRpt_PatientPCLLabResults_GetHeaderInfoRow(spRpt_PatientPCLLabResults_GetHeaderInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPtPCLLabResult ds = new dsPtPCLLabResult();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRpt_PatientPCLLabResults_GetHeaderInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spRpt_PatientPCLLabResults_GetDetailsInfoDataTable : global::System.Data.TypedTableBase<spRpt_PatientPCLLabResults_GetDetailsInfoRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnLabResultID;
            
            private global::System.Data.DataColumn columnLabResultDetailID;
            
            private global::System.Data.DataColumn columnPCLExamTypeID;
            
            private global::System.Data.DataColumn columnPCLExamGroupName;
            
            private global::System.Data.DataColumn columnPCLExamSectionName;
            
            private global::System.Data.DataColumn columnPCLExamTypeName;
            
            private global::System.Data.DataColumn columnMeasurementUnit;
            
            private global::System.Data.DataColumn columnSlidingScale;
            
            private global::System.Data.DataColumn columnValue;
            
            private global::System.Data.DataColumn columnIsNormal;
            
            private global::System.Data.DataColumn columnNumberOfTest;
            
            private global::System.Data.DataColumn columnComments;
            
            private global::System.Data.DataColumn columnSamplingDate;
            
            private global::System.Data.DataColumn columnHistory;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetDetailsInfoDataTable() {
                this.TableName = "spRpt_PatientPCLLabResults_GetDetailsInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRpt_PatientPCLLabResults_GetDetailsInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spRpt_PatientPCLLabResults_GetDetailsInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabResultIDColumn {
                get {
                    return this.columnLabResultID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LabResultDetailIDColumn {
                get {
                    return this.columnLabResultDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCLExamTypeIDColumn {
                get {
                    return this.columnPCLExamTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCLExamGroupNameColumn {
                get {
                    return this.columnPCLExamGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCLExamSectionNameColumn {
                get {
                    return this.columnPCLExamSectionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCLExamTypeNameColumn {
                get {
                    return this.columnPCLExamTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MeasurementUnitColumn {
                get {
                    return this.columnMeasurementUnit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SlidingScaleColumn {
                get {
                    return this.columnSlidingScale;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValueColumn {
                get {
                    return this.columnValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsNormalColumn {
                get {
                    return this.columnIsNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfTestColumn {
                get {
                    return this.columnNumberOfTest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommentsColumn {
                get {
                    return this.columnComments;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SamplingDateColumn {
                get {
                    return this.columnSamplingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HistoryColumn {
                get {
                    return this.columnHistory;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetDetailsInfoRow this[int index] {
                get {
                    return ((spRpt_PatientPCLLabResults_GetDetailsInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEventHandler spRpt_PatientPCLLabResults_GetDetailsInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEventHandler spRpt_PatientPCLLabResults_GetDetailsInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEventHandler spRpt_PatientPCLLabResults_GetDetailsInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEventHandler spRpt_PatientPCLLabResults_GetDetailsInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspRpt_PatientPCLLabResults_GetDetailsInfoRow(spRpt_PatientPCLLabResults_GetDetailsInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetDetailsInfoRow AddspRpt_PatientPCLLabResults_GetDetailsInfoRow(long PatientID, spRpt_PatientPCLLabResults_GetHeaderInfoRow parentspRpt_PatientPCLLabResults_GetHeaderInfoRowByspRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInfo, long LabResultDetailID, long PCLExamTypeID, string PCLExamGroupName, string PCLExamSectionName, string PCLExamTypeName, string MeasurementUnit, string SlidingScale, string Value, bool IsNormal, byte NumberOfTest, string Comments, System.DateTime SamplingDate, System.DateTime History) {
                spRpt_PatientPCLLabResults_GetDetailsInfoRow rowspRpt_PatientPCLLabResults_GetDetailsInfoRow = ((spRpt_PatientPCLLabResults_GetDetailsInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        null,
                        LabResultDetailID,
                        PCLExamTypeID,
                        PCLExamGroupName,
                        PCLExamSectionName,
                        PCLExamTypeName,
                        MeasurementUnit,
                        SlidingScale,
                        Value,
                        IsNormal,
                        NumberOfTest,
                        Comments,
                        SamplingDate,
                        History};
                if ((parentspRpt_PatientPCLLabResults_GetHeaderInfoRowByspRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInfo != null)) {
                    columnValuesArray[1] = parentspRpt_PatientPCLLabResults_GetHeaderInfoRowByspRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInfo[0];
                }
                rowspRpt_PatientPCLLabResults_GetDetailsInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspRpt_PatientPCLLabResults_GetDetailsInfoRow);
                return rowspRpt_PatientPCLLabResults_GetDetailsInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetDetailsInfoRow FindByLabResultDetailID(long LabResultDetailID) {
                return ((spRpt_PatientPCLLabResults_GetDetailsInfoRow)(this.Rows.Find(new object[] {
                            LabResultDetailID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spRpt_PatientPCLLabResults_GetDetailsInfoDataTable cln = ((spRpt_PatientPCLLabResults_GetDetailsInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spRpt_PatientPCLLabResults_GetDetailsInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnLabResultID = base.Columns["LabResultID"];
                this.columnLabResultDetailID = base.Columns["LabResultDetailID"];
                this.columnPCLExamTypeID = base.Columns["PCLExamTypeID"];
                this.columnPCLExamGroupName = base.Columns["PCLExamGroupName"];
                this.columnPCLExamSectionName = base.Columns["PCLExamSectionName"];
                this.columnPCLExamTypeName = base.Columns["PCLExamTypeName"];
                this.columnMeasurementUnit = base.Columns["MeasurementUnit"];
                this.columnSlidingScale = base.Columns["SlidingScale"];
                this.columnValue = base.Columns["Value"];
                this.columnIsNormal = base.Columns["IsNormal"];
                this.columnNumberOfTest = base.Columns["NumberOfTest"];
                this.columnComments = base.Columns["Comments"];
                this.columnSamplingDate = base.Columns["SamplingDate"];
                this.columnHistory = base.Columns["History"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnLabResultID = new global::System.Data.DataColumn("LabResultID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabResultID);
                this.columnLabResultDetailID = new global::System.Data.DataColumn("LabResultDetailID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLabResultDetailID);
                this.columnPCLExamTypeID = new global::System.Data.DataColumn("PCLExamTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCLExamTypeID);
                this.columnPCLExamGroupName = new global::System.Data.DataColumn("PCLExamGroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCLExamGroupName);
                this.columnPCLExamSectionName = new global::System.Data.DataColumn("PCLExamSectionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCLExamSectionName);
                this.columnPCLExamTypeName = new global::System.Data.DataColumn("PCLExamTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCLExamTypeName);
                this.columnMeasurementUnit = new global::System.Data.DataColumn("MeasurementUnit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMeasurementUnit);
                this.columnSlidingScale = new global::System.Data.DataColumn("SlidingScale", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSlidingScale);
                this.columnValue = new global::System.Data.DataColumn("Value", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValue);
                this.columnIsNormal = new global::System.Data.DataColumn("IsNormal", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNormal);
                this.columnNumberOfTest = new global::System.Data.DataColumn("NumberOfTest", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfTest);
                this.columnComments = new global::System.Data.DataColumn("Comments", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComments);
                this.columnSamplingDate = new global::System.Data.DataColumn("SamplingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSamplingDate);
                this.columnHistory = new global::System.Data.DataColumn("History", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHistory);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLabResultDetailID}, true));
                this.columnPatientID.ReadOnly = true;
                this.columnLabResultID.ReadOnly = true;
                this.columnLabResultDetailID.AllowDBNull = false;
                this.columnLabResultDetailID.ReadOnly = true;
                this.columnLabResultDetailID.Unique = true;
                this.columnPCLExamTypeID.ReadOnly = true;
                this.columnMeasurementUnit.ReadOnly = true;
                this.columnMeasurementUnit.MaxLength = 20;
                this.columnSlidingScale.ReadOnly = true;
                this.columnSlidingScale.MaxLength = 20;
                this.columnValue.ReadOnly = true;
                this.columnValue.MaxLength = 15;
                this.columnIsNormal.ReadOnly = true;
                this.columnNumberOfTest.ReadOnly = true;
                this.columnComments.ReadOnly = true;
                this.columnComments.MaxLength = 64;
                this.columnSamplingDate.ReadOnly = true;
                this.columnHistory.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetDetailsInfoRow NewspRpt_PatientPCLLabResults_GetDetailsInfoRow() {
                return ((spRpt_PatientPCLLabResults_GetDetailsInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spRpt_PatientPCLLabResults_GetDetailsInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spRpt_PatientPCLLabResults_GetDetailsInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spRpt_PatientPCLLabResults_GetDetailsInfoRowChanged != null)) {
                    this.spRpt_PatientPCLLabResults_GetDetailsInfoRowChanged(this, new spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEvent(((spRpt_PatientPCLLabResults_GetDetailsInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spRpt_PatientPCLLabResults_GetDetailsInfoRowChanging != null)) {
                    this.spRpt_PatientPCLLabResults_GetDetailsInfoRowChanging(this, new spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEvent(((spRpt_PatientPCLLabResults_GetDetailsInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spRpt_PatientPCLLabResults_GetDetailsInfoRowDeleted != null)) {
                    this.spRpt_PatientPCLLabResults_GetDetailsInfoRowDeleted(this, new spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEvent(((spRpt_PatientPCLLabResults_GetDetailsInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spRpt_PatientPCLLabResults_GetDetailsInfoRowDeleting != null)) {
                    this.spRpt_PatientPCLLabResults_GetDetailsInfoRowDeleting(this, new spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEvent(((spRpt_PatientPCLLabResults_GetDetailsInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespRpt_PatientPCLLabResults_GetDetailsInfoRow(spRpt_PatientPCLLabResults_GetDetailsInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPtPCLLabResult ds = new dsPtPCLLabResult();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spRpt_PatientPCLLabResults_GetDetailsInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRpt_PatientPCLRequest_GetHeaderInfoByIDRow : global::System.Data.DataRow {
            
            private spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable tablespRpt_PatientPCLRequest_GetHeaderInfoByID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRpt_PatientPCLRequest_GetHeaderInfoByIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID = ((spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientPCLReqID {
                get {
                    return ((long)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientPCLReqIDColumn]));
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientPCLReqIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PCLFormID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PCLFormIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCLFormID\' in table \'spRpt_PatientPCLRequest_GetHeaderInfoB" +
                                "yID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PCLFormIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ServiceRecID {
                get {
                    return ((long)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ServiceRecIDColumn]));
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ServiceRecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientID {
                get {
                    return ((long)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientIDColumn]));
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NationalMedicalCode {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.NationalMedicalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NationalMedicalCode\' in table \'spRpt_PatientPCLRequest_GetH" +
                                "eaderInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.NationalMedicalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientEmployer {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientEmployerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientEmployer\' in table \'spRpt_PatientPCLRequest_GetHeade" +
                                "rInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientEmployerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientCode {
                get {
                    return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientCodeColumn]));
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientBarcode {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientBarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientBarcode\' in table \'spRpt_PatientPCLRequest_GetHeader" +
                                "InfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientBarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IDNumber {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.IDNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDNumber\' in table \'spRpt_PatientPCLRequest_GetHeaderInfoBy" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.IDNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FullNameColumn]));
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.GenderColumn]));
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'spRpt_PatientPCLRequest_GetHeaderInfoByID\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AgeOnly {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.AgeOnlyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOnly\' in table \'spRpt_PatientPCLRequest_GetHeaderInfoByI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.AgeOnlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateBecamePatient {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.DateBecamePatientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateBecamePatient\' in table \'spRpt_PatientPCLRequest_GetHea" +
                                "derInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.DateBecamePatientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientStreetAddress {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientStreetAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientStreetAddress\' in table \'spRpt_PatientPCLRequest_Get" +
                                "HeaderInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientStreetAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientSurburb {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientSurburbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientSurburb\' in table \'spRpt_PatientPCLRequest_GetHeader" +
                                "InfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientSurburbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientPhoneNumber\' in table \'spRpt_PatientPCLRequest_GetHe" +
                                "aderInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientCellPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientCellPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientCellPhoneNumber\' in table \'spRpt_PatientPCLRequest_G" +
                                "etHeaderInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientCellPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientEmailAddress {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientEmailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientEmailAddress\' in table \'spRpt_PatientPCLRequest_GetH" +
                                "eaderInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientEmailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientOccupation {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientOccupationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientOccupation\' in table \'spRpt_PatientPCLRequest_GetHea" +
                                "derInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientOccupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FContactFullName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactFullName\' in table \'spRpt_PatientPCLRequest_GetHead" +
                                "erInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FContactAddress {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactAddress\' in table \'spRpt_PatientPCLRequest_GetHeade" +
                                "rInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FContactHomePhone {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactHomePhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactHomePhone\' in table \'spRpt_PatientPCLRequest_GetHea" +
                                "derInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactHomePhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FContactBusinessPhone {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactBusinessPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactBusinessPhone\' in table \'spRpt_PatientPCLRequest_Ge" +
                                "tHeaderInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactBusinessPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FContactCellPhone {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactCellPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactCellPhone\' in table \'spRpt_PatientPCLRequest_GetHea" +
                                "derInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactCellPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ethnic {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.EthnicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ethnic\' in table \'spRpt_PatientPCLRequest_GetHeaderInfoByID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.EthnicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MaritalStatus {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaritalStatus\' in table \'spRpt_PatientPCLRequest_GetHeaderI" +
                                "nfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FamilyRelationship {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FamilyRelationshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyRelationship\' in table \'spRpt_PatientPCLRequest_GetHe" +
                                "aderInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FamilyRelationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long HIID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HIIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIID\' in table \'spRpt_PatientPCLRequest_GetHeaderInfoByID\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HIIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientID1 {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientID1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientID1\' in table \'spRpt_PatientPCLRequest_GetHeaderInfo" +
                                "ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientID1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IBID {
                get {
                    try {
                        return ((int)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.IBIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IBID\' in table \'spRpt_PatientPCLRequest_GetHeaderInfoByID\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.IBIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HIPCode {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HIPCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIPCode\' in table \'spRpt_PatientPCLRequest_GetHeaderInfoByI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HIPCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HICardNo {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HICardNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HICardNo\' in table \'spRpt_PatientPCLRequest_GetHeaderInfoBy" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HICardNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RegistrationCode {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.RegistrationCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegistrationCode\' in table \'spRpt_PatientPCLRequest_GetHead" +
                                "erInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.RegistrationCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RegistrationLocation {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.RegistrationLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegistrationLocation\' in table \'spRpt_PatientPCLRequest_Get" +
                                "HeaderInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.RegistrationLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ValidDateFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ValidDateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValidDateFrom\' in table \'spRpt_PatientPCLRequest_GetHeaderI" +
                                "nfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ValidDateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ValidDateTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ValidDateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValidDateTo\' in table \'spRpt_PatientPCLRequest_GetHeaderInf" +
                                "oByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ValidDateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool EditLocked {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.EditLockedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EditLocked\' in table \'spRpt_PatientPCLRequest_GetHeaderInfo" +
                                "ByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.EditLockedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool InvalidFlag {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.InvalidFlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvalidFlag\' in table \'spRpt_PatientPCLRequest_GetHeaderInf" +
                                "oByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.InvalidFlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CityProvinceName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.CityProvinceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityProvinceName\' in table \'spRpt_PatientPCLRequest_GetHead" +
                                "erInfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.CityProvinceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReqDoctorName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ReqDoctorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqDoctorName\' in table \'spRpt_PatientPCLRequest_GetHeaderI" +
                                "nfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ReqDoctorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReqDoctorPhone {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ReqDoctorPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqDoctorPhone\' in table \'spRpt_PatientPCLRequest_GetHeader" +
                                "InfoByID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ReqDoctorPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCLFormIDNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PCLFormIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCLFormIDNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PCLFormIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNationalMedicalCodeNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.NationalMedicalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNationalMedicalCodeNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.NationalMedicalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientEmployerNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientEmployerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientEmployerNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientEmployerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientBarcodeNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientBarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientBarcodeNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientBarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDNumberNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.IDNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDNumberNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.IDNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOBNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOBNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeOnlyNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.AgeOnlyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeOnlyNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.AgeOnlyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateBecamePatientNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.DateBecamePatientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateBecamePatientNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.DateBecamePatientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientStreetAddressNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientStreetAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientStreetAddressNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientStreetAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientSurburbNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientSurburbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientSurburbNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientSurburbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientPhoneNumberNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientPhoneNumberNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientCellPhoneNumberNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientCellPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientCellPhoneNumberNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientCellPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientEmailAddressNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientEmailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientEmailAddressNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientEmailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientOccupationNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientOccupationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientOccupationNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientOccupationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFContactFullNameNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFContactFullNameNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFContactAddressNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFContactAddressNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFContactHomePhoneNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactHomePhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFContactHomePhoneNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactHomePhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFContactBusinessPhoneNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactBusinessPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFContactBusinessPhoneNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactBusinessPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFContactCellPhoneNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactCellPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFContactCellPhoneNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FContactCellPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEthnicNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.EthnicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEthnicNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.EthnicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaritalStatusNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaritalStatusNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFamilyRelationshipNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FamilyRelationshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFamilyRelationshipNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.FamilyRelationshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIIDNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HIIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIIDNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HIIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientID1Null() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientID1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientID1Null() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.PatientID1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIBIDNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.IBIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIBIDNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.IBIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIPCodeNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HIPCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIPCodeNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HIPCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHICardNoNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HICardNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHICardNoNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.HICardNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegistrationCodeNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.RegistrationCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegistrationCodeNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.RegistrationCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegistrationLocationNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.RegistrationLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegistrationLocationNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.RegistrationLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValidDateFromNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ValidDateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValidDateFromNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ValidDateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValidDateToNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ValidDateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValidDateToNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ValidDateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEditLockedNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.EditLockedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEditLockedNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.EditLockedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvalidFlagNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.InvalidFlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvalidFlagNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.InvalidFlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityProvinceNameNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.CityProvinceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityProvinceNameNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.CityProvinceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqDoctorNameNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ReqDoctorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqDoctorNameNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ReqDoctorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqDoctorPhoneNull() {
                return this.IsNull(this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ReqDoctorPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqDoctorPhoneNull() {
                this[this.tablespRpt_PatientPCLRequest_GetHeaderInfoByID.ReqDoctorPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetHeaderInfoRow[] GetspRpt_PatientPCLLabResults_GetHeaderInfoRows() {
                if ((this.Table.ChildRelations["spRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInf" +
                    "o"] == null)) {
                    return new spRpt_PatientPCLLabResults_GetHeaderInfoRow[0];
                }
                else {
                    return ((spRpt_PatientPCLLabResults_GetHeaderInfoRow[])(base.GetChildRows(this.Table.ChildRelations["spRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInf" +
                            "o"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRpt_PatientPCLLabResults_GetHeaderInfoRow : global::System.Data.DataRow {
            
            private spRpt_PatientPCLLabResults_GetHeaderInfoDataTable tablespRpt_PatientPCLLabResults_GetHeaderInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRpt_PatientPCLLabResults_GetHeaderInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRpt_PatientPCLLabResults_GetHeaderInfo = ((spRpt_PatientPCLLabResults_GetHeaderInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long LabResultID {
                get {
                    return ((long)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.LabResultIDColumn]));
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.LabResultIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PCLExtRefID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PCLExtRefIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCLExtRefID\' in table \'spRpt_PatientPCLLabResults_GetHeader" +
                                "Info\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PCLExtRefIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientPCLReqID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PatientPCLReqIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientPCLReqID\' in table \'spRpt_PatientPCLLabResults_GetHe" +
                                "aderInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PatientPCLReqIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long StaffID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.StaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffID\' in table \'spRpt_PatientPCLLabResults_GetHeaderInfo" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.StaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AgencyID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.AgencyIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgencyID\' in table \'spRpt_PatientPCLLabResults_GetHeaderInf" +
                                "o\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.AgencyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SamplingDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.SamplingDateColumn]));
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.SamplingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SampleCode {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.SampleCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SampleCode\' in table \'spRpt_PatientPCLLabResults_GetHeaderI" +
                                "nfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.SampleCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DiagnosisOnExam {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.DiagnosisOnExamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosisOnExam\' in table \'spRpt_PatientPCLLabResults_GetHe" +
                                "aderInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.DiagnosisOnExamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PCLForOutPatient {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PCLForOutPatientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCLForOutPatient\' in table \'spRpt_PatientPCLLabResults_GetH" +
                                "eaderInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PCLForOutPatientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExternalExam {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.IsExternalExamColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExternalExam\' in table \'spRpt_PatientPCLLabResults_GetHea" +
                                "derInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.IsExternalExamColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MedSpecID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.MedSpecIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedSpecID\' in table \'spRpt_PatientPCLLabResults_GetHeaderIn" +
                                "fo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.MedSpecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RequestedDoctor {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.RequestedDoctorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestedDoctor\' in table \'spRpt_PatientPCLLabResults_GetHe" +
                                "aderInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.RequestedDoctorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExamDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.ExamDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamDate\' in table \'spRpt_PatientPCLLabResults_GetHeaderInf" +
                                "o\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.ExamDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Diagnosis {
                get {
                    return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.DiagnosisColumn]));
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.DiagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DoctorComments {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.DoctorCommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoctorComments\' in table \'spRpt_PatientPCLLabResults_GetHea" +
                                "derInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.DoctorCommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MedSpecName {
                get {
                    return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.MedSpecNameColumn]));
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.MedSpecNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AgencyName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.AgencyNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgencyName\' in table \'spRpt_PatientPCLLabResults_GetHeaderI" +
                                "nfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.AgencyNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LaboratorianName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.LaboratorianNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LaboratorianName\' in table \'spRpt_PatientPCLLabResults_GetH" +
                                "eaderInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.LaboratorianNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLRequest_GetHeaderInfoByIDRow spRpt_PatientPCLRequest_GetHeaderInfoByIDRow {
                get {
                    return ((spRpt_PatientPCLRequest_GetHeaderInfoByIDRow)(this.GetParentRow(this.Table.ParentRelations["spRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInf" +
                            "o"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["spRpt_PatientPCLRequest_GetHeaderInfoByID_spRpt_PatientPCLLabResults_GetHeaderInf" +
                            "o"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCLExtRefIDNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PCLExtRefIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCLExtRefIDNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PCLExtRefIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientPCLReqIDNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PatientPCLReqIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientPCLReqIDNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PatientPCLReqIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStaffIDNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.StaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStaffIDNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.StaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgencyIDNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.AgencyIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgencyIDNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.AgencyIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSampleCodeNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.SampleCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSampleCodeNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.SampleCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiagnosisOnExamNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.DiagnosisOnExamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiagnosisOnExamNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.DiagnosisOnExamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCLForOutPatientNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PCLForOutPatientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCLForOutPatientNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.PCLForOutPatientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsExternalExamNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.IsExternalExamColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsExternalExamNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.IsExternalExamColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMedSpecIDNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.MedSpecIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMedSpecIDNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.MedSpecIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRequestedDoctorNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.RequestedDoctorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRequestedDoctorNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.RequestedDoctorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExamDateNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.ExamDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExamDateNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.ExamDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDoctorCommentsNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.DoctorCommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDoctorCommentsNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.DoctorCommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgencyNameNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.AgencyNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgencyNameNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.AgencyNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLaboratorianNameNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.LaboratorianNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLaboratorianNameNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetHeaderInfo.LaboratorianNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetDetailsInfoRow[] GetspRpt_PatientPCLLabResults_GetDetailsInfoRows() {
                if ((this.Table.ChildRelations["spRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInf" +
                    "o"] == null)) {
                    return new spRpt_PatientPCLLabResults_GetDetailsInfoRow[0];
                }
                else {
                    return ((spRpt_PatientPCLLabResults_GetDetailsInfoRow[])(base.GetChildRows(this.Table.ChildRelations["spRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInf" +
                            "o"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spRpt_PatientPCLLabResults_GetDetailsInfoRow : global::System.Data.DataRow {
            
            private spRpt_PatientPCLLabResults_GetDetailsInfoDataTable tablespRpt_PatientPCLLabResults_GetDetailsInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spRpt_PatientPCLLabResults_GetDetailsInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespRpt_PatientPCLLabResults_GetDetailsInfo = ((spRpt_PatientPCLLabResults_GetDetailsInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PatientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientID\' in table \'spRpt_PatientPCLLabResults_GetDetailsI" +
                                "nfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long LabResultID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.LabResultIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LabResultID\' in table \'spRpt_PatientPCLLabResults_GetDetail" +
                                "sInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.LabResultIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long LabResultDetailID {
                get {
                    return ((long)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.LabResultDetailIDColumn]));
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.LabResultDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PCLExamTypeID {
                get {
                    try {
                        return ((long)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCLExamTypeID\' in table \'spRpt_PatientPCLLabResults_GetDeta" +
                                "ilsInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCLExamGroupName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamGroupNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCLExamGroupName\' in table \'spRpt_PatientPCLLabResults_GetD" +
                                "etailsInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamGroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCLExamSectionName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamSectionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCLExamSectionName\' in table \'spRpt_PatientPCLLabResults_Ge" +
                                "tDetailsInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamSectionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCLExamTypeName {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCLExamTypeName\' in table \'spRpt_PatientPCLLabResults_GetDe" +
                                "tailsInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MeasurementUnit {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.MeasurementUnitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MeasurementUnit\' in table \'spRpt_PatientPCLLabResults_GetDe" +
                                "tailsInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.MeasurementUnitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SlidingScale {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.SlidingScaleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SlidingScale\' in table \'spRpt_PatientPCLLabResults_GetDetai" +
                                "lsInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.SlidingScaleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Value {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Value\' in table \'spRpt_PatientPCLLabResults_GetDetailsInfo\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNormal {
                get {
                    try {
                        return ((bool)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.IsNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsNormal\' in table \'spRpt_PatientPCLLabResults_GetDetailsIn" +
                                "fo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.IsNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte NumberOfTest {
                get {
                    try {
                        return ((byte)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.NumberOfTestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfTest\' in table \'spRpt_PatientPCLLabResults_GetDetai" +
                                "lsInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.NumberOfTestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Comments {
                get {
                    try {
                        return ((string)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.CommentsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comments\' in table \'spRpt_PatientPCLLabResults_GetDetailsIn" +
                                "fo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.CommentsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SamplingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.SamplingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SamplingDate\' in table \'spRpt_PatientPCLLabResults_GetDetai" +
                                "lsInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.SamplingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime History {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.HistoryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'History\' in table \'spRpt_PatientPCLLabResults_GetDetailsInf" +
                                "o\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.HistoryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetHeaderInfoRow spRpt_PatientPCLLabResults_GetHeaderInfoRow {
                get {
                    return ((spRpt_PatientPCLLabResults_GetHeaderInfoRow)(this.GetParentRow(this.Table.ParentRelations["spRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInf" +
                            "o"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["spRpt_PatientPCLLabResults_GetHeaderInfo_spRpt_PatientPCLLabResults_GetDetailsInf" +
                            "o"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientIDNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PatientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientIDNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PatientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLabResultIDNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.LabResultIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLabResultIDNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.LabResultIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCLExamTypeIDNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCLExamTypeIDNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCLExamGroupNameNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamGroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCLExamGroupNameNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamGroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCLExamSectionNameNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamSectionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCLExamSectionNameNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamSectionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCLExamTypeNameNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCLExamTypeNameNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.PCLExamTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMeasurementUnitNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.MeasurementUnitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMeasurementUnitNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.MeasurementUnitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSlidingScaleNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.SlidingScaleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSlidingScaleNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.SlidingScaleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValueNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValueNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsNormalNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.IsNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsNormalNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.IsNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfTestNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.NumberOfTestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfTestNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.NumberOfTestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommentsNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.CommentsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommentsNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.CommentsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSamplingDateNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.SamplingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSamplingDateNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.SamplingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHistoryNull() {
                return this.IsNull(this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.HistoryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHistoryNull() {
                this[this.tablespRpt_PatientPCLLabResults_GetDetailsInfo.HistoryColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEvent : global::System.EventArgs {
            
            private spRpt_PatientPCLRequest_GetHeaderInfoByIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLRequest_GetHeaderInfoByIDRowChangeEvent(spRpt_PatientPCLRequest_GetHeaderInfoByIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLRequest_GetHeaderInfoByIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEvent : global::System.EventArgs {
            
            private spRpt_PatientPCLLabResults_GetHeaderInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetHeaderInfoRowChangeEvent(spRpt_PatientPCLLabResults_GetHeaderInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetHeaderInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEvent : global::System.EventArgs {
            
            private spRpt_PatientPCLLabResults_GetDetailsInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetDetailsInfoRowChangeEvent(spRpt_PatientPCLLabResults_GetDetailsInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spRpt_PatientPCLLabResults_GetDetailsInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace eHCMS.ReportLib.RptConsultations.DataSchema.dsPtPCLLabResultTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PtPCLReq_PatientInfo_TblAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PtPCLReq_PatientInfo_TblAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRpt_PatientPCLRequest_GetHeaderInfoByID";
            tableMapping.ColumnMappings.Add("PatientPCLReqID", "PatientPCLReqID");
            tableMapping.ColumnMappings.Add("PCLFormID", "PCLFormID");
            tableMapping.ColumnMappings.Add("ServiceRecID", "ServiceRecID");
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("NationalMedicalCode", "NationalMedicalCode");
            tableMapping.ColumnMappings.Add("PatientEmployer", "PatientEmployer");
            tableMapping.ColumnMappings.Add("PatientCode", "PatientCode");
            tableMapping.ColumnMappings.Add("PatientBarcode", "PatientBarcode");
            tableMapping.ColumnMappings.Add("IDNumber", "IDNumber");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("AgeOnly", "AgeOnly");
            tableMapping.ColumnMappings.Add("DateBecamePatient", "DateBecamePatient");
            tableMapping.ColumnMappings.Add("PatientStreetAddress", "PatientStreetAddress");
            tableMapping.ColumnMappings.Add("PatientSurburb", "PatientSurburb");
            tableMapping.ColumnMappings.Add("PatientPhoneNumber", "PatientPhoneNumber");
            tableMapping.ColumnMappings.Add("PatientCellPhoneNumber", "PatientCellPhoneNumber");
            tableMapping.ColumnMappings.Add("PatientEmailAddress", "PatientEmailAddress");
            tableMapping.ColumnMappings.Add("PatientOccupation", "PatientOccupation");
            tableMapping.ColumnMappings.Add("FContactFullName", "FContactFullName");
            tableMapping.ColumnMappings.Add("FContactAddress", "FContactAddress");
            tableMapping.ColumnMappings.Add("FContactHomePhone", "FContactHomePhone");
            tableMapping.ColumnMappings.Add("FContactBusinessPhone", "FContactBusinessPhone");
            tableMapping.ColumnMappings.Add("FContactCellPhone", "FContactCellPhone");
            tableMapping.ColumnMappings.Add("Ethnic", "Ethnic");
            tableMapping.ColumnMappings.Add("MaritalStatus", "MaritalStatus");
            tableMapping.ColumnMappings.Add("FamilyRelationship", "FamilyRelationship");
            tableMapping.ColumnMappings.Add("HIID", "HIID");
            tableMapping.ColumnMappings.Add("PatientID1", "PatientID1");
            tableMapping.ColumnMappings.Add("IBID", "IBID");
            tableMapping.ColumnMappings.Add("HIPCode", "HIPCode");
            tableMapping.ColumnMappings.Add("HICardNo", "HICardNo");
            tableMapping.ColumnMappings.Add("RegistrationCode", "RegistrationCode");
            tableMapping.ColumnMappings.Add("RegistrationLocation", "RegistrationLocation");
            tableMapping.ColumnMappings.Add("ValidDateFrom", "ValidDateFrom");
            tableMapping.ColumnMappings.Add("ValidDateTo", "ValidDateTo");
            tableMapping.ColumnMappings.Add("EditLocked", "EditLocked");
            tableMapping.ColumnMappings.Add("InvalidFlag", "InvalidFlag");
            tableMapping.ColumnMappings.Add("CityProvinceName", "CityProvinceName");
            tableMapping.ColumnMappings.Add("ReqDoctorName", "ReqDoctorName");
            tableMapping.ColumnMappings.Add("ReqDoctorPhone", "ReqDoctorPhone");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eHCMS_DBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRpt_PatientPCLRequest_GetHeaderInfoByID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientPCLReqID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPtPCLLabResult.spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable dataTable, global::System.Nullable<long> PatientPCLReqID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PatientPCLReqID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PatientPCLReqID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPtPCLLabResult.spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable GetData(global::System.Nullable<long> PatientPCLReqID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PatientPCLReqID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PatientPCLReqID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsPtPCLLabResult.spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable dataTable = new dsPtPCLLabResult.spRpt_PatientPCLRequest_GetHeaderInfoByIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PtPCLLabResults_HeaderInfo_TblAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PtPCLLabResults_HeaderInfo_TblAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRpt_PatientPCLLabResults_GetHeaderInfo";
            tableMapping.ColumnMappings.Add("LabResultID", "LabResultID");
            tableMapping.ColumnMappings.Add("PCLExtRefID", "PCLExtRefID");
            tableMapping.ColumnMappings.Add("PatientPCLReqID", "PatientPCLReqID");
            tableMapping.ColumnMappings.Add("StaffID", "StaffID");
            tableMapping.ColumnMappings.Add("AgencyID", "AgencyID");
            tableMapping.ColumnMappings.Add("SamplingDate", "SamplingDate");
            tableMapping.ColumnMappings.Add("SampleCode", "SampleCode");
            tableMapping.ColumnMappings.Add("DiagnosisOnExam", "DiagnosisOnExam");
            tableMapping.ColumnMappings.Add("PCLForOutPatient", "PCLForOutPatient");
            tableMapping.ColumnMappings.Add("IsExternalExam", "IsExternalExam");
            tableMapping.ColumnMappings.Add("MedSpecID", "MedSpecID");
            tableMapping.ColumnMappings.Add("RequestedDoctor", "RequestedDoctor");
            tableMapping.ColumnMappings.Add("ExamDate", "ExamDate");
            tableMapping.ColumnMappings.Add("Diagnosis", "Diagnosis");
            tableMapping.ColumnMappings.Add("DoctorComments", "DoctorComments");
            tableMapping.ColumnMappings.Add("MedSpecName", "MedSpecName");
            tableMapping.ColumnMappings.Add("AgencyName", "AgencyName");
            tableMapping.ColumnMappings.Add("LaboratorianName", "LaboratorianName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eHCMS_DBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRpt_PatientPCLLabResults_GetHeaderInfo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientPCLReqID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPtPCLLabResult.spRpt_PatientPCLLabResults_GetHeaderInfoDataTable dataTable, global::System.Nullable<long> PatientPCLReqID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PatientPCLReqID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PatientPCLReqID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPtPCLLabResult.spRpt_PatientPCLLabResults_GetHeaderInfoDataTable GetData(global::System.Nullable<long> PatientPCLReqID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PatientPCLReqID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PatientPCLReqID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsPtPCLLabResult.spRpt_PatientPCLLabResults_GetHeaderInfoDataTable dataTable = new dsPtPCLLabResult.spRpt_PatientPCLLabResults_GetHeaderInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PtPCLLabResults_GetDetailsInfo_TblAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public PtPCLLabResults_GetDetailsInfo_TblAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spRpt_PatientPCLLabResults_GetDetailsInfo";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("LabResultID", "LabResultID");
            tableMapping.ColumnMappings.Add("LabResultDetailID", "LabResultDetailID");
            tableMapping.ColumnMappings.Add("PCLExamTypeID", "PCLExamTypeID");
            tableMapping.ColumnMappings.Add("MeasurementUnit", "MeasurementUnit");
            tableMapping.ColumnMappings.Add("SlidingScale", "SlidingScale");
            tableMapping.ColumnMappings.Add("Value", "Value");
            tableMapping.ColumnMappings.Add("IsNormal", "IsNormal");
            tableMapping.ColumnMappings.Add("NumberOfTest", "NumberOfTest");
            tableMapping.ColumnMappings.Add("Comments", "Comments");
            tableMapping.ColumnMappings.Add("SamplingDate", "SamplingDate");
            tableMapping.ColumnMappings.Add("History", "History");
            tableMapping.ColumnMappings.Add("PCLExamTypeName", "PCLExamTypeName");
            tableMapping.ColumnMappings.Add("PCLExamGroupName", "PCLExamGroupName");
            tableMapping.ColumnMappings.Add("PCLExamSectionName", "PCLExamSectionName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["eHCMS_DBConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRpt_PatientPCLLabResults_GetDetailsInfo";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientPCLReqID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GetAllHistories", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 1, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPtPCLLabResult.spRpt_PatientPCLLabResults_GetDetailsInfoDataTable dataTable, global::System.Nullable<long> PatientPCLReqID, global::System.Nullable<bool> GetAllHistories) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PatientPCLReqID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PatientPCLReqID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((GetAllHistories.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(GetAllHistories.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPtPCLLabResult.spRpt_PatientPCLLabResults_GetDetailsInfoDataTable GetData(global::System.Nullable<long> PatientPCLReqID, global::System.Nullable<bool> GetAllHistories) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PatientPCLReqID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PatientPCLReqID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((GetAllHistories.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(GetAllHistories.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            dsPtPCLLabResult.spRpt_PatientPCLLabResults_GetDetailsInfoDataTable dataTable = new dsPtPCLLabResult.spRpt_PatientPCLLabResults_GetDetailsInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsPtPCLLabResult dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsPtPCLLabResult dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsPtPCLLabResult dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsPtPCLLabResult dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591