//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eHCMS.ReportLib.RptConsultations.DataSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsBangKeChiTietKhamBenh")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsBangKeChiTietKhamBenh : global::System.Data.DataSet {
        
        private spPatientRegistrationDetailsByRoomDataTable tablespPatientRegistrationDetailsByRoom;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsBangKeChiTietKhamBenh() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsBangKeChiTietKhamBenh(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spPatientRegistrationDetailsByRoom"] != null)) {
                    base.Tables.Add(new spPatientRegistrationDetailsByRoomDataTable(ds.Tables["spPatientRegistrationDetailsByRoom"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spPatientRegistrationDetailsByRoomDataTable spPatientRegistrationDetailsByRoom {
            get {
                return this.tablespPatientRegistrationDetailsByRoom;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsBangKeChiTietKhamBenh cln = ((dsBangKeChiTietKhamBenh)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spPatientRegistrationDetailsByRoom"] != null)) {
                    base.Tables.Add(new spPatientRegistrationDetailsByRoomDataTable(ds.Tables["spPatientRegistrationDetailsByRoom"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespPatientRegistrationDetailsByRoom = ((spPatientRegistrationDetailsByRoomDataTable)(base.Tables["spPatientRegistrationDetailsByRoom"]));
            if ((initTable == true)) {
                if ((this.tablespPatientRegistrationDetailsByRoom != null)) {
                    this.tablespPatientRegistrationDetailsByRoom.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsBangKeChiTietKhamBenh";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsBangKeChiTietKhamBenh.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespPatientRegistrationDetailsByRoom = new spPatientRegistrationDetailsByRoomDataTable();
            base.Tables.Add(this.tablespPatientRegistrationDetailsByRoom);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespPatientRegistrationDetailsByRoom() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsBangKeChiTietKhamBenh ds = new dsBangKeChiTietKhamBenh();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spPatientRegistrationDetailsByRoomRowChangeEventHandler(object sender, spPatientRegistrationDetailsByRoomRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spPatientRegistrationDetailsByRoomDataTable : global::System.Data.TypedTableBase<spPatientRegistrationDetailsByRoomRow> {
            
            private global::System.Data.DataColumn columnPtRegDetailID;
            
            private global::System.Data.DataColumn columnPtRegistrationID;
            
            private global::System.Data.DataColumn columnHisID;
            
            private global::System.Data.DataColumn columnDeptLocID;
            
            private global::System.Data.DataColumn columnStaffID;
            
            private global::System.Data.DataColumn columnMedServiceID;
            
            private global::System.Data.DataColumn columnHIBenefit;
            
            private global::System.Data.DataColumn columnPrice;
            
            private global::System.Data.DataColumn columnHIAllowedPrice;
            
            private global::System.Data.DataColumn columnAmount;
            
            private global::System.Data.DataColumn columnAmountCoPay;
            
            private global::System.Data.DataColumn columnPriceDifference;
            
            private global::System.Data.DataColumn columnTotalHIPayment;
            
            private global::System.Data.DataColumn columnServiceQty;
            
            private global::System.Data.DataColumn columnV_ExamRegStatus;
            
            private global::System.Data.DataColumn columnMarkedAsDeleted;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnPaidTime;
            
            private global::System.Data.DataColumn columnRefundTime;
            
            private global::System.Data.DataColumn columnInPatientBillingInvID;
            
            private global::System.Data.DataColumn columnServiceSeqNum;
            
            private global::System.Data.DataColumn columnServiceSeqNumType;
            
            private global::System.Data.DataColumn columnV_RegistrationStatus;
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnPatientCode;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnApptDate;
            
            private global::System.Data.DataColumn columnappServiceSeqNum;
            
            private global::System.Data.DataColumn columnObjectValue;
            
            private global::System.Data.DataColumn columnMedServiceName;
            
            private global::System.Data.DataColumn columnDoctorStaffID;
            
            private global::System.Data.DataColumn columnDiagnosis;
            
            private global::System.Data.DataColumn columnDiagnosisFinal;
            
            private global::System.Data.DataColumn columndoctorFullName;
            
            private global::System.Data.DataColumn columnServiceRecID;
            
            private global::System.Data.DataColumn columnPatientRecID;
            
            private global::System.Data.DataColumn columnExamDate;
            
            private global::System.Data.DataColumn columnV_ProcessingType;
            
            private global::System.Data.DataColumn columnV_Behaving;
            
            private global::System.Data.DataColumn columnDateModified;
            
            private global::System.Data.DataColumn columnLocationName;
            
            private global::System.Data.DataColumn columnBenhMoi;
            
            private global::System.Data.DataColumn columnV_RegistrationType;
            
            private global::System.Data.DataColumn columnNationalMedicalCode;
            
            private global::System.Data.DataColumn columnPatientStreetAddress;
            
            private global::System.Data.DataColumn columnIssuerDoctorFullName;
            
            private global::System.Data.DataColumn columnOrigCreatorDoctorNames;
            
            private global::System.Data.DataColumn columnAgeOnly;
            
            private global::System.Data.DataColumn columnIsHasHI;
            
            private global::System.Data.DataColumn columnICD10Code;
            
            private global::System.Data.DataColumn columnCityProvinceName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spPatientRegistrationDetailsByRoomDataTable() {
                this.TableName = "spPatientRegistrationDetailsByRoom";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spPatientRegistrationDetailsByRoomDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spPatientRegistrationDetailsByRoomDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PtRegDetailIDColumn {
                get {
                    return this.columnPtRegDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PtRegistrationIDColumn {
                get {
                    return this.columnPtRegistrationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HisIDColumn {
                get {
                    return this.columnHisID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeptLocIDColumn {
                get {
                    return this.columnDeptLocID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StaffIDColumn {
                get {
                    return this.columnStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MedServiceIDColumn {
                get {
                    return this.columnMedServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIBenefitColumn {
                get {
                    return this.columnHIBenefit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIAllowedPriceColumn {
                get {
                    return this.columnHIAllowedPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountColumn {
                get {
                    return this.columnAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AmountCoPayColumn {
                get {
                    return this.columnAmountCoPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriceDifferenceColumn {
                get {
                    return this.columnPriceDifference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalHIPaymentColumn {
                get {
                    return this.columnTotalHIPayment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceQtyColumn {
                get {
                    return this.columnServiceQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_ExamRegStatusColumn {
                get {
                    return this.columnV_ExamRegStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkedAsDeletedColumn {
                get {
                    return this.columnMarkedAsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaidTimeColumn {
                get {
                    return this.columnPaidTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefundTimeColumn {
                get {
                    return this.columnRefundTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InPatientBillingInvIDColumn {
                get {
                    return this.columnInPatientBillingInvID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceSeqNumColumn {
                get {
                    return this.columnServiceSeqNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceSeqNumTypeColumn {
                get {
                    return this.columnServiceSeqNumType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_RegistrationStatusColumn {
                get {
                    return this.columnV_RegistrationStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientCodeColumn {
                get {
                    return this.columnPatientCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ApptDateColumn {
                get {
                    return this.columnApptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appServiceSeqNumColumn {
                get {
                    return this.columnappServiceSeqNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObjectValueColumn {
                get {
                    return this.columnObjectValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MedServiceNameColumn {
                get {
                    return this.columnMedServiceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoctorStaffIDColumn {
                get {
                    return this.columnDoctorStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosisColumn {
                get {
                    return this.columnDiagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosisFinalColumn {
                get {
                    return this.columnDiagnosisFinal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn doctorFullNameColumn {
                get {
                    return this.columndoctorFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceRecIDColumn {
                get {
                    return this.columnServiceRecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientRecIDColumn {
                get {
                    return this.columnPatientRecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamDateColumn {
                get {
                    return this.columnExamDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_ProcessingTypeColumn {
                get {
                    return this.columnV_ProcessingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_BehavingColumn {
                get {
                    return this.columnV_Behaving;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifiedColumn {
                get {
                    return this.columnDateModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationNameColumn {
                get {
                    return this.columnLocationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BenhMoiColumn {
                get {
                    return this.columnBenhMoi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_RegistrationTypeColumn {
                get {
                    return this.columnV_RegistrationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NationalMedicalCodeColumn {
                get {
                    return this.columnNationalMedicalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientStreetAddressColumn {
                get {
                    return this.columnPatientStreetAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IssuerDoctorFullNameColumn {
                get {
                    return this.columnIssuerDoctorFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrigCreatorDoctorNamesColumn {
                get {
                    return this.columnOrigCreatorDoctorNames;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeOnlyColumn {
                get {
                    return this.columnAgeOnly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsHasHIColumn {
                get {
                    return this.columnIsHasHI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICD10CodeColumn {
                get {
                    return this.columnICD10Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityProvinceNameColumn {
                get {
                    return this.columnCityProvinceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spPatientRegistrationDetailsByRoomRow this[int index] {
                get {
                    return ((spPatientRegistrationDetailsByRoomRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spPatientRegistrationDetailsByRoomRowChangeEventHandler spPatientRegistrationDetailsByRoomRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spPatientRegistrationDetailsByRoomRowChangeEventHandler spPatientRegistrationDetailsByRoomRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spPatientRegistrationDetailsByRoomRowChangeEventHandler spPatientRegistrationDetailsByRoomRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spPatientRegistrationDetailsByRoomRowChangeEventHandler spPatientRegistrationDetailsByRoomRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspPatientRegistrationDetailsByRoomRow(spPatientRegistrationDetailsByRoomRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spPatientRegistrationDetailsByRoomRow AddspPatientRegistrationDetailsByRoomRow(
                        long PtRegistrationID, 
                        long HisID, 
                        long DeptLocID, 
                        long StaffID, 
                        long MedServiceID, 
                        double HIBenefit, 
                        decimal Price, 
                        decimal HIAllowedPrice, 
                        decimal Amount, 
                        decimal AmountCoPay, 
                        decimal PriceDifference, 
                        decimal TotalHIPayment, 
                        double ServiceQty, 
                        long V_ExamRegStatus, 
                        bool MarkedAsDeleted, 
                        System.DateTime CreatedDate, 
                        System.DateTime PaidTime, 
                        System.DateTime RefundTime, 
                        long InPatientBillingInvID, 
                        int ServiceSeqNum, 
                        byte ServiceSeqNumType, 
                        long V_RegistrationStatus, 
                        string FullName, 
                        string PatientCode, 
                        string Gender, 
                        System.DateTime DOB, 
                        System.DateTime ApptDate, 
                        int appServiceSeqNum, 
                        string ObjectValue, 
                        string MedServiceName, 
                        long DoctorStaffID, 
                        string Diagnosis, 
                        string DiagnosisFinal, 
                        string doctorFullName, 
                        long PatientRecID, 
                        System.DateTime ExamDate, 
                        long V_ProcessingType, 
                        long V_Behaving, 
                        System.DateTime DateModified, 
                        string LocationName, 
                        bool BenhMoi, 
                        long V_RegistrationType, 
                        string NationalMedicalCode, 
                        string PatientStreetAddress, 
                        string IssuerDoctorFullName, 
                        string OrigCreatorDoctorNames, 
                        bool AgeOnly, 
                        bool IsHasHI, 
                        string ICD10Code, 
                        string CityProvinceName) {
                spPatientRegistrationDetailsByRoomRow rowspPatientRegistrationDetailsByRoomRow = ((spPatientRegistrationDetailsByRoomRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PtRegistrationID,
                        HisID,
                        DeptLocID,
                        StaffID,
                        MedServiceID,
                        HIBenefit,
                        Price,
                        HIAllowedPrice,
                        Amount,
                        AmountCoPay,
                        PriceDifference,
                        TotalHIPayment,
                        ServiceQty,
                        V_ExamRegStatus,
                        MarkedAsDeleted,
                        CreatedDate,
                        PaidTime,
                        RefundTime,
                        InPatientBillingInvID,
                        ServiceSeqNum,
                        ServiceSeqNumType,
                        V_RegistrationStatus,
                        null,
                        FullName,
                        PatientCode,
                        Gender,
                        DOB,
                        ApptDate,
                        appServiceSeqNum,
                        ObjectValue,
                        MedServiceName,
                        DoctorStaffID,
                        Diagnosis,
                        DiagnosisFinal,
                        doctorFullName,
                        null,
                        PatientRecID,
                        ExamDate,
                        V_ProcessingType,
                        V_Behaving,
                        DateModified,
                        LocationName,
                        BenhMoi,
                        V_RegistrationType,
                        NationalMedicalCode,
                        PatientStreetAddress,
                        IssuerDoctorFullName,
                        OrigCreatorDoctorNames,
                        AgeOnly,
                        IsHasHI,
                        ICD10Code,
                        CityProvinceName};
                rowspPatientRegistrationDetailsByRoomRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspPatientRegistrationDetailsByRoomRow);
                return rowspPatientRegistrationDetailsByRoomRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spPatientRegistrationDetailsByRoomDataTable cln = ((spPatientRegistrationDetailsByRoomDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spPatientRegistrationDetailsByRoomDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPtRegDetailID = base.Columns["PtRegDetailID"];
                this.columnPtRegistrationID = base.Columns["PtRegistrationID"];
                this.columnHisID = base.Columns["HisID"];
                this.columnDeptLocID = base.Columns["DeptLocID"];
                this.columnStaffID = base.Columns["StaffID"];
                this.columnMedServiceID = base.Columns["MedServiceID"];
                this.columnHIBenefit = base.Columns["HIBenefit"];
                this.columnPrice = base.Columns["Price"];
                this.columnHIAllowedPrice = base.Columns["HIAllowedPrice"];
                this.columnAmount = base.Columns["Amount"];
                this.columnAmountCoPay = base.Columns["AmountCoPay"];
                this.columnPriceDifference = base.Columns["PriceDifference"];
                this.columnTotalHIPayment = base.Columns["TotalHIPayment"];
                this.columnServiceQty = base.Columns["ServiceQty"];
                this.columnV_ExamRegStatus = base.Columns["V_ExamRegStatus"];
                this.columnMarkedAsDeleted = base.Columns["MarkedAsDeleted"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnPaidTime = base.Columns["PaidTime"];
                this.columnRefundTime = base.Columns["RefundTime"];
                this.columnInPatientBillingInvID = base.Columns["InPatientBillingInvID"];
                this.columnServiceSeqNum = base.Columns["ServiceSeqNum"];
                this.columnServiceSeqNumType = base.Columns["ServiceSeqNumType"];
                this.columnV_RegistrationStatus = base.Columns["V_RegistrationStatus"];
                this.columnPatientID = base.Columns["PatientID"];
                this.columnFullName = base.Columns["FullName"];
                this.columnPatientCode = base.Columns["PatientCode"];
                this.columnGender = base.Columns["Gender"];
                this.columnDOB = base.Columns["DOB"];
                this.columnApptDate = base.Columns["ApptDate"];
                this.columnappServiceSeqNum = base.Columns["appServiceSeqNum"];
                this.columnObjectValue = base.Columns["ObjectValue"];
                this.columnMedServiceName = base.Columns["MedServiceName"];
                this.columnDoctorStaffID = base.Columns["DoctorStaffID"];
                this.columnDiagnosis = base.Columns["Diagnosis"];
                this.columnDiagnosisFinal = base.Columns["DiagnosisFinal"];
                this.columndoctorFullName = base.Columns["doctorFullName"];
                this.columnServiceRecID = base.Columns["ServiceRecID"];
                this.columnPatientRecID = base.Columns["PatientRecID"];
                this.columnExamDate = base.Columns["ExamDate"];
                this.columnV_ProcessingType = base.Columns["V_ProcessingType"];
                this.columnV_Behaving = base.Columns["V_Behaving"];
                this.columnDateModified = base.Columns["DateModified"];
                this.columnLocationName = base.Columns["LocationName"];
                this.columnBenhMoi = base.Columns["BenhMoi"];
                this.columnV_RegistrationType = base.Columns["V_RegistrationType"];
                this.columnNationalMedicalCode = base.Columns["NationalMedicalCode"];
                this.columnPatientStreetAddress = base.Columns["PatientStreetAddress"];
                this.columnIssuerDoctorFullName = base.Columns["IssuerDoctorFullName"];
                this.columnOrigCreatorDoctorNames = base.Columns["OrigCreatorDoctorNames"];
                this.columnAgeOnly = base.Columns["AgeOnly"];
                this.columnIsHasHI = base.Columns["IsHasHI"];
                this.columnICD10Code = base.Columns["ICD10Code"];
                this.columnCityProvinceName = base.Columns["CityProvinceName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPtRegDetailID = new global::System.Data.DataColumn("PtRegDetailID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegDetailID);
                this.columnPtRegistrationID = new global::System.Data.DataColumn("PtRegistrationID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegistrationID);
                this.columnHisID = new global::System.Data.DataColumn("HisID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHisID);
                this.columnDeptLocID = new global::System.Data.DataColumn("DeptLocID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptLocID);
                this.columnStaffID = new global::System.Data.DataColumn("StaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID);
                this.columnMedServiceID = new global::System.Data.DataColumn("MedServiceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedServiceID);
                this.columnHIBenefit = new global::System.Data.DataColumn("HIBenefit", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIBenefit);
                this.columnPrice = new global::System.Data.DataColumn("Price", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnHIAllowedPrice = new global::System.Data.DataColumn("HIAllowedPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIAllowedPrice);
                this.columnAmount = new global::System.Data.DataColumn("Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmount);
                this.columnAmountCoPay = new global::System.Data.DataColumn("AmountCoPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAmountCoPay);
                this.columnPriceDifference = new global::System.Data.DataColumn("PriceDifference", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceDifference);
                this.columnTotalHIPayment = new global::System.Data.DataColumn("TotalHIPayment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalHIPayment);
                this.columnServiceQty = new global::System.Data.DataColumn("ServiceQty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceQty);
                this.columnV_ExamRegStatus = new global::System.Data.DataColumn("V_ExamRegStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_ExamRegStatus);
                this.columnMarkedAsDeleted = new global::System.Data.DataColumn("MarkedAsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkedAsDeleted);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnPaidTime = new global::System.Data.DataColumn("PaidTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaidTime);
                this.columnRefundTime = new global::System.Data.DataColumn("RefundTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefundTime);
                this.columnInPatientBillingInvID = new global::System.Data.DataColumn("InPatientBillingInvID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInPatientBillingInvID);
                this.columnServiceSeqNum = new global::System.Data.DataColumn("ServiceSeqNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceSeqNum);
                this.columnServiceSeqNumType = new global::System.Data.DataColumn("ServiceSeqNumType", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceSeqNumType);
                this.columnV_RegistrationStatus = new global::System.Data.DataColumn("V_RegistrationStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegistrationStatus);
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnPatientCode = new global::System.Data.DataColumn("PatientCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientCode);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnApptDate = new global::System.Data.DataColumn("ApptDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApptDate);
                this.columnappServiceSeqNum = new global::System.Data.DataColumn("appServiceSeqNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappServiceSeqNum);
                this.columnObjectValue = new global::System.Data.DataColumn("ObjectValue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObjectValue);
                this.columnMedServiceName = new global::System.Data.DataColumn("MedServiceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMedServiceName);
                this.columnDoctorStaffID = new global::System.Data.DataColumn("DoctorStaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctorStaffID);
                this.columnDiagnosis = new global::System.Data.DataColumn("Diagnosis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosis);
                this.columnDiagnosisFinal = new global::System.Data.DataColumn("DiagnosisFinal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosisFinal);
                this.columndoctorFullName = new global::System.Data.DataColumn("doctorFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorFullName);
                this.columnServiceRecID = new global::System.Data.DataColumn("ServiceRecID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceRecID);
                this.columnPatientRecID = new global::System.Data.DataColumn("PatientRecID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientRecID);
                this.columnExamDate = new global::System.Data.DataColumn("ExamDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamDate);
                this.columnV_ProcessingType = new global::System.Data.DataColumn("V_ProcessingType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_ProcessingType);
                this.columnV_Behaving = new global::System.Data.DataColumn("V_Behaving", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_Behaving);
                this.columnDateModified = new global::System.Data.DataColumn("DateModified", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModified);
                this.columnLocationName = new global::System.Data.DataColumn("LocationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationName);
                this.columnBenhMoi = new global::System.Data.DataColumn("BenhMoi", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBenhMoi);
                this.columnV_RegistrationType = new global::System.Data.DataColumn("V_RegistrationType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_RegistrationType);
                this.columnNationalMedicalCode = new global::System.Data.DataColumn("NationalMedicalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalMedicalCode);
                this.columnPatientStreetAddress = new global::System.Data.DataColumn("PatientStreetAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientStreetAddress);
                this.columnIssuerDoctorFullName = new global::System.Data.DataColumn("IssuerDoctorFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuerDoctorFullName);
                this.columnOrigCreatorDoctorNames = new global::System.Data.DataColumn("OrigCreatorDoctorNames", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrigCreatorDoctorNames);
                this.columnAgeOnly = new global::System.Data.DataColumn("AgeOnly", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOnly);
                this.columnIsHasHI = new global::System.Data.DataColumn("IsHasHI", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHasHI);
                this.columnICD10Code = new global::System.Data.DataColumn("ICD10Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICD10Code);
                this.columnCityProvinceName = new global::System.Data.DataColumn("CityProvinceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityProvinceName);
                this.columnPtRegDetailID.AutoIncrement = true;
                this.columnPtRegDetailID.AutoIncrementSeed = -1;
                this.columnPtRegDetailID.AutoIncrementStep = -1;
                this.columnPtRegDetailID.AllowDBNull = false;
                this.columnPtRegDetailID.ReadOnly = true;
                this.columnPtRegistrationID.AllowDBNull = false;
                this.columnV_ExamRegStatus.AllowDBNull = false;
                this.columnCreatedDate.AllowDBNull = false;
                this.columnServiceSeqNum.AllowDBNull = false;
                this.columnServiceSeqNumType.AllowDBNull = false;
                this.columnPatientID.AutoIncrement = true;
                this.columnPatientID.AutoIncrementSeed = -1;
                this.columnPatientID.AutoIncrementStep = -1;
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.ReadOnly = true;
                this.columnFullName.AllowDBNull = false;
                this.columnFullName.MaxLength = 65;
                this.columnPatientCode.AllowDBNull = false;
                this.columnPatientCode.MaxLength = 16;
                this.columnGender.AllowDBNull = false;
                this.columnGender.MaxLength = 1;
                this.columnObjectValue.MaxLength = 125;
                this.columnMedServiceName.MaxLength = 128;
                this.columnDiagnosis.MaxLength = 512;
                this.columnDiagnosisFinal.MaxLength = 512;
                this.columndoctorFullName.MaxLength = 65;
                this.columnServiceRecID.AutoIncrement = true;
                this.columnServiceRecID.AutoIncrementSeed = -1;
                this.columnServiceRecID.AutoIncrementStep = -1;
                this.columnServiceRecID.ReadOnly = true;
                this.columnLocationName.ReadOnly = true;
                this.columnLocationName.MaxLength = 100;
                this.columnBenhMoi.ReadOnly = true;
                this.columnIsHasHI.ReadOnly = true;
                this.columnICD10Code.AllowDBNull = false;
                this.columnICD10Code.MaxLength = 7;
                this.columnCityProvinceName.MaxLength = 80;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spPatientRegistrationDetailsByRoomRow NewspPatientRegistrationDetailsByRoomRow() {
                return ((spPatientRegistrationDetailsByRoomRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spPatientRegistrationDetailsByRoomRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spPatientRegistrationDetailsByRoomRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spPatientRegistrationDetailsByRoomRowChanged != null)) {
                    this.spPatientRegistrationDetailsByRoomRowChanged(this, new spPatientRegistrationDetailsByRoomRowChangeEvent(((spPatientRegistrationDetailsByRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spPatientRegistrationDetailsByRoomRowChanging != null)) {
                    this.spPatientRegistrationDetailsByRoomRowChanging(this, new spPatientRegistrationDetailsByRoomRowChangeEvent(((spPatientRegistrationDetailsByRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spPatientRegistrationDetailsByRoomRowDeleted != null)) {
                    this.spPatientRegistrationDetailsByRoomRowDeleted(this, new spPatientRegistrationDetailsByRoomRowChangeEvent(((spPatientRegistrationDetailsByRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spPatientRegistrationDetailsByRoomRowDeleting != null)) {
                    this.spPatientRegistrationDetailsByRoomRowDeleting(this, new spPatientRegistrationDetailsByRoomRowChangeEvent(((spPatientRegistrationDetailsByRoomRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespPatientRegistrationDetailsByRoomRow(spPatientRegistrationDetailsByRoomRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsBangKeChiTietKhamBenh ds = new dsBangKeChiTietKhamBenh();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spPatientRegistrationDetailsByRoomDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spPatientRegistrationDetailsByRoomRow : global::System.Data.DataRow {
            
            private spPatientRegistrationDetailsByRoomDataTable tablespPatientRegistrationDetailsByRoom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spPatientRegistrationDetailsByRoomRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespPatientRegistrationDetailsByRoom = ((spPatientRegistrationDetailsByRoomDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PtRegDetailID {
                get {
                    return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.PtRegDetailIDColumn]));
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.PtRegDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PtRegistrationID {
                get {
                    return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.PtRegistrationIDColumn]));
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.PtRegistrationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long HisID {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.HisIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HisID\' in table \'spPatientRegistrationDetailsByRoom\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.HisIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DeptLocID {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.DeptLocIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptLocID\' in table \'spPatientRegistrationDetailsByRoom\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.DeptLocIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long StaffID {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.StaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffID\' in table \'spPatientRegistrationDetailsByRoom\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.StaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MedServiceID {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.MedServiceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedServiceID\' in table \'spPatientRegistrationDetailsByRoom\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.MedServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HIBenefit {
                get {
                    try {
                        return ((double)(this[this.tablespPatientRegistrationDetailsByRoom.HIBenefitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIBenefit\' in table \'spPatientRegistrationDetailsByRoom\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.HIBenefitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tablespPatientRegistrationDetailsByRoom.PriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Price\' in table \'spPatientRegistrationDetailsByRoom\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.PriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIAllowedPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablespPatientRegistrationDetailsByRoom.HIAllowedPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIAllowedPrice\' in table \'spPatientRegistrationDetailsByRoo" +
                                "m\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.HIAllowedPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Amount {
                get {
                    try {
                        return ((decimal)(this[this.tablespPatientRegistrationDetailsByRoom.AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Amount\' in table \'spPatientRegistrationDetailsByRoom\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AmountCoPay {
                get {
                    try {
                        return ((decimal)(this[this.tablespPatientRegistrationDetailsByRoom.AmountCoPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AmountCoPay\' in table \'spPatientRegistrationDetailsByRoom\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.AmountCoPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PriceDifference {
                get {
                    try {
                        return ((decimal)(this[this.tablespPatientRegistrationDetailsByRoom.PriceDifferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PriceDifference\' in table \'spPatientRegistrationDetailsByRo" +
                                "om\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.PriceDifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalHIPayment {
                get {
                    try {
                        return ((decimal)(this[this.tablespPatientRegistrationDetailsByRoom.TotalHIPaymentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalHIPayment\' in table \'spPatientRegistrationDetailsByRoo" +
                                "m\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.TotalHIPaymentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ServiceQty {
                get {
                    try {
                        return ((double)(this[this.tablespPatientRegistrationDetailsByRoom.ServiceQtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceQty\' in table \'spPatientRegistrationDetailsByRoom\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.ServiceQtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_ExamRegStatus {
                get {
                    return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.V_ExamRegStatusColumn]));
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.V_ExamRegStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MarkedAsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tablespPatientRegistrationDetailsByRoom.MarkedAsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarkedAsDeleted\' in table \'spPatientRegistrationDetailsByRo" +
                                "om\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.MarkedAsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    return ((global::System.DateTime)(this[this.tablespPatientRegistrationDetailsByRoom.CreatedDateColumn]));
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PaidTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespPatientRegistrationDetailsByRoom.PaidTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaidTime\' in table \'spPatientRegistrationDetailsByRoom\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.PaidTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RefundTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespPatientRegistrationDetailsByRoom.RefundTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RefundTime\' in table \'spPatientRegistrationDetailsByRoom\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.RefundTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InPatientBillingInvID {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.InPatientBillingInvIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InPatientBillingInvID\' in table \'spPatientRegistrationDetai" +
                                "lsByRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.InPatientBillingInvIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ServiceSeqNum {
                get {
                    return ((int)(this[this.tablespPatientRegistrationDetailsByRoom.ServiceSeqNumColumn]));
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.ServiceSeqNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte ServiceSeqNumType {
                get {
                    return ((byte)(this[this.tablespPatientRegistrationDetailsByRoom.ServiceSeqNumTypeColumn]));
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.ServiceSeqNumTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_RegistrationStatus {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.V_RegistrationStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegistrationStatus\' in table \'spPatientRegistrationDetail" +
                                "sByRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.V_RegistrationStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientID {
                get {
                    return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.PatientIDColumn]));
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.FullNameColumn]));
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientCode {
                get {
                    return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.PatientCodeColumn]));
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.PatientCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.GenderColumn]));
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespPatientRegistrationDetailsByRoom.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'spPatientRegistrationDetailsByRoom\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ApptDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespPatientRegistrationDetailsByRoom.ApptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ApptDate\' in table \'spPatientRegistrationDetailsByRoom\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.ApptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int appServiceSeqNum {
                get {
                    try {
                        return ((int)(this[this.tablespPatientRegistrationDetailsByRoom.appServiceSeqNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appServiceSeqNum\' in table \'spPatientRegistrationDetailsByR" +
                                "oom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.appServiceSeqNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ObjectValue {
                get {
                    try {
                        return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.ObjectValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObjectValue\' in table \'spPatientRegistrationDetailsByRoom\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.ObjectValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MedServiceName {
                get {
                    try {
                        return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.MedServiceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MedServiceName\' in table \'spPatientRegistrationDetailsByRoo" +
                                "m\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.MedServiceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DoctorStaffID {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.DoctorStaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoctorStaffID\' in table \'spPatientRegistrationDetailsByRoom" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.DoctorStaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Diagnosis {
                get {
                    try {
                        return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.DiagnosisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diagnosis\' in table \'spPatientRegistrationDetailsByRoom\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.DiagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DiagnosisFinal {
                get {
                    try {
                        return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.DiagnosisFinalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DiagnosisFinal\' in table \'spPatientRegistrationDetailsByRoo" +
                                "m\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.DiagnosisFinalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string doctorFullName {
                get {
                    try {
                        return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.doctorFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'doctorFullName\' in table \'spPatientRegistrationDetailsByRoo" +
                                "m\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.doctorFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ServiceRecID {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.ServiceRecIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceRecID\' in table \'spPatientRegistrationDetailsByRoom\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.ServiceRecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientRecID {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.PatientRecIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientRecID\' in table \'spPatientRegistrationDetailsByRoom\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.PatientRecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExamDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespPatientRegistrationDetailsByRoom.ExamDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamDate\' in table \'spPatientRegistrationDetailsByRoom\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.ExamDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_ProcessingType {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.V_ProcessingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_ProcessingType\' in table \'spPatientRegistrationDetailsByR" +
                                "oom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.V_ProcessingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_Behaving {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.V_BehavingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_Behaving\' in table \'spPatientRegistrationDetailsByRoom\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.V_BehavingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModified {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespPatientRegistrationDetailsByRoom.DateModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateModified\' in table \'spPatientRegistrationDetailsByRoom\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.DateModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LocationName {
                get {
                    try {
                        return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.LocationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocationName\' in table \'spPatientRegistrationDetailsByRoom\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.LocationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BenhMoi {
                get {
                    try {
                        return ((bool)(this[this.tablespPatientRegistrationDetailsByRoom.BenhMoiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BenhMoi\' in table \'spPatientRegistrationDetailsByRoom\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.BenhMoiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_RegistrationType {
                get {
                    try {
                        return ((long)(this[this.tablespPatientRegistrationDetailsByRoom.V_RegistrationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_RegistrationType\' in table \'spPatientRegistrationDetailsB" +
                                "yRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.V_RegistrationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NationalMedicalCode {
                get {
                    try {
                        return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.NationalMedicalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NationalMedicalCode\' in table \'spPatientRegistrationDetails" +
                                "ByRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.NationalMedicalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientStreetAddress {
                get {
                    try {
                        return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.PatientStreetAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientStreetAddress\' in table \'spPatientRegistrationDetail" +
                                "sByRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.PatientStreetAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IssuerDoctorFullName {
                get {
                    try {
                        return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.IssuerDoctorFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuerDoctorFullName\' in table \'spPatientRegistrationDetail" +
                                "sByRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.IssuerDoctorFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OrigCreatorDoctorNames {
                get {
                    try {
                        return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.OrigCreatorDoctorNamesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OrigCreatorDoctorNames\' in table \'spPatientRegistrationDeta" +
                                "ilsByRoom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.OrigCreatorDoctorNamesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AgeOnly {
                get {
                    try {
                        return ((bool)(this[this.tablespPatientRegistrationDetailsByRoom.AgeOnlyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOnly\' in table \'spPatientRegistrationDetailsByRoom\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.AgeOnlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHasHI {
                get {
                    try {
                        return ((bool)(this[this.tablespPatientRegistrationDetailsByRoom.IsHasHIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHasHI\' in table \'spPatientRegistrationDetailsByRoom\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.IsHasHIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ICD10Code {
                get {
                    return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.ICD10CodeColumn]));
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.ICD10CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CityProvinceName {
                get {
                    try {
                        return ((string)(this[this.tablespPatientRegistrationDetailsByRoom.CityProvinceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityProvinceName\' in table \'spPatientRegistrationDetailsByR" +
                                "oom\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespPatientRegistrationDetailsByRoom.CityProvinceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHisIDNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.HisIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHisIDNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.HisIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeptLocIDNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.DeptLocIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeptLocIDNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.DeptLocIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStaffIDNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.StaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStaffIDNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.StaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMedServiceIDNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.MedServiceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMedServiceIDNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.MedServiceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIBenefitNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.HIBenefitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIBenefitNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.HIBenefitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.PriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.PriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIAllowedPriceNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.HIAllowedPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIAllowedPriceNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.HIAllowedPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAmountCoPayNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.AmountCoPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAmountCoPayNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.AmountCoPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriceDifferenceNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.PriceDifferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriceDifferenceNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.PriceDifferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalHIPaymentNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.TotalHIPaymentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalHIPaymentNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.TotalHIPaymentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServiceQtyNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.ServiceQtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServiceQtyNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.ServiceQtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarkedAsDeletedNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.MarkedAsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarkedAsDeletedNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.MarkedAsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaidTimeNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.PaidTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaidTimeNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.PaidTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefundTimeNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.RefundTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefundTimeNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.RefundTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInPatientBillingInvIDNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.InPatientBillingInvIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInPatientBillingInvIDNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.InPatientBillingInvIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_RegistrationStatusNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.V_RegistrationStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_RegistrationStatusNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.V_RegistrationStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOBNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOBNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsApptDateNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.ApptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetApptDateNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.ApptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappServiceSeqNumNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.appServiceSeqNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappServiceSeqNumNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.appServiceSeqNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObjectValueNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.ObjectValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObjectValueNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.ObjectValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMedServiceNameNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.MedServiceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMedServiceNameNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.MedServiceNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDoctorStaffIDNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.DoctorStaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDoctorStaffIDNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.DoctorStaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiagnosisNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.DiagnosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiagnosisNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.DiagnosisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiagnosisFinalNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.DiagnosisFinalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiagnosisFinalNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.DiagnosisFinalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdoctorFullNameNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.doctorFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdoctorFullNameNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.doctorFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsServiceRecIDNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.ServiceRecIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetServiceRecIDNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.ServiceRecIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientRecIDNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.PatientRecIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientRecIDNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.PatientRecIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExamDateNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.ExamDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExamDateNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.ExamDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_ProcessingTypeNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.V_ProcessingTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_ProcessingTypeNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.V_ProcessingTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_BehavingNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.V_BehavingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_BehavingNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.V_BehavingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifiedNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.DateModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifiedNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.DateModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocationNameNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.LocationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocationNameNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.LocationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBenhMoiNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.BenhMoiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBenhMoiNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.BenhMoiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_RegistrationTypeNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.V_RegistrationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_RegistrationTypeNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.V_RegistrationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNationalMedicalCodeNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.NationalMedicalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNationalMedicalCodeNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.NationalMedicalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientStreetAddressNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.PatientStreetAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientStreetAddressNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.PatientStreetAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIssuerDoctorFullNameNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.IssuerDoctorFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIssuerDoctorFullNameNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.IssuerDoctorFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrigCreatorDoctorNamesNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.OrigCreatorDoctorNamesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrigCreatorDoctorNamesNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.OrigCreatorDoctorNamesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeOnlyNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.AgeOnlyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeOnlyNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.AgeOnlyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsHasHINull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.IsHasHIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsHasHINull() {
                this[this.tablespPatientRegistrationDetailsByRoom.IsHasHIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityProvinceNameNull() {
                return this.IsNull(this.tablespPatientRegistrationDetailsByRoom.CityProvinceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityProvinceNameNull() {
                this[this.tablespPatientRegistrationDetailsByRoom.CityProvinceNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spPatientRegistrationDetailsByRoomRowChangeEvent : global::System.EventArgs {
            
            private spPatientRegistrationDetailsByRoomRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spPatientRegistrationDetailsByRoomRowChangeEvent(spPatientRegistrationDetailsByRoomRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spPatientRegistrationDetailsByRoomRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace eHCMS.ReportLib.RptConsultations.DataSchema.dsBangKeChiTietKhamBenhTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spPatientRegistrationDetailsByRoomTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spPatientRegistrationDetailsByRoomTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spPatientRegistrationDetailsByRoom";
            tableMapping.ColumnMappings.Add("PtRegDetailID", "PtRegDetailID");
            tableMapping.ColumnMappings.Add("PtRegistrationID", "PtRegistrationID");
            tableMapping.ColumnMappings.Add("HisID", "HisID");
            tableMapping.ColumnMappings.Add("DeptLocID", "DeptLocID");
            tableMapping.ColumnMappings.Add("StaffID", "StaffID");
            tableMapping.ColumnMappings.Add("MedServiceID", "MedServiceID");
            tableMapping.ColumnMappings.Add("HIBenefit", "HIBenefit");
            tableMapping.ColumnMappings.Add("Price", "Price");
            tableMapping.ColumnMappings.Add("HIAllowedPrice", "HIAllowedPrice");
            tableMapping.ColumnMappings.Add("Amount", "Amount");
            tableMapping.ColumnMappings.Add("AmountCoPay", "AmountCoPay");
            tableMapping.ColumnMappings.Add("PriceDifference", "PriceDifference");
            tableMapping.ColumnMappings.Add("TotalHIPayment", "TotalHIPayment");
            tableMapping.ColumnMappings.Add("ServiceQty", "ServiceQty");
            tableMapping.ColumnMappings.Add("V_ExamRegStatus", "V_ExamRegStatus");
            tableMapping.ColumnMappings.Add("MarkedAsDeleted", "MarkedAsDeleted");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("PaidTime", "PaidTime");
            tableMapping.ColumnMappings.Add("RefundTime", "RefundTime");
            tableMapping.ColumnMappings.Add("InPatientBillingInvID", "InPatientBillingInvID");
            tableMapping.ColumnMappings.Add("ServiceSeqNum", "ServiceSeqNum");
            tableMapping.ColumnMappings.Add("ServiceSeqNumType", "ServiceSeqNumType");
            tableMapping.ColumnMappings.Add("V_RegistrationStatus", "V_RegistrationStatus");
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("PatientCode", "PatientCode");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("ApptDate", "ApptDate");
            tableMapping.ColumnMappings.Add("appServiceSeqNum", "appServiceSeqNum");
            tableMapping.ColumnMappings.Add("ObjectValue", "ObjectValue");
            tableMapping.ColumnMappings.Add("MedServiceName", "MedServiceName");
            tableMapping.ColumnMappings.Add("DoctorStaffID", "DoctorStaffID");
            tableMapping.ColumnMappings.Add("Diagnosis", "Diagnosis");
            tableMapping.ColumnMappings.Add("DiagnosisFinal", "DiagnosisFinal");
            tableMapping.ColumnMappings.Add("doctorFullName", "doctorFullName");
            tableMapping.ColumnMappings.Add("ServiceRecID", "ServiceRecID");
            tableMapping.ColumnMappings.Add("PatientRecID", "PatientRecID");
            tableMapping.ColumnMappings.Add("ExamDate", "ExamDate");
            tableMapping.ColumnMappings.Add("V_ProcessingType", "V_ProcessingType");
            tableMapping.ColumnMappings.Add("V_Behaving", "V_Behaving");
            tableMapping.ColumnMappings.Add("DateModified", "DateModified");
            tableMapping.ColumnMappings.Add("LocationName", "LocationName");
            tableMapping.ColumnMappings.Add("BenhMoi", "BenhMoi");
            tableMapping.ColumnMappings.Add("V_RegistrationType", "V_RegistrationType");
            tableMapping.ColumnMappings.Add("PatientStreetAddress", "PatientStreetAddress");
            tableMapping.ColumnMappings.Add("NationalMedicalCode", "NationalMedicalCode");
            tableMapping.ColumnMappings.Add("AgeOnly", "AgeOnly");
            tableMapping.ColumnMappings.Add("IsHasHI", "IsHasHI");
            tableMapping.ColumnMappings.Add("IssuerDoctorFullName", "IssuerDoctorFullName");
            tableMapping.ColumnMappings.Add("OrigCreatorDoctorNames", "OrigCreatorDoctorNames");
            tableMapping.ColumnMappings.Add("ICD10Code", "ICD10Code");
            tableMapping.ColumnMappings.Add("CityProvinceName", "CityProvinceName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spPatientRegistrationDetailsByRoom";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeptLocID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BeginDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndDate", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 23, 3, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StaffID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsBangKeChiTietKhamBenh.spPatientRegistrationDetailsByRoomDataTable dataTable, global::System.Nullable<long> DeptLocID, global::System.Nullable<global::System.DateTime> BeginDate, global::System.Nullable<global::System.DateTime> EndDate, global::System.Nullable<long> StaffID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DeptLocID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(DeptLocID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BeginDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(BeginDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(EndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((StaffID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((long)(StaffID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsBangKeChiTietKhamBenh.spPatientRegistrationDetailsByRoomDataTable GetData(global::System.Nullable<long> DeptLocID, global::System.Nullable<global::System.DateTime> BeginDate, global::System.Nullable<global::System.DateTime> EndDate, global::System.Nullable<long> StaffID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((DeptLocID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(DeptLocID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BeginDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(BeginDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((EndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(EndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((StaffID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((long)(StaffID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            dsBangKeChiTietKhamBenh.spPatientRegistrationDetailsByRoomDataTable dataTable = new dsBangKeChiTietKhamBenh.spPatientRegistrationDetailsByRoomDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsBangKeChiTietKhamBenh dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsBangKeChiTietKhamBenh dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsBangKeChiTietKhamBenh dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsBangKeChiTietKhamBenh dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591