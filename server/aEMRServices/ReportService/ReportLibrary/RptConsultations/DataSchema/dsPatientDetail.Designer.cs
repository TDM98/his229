//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eHCMS.ReportLib.RptConsultations.DataSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsPatientDetail")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsPatientDetail : global::System.Data.DataSet {
        
        private spGetPatientDetail_ByPtRegDetailIDDataTable tablespGetPatientDetail_ByPtRegDetailID;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public dsPatientDetail() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected dsPatientDetail(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spGetPatientDetail_ByPtRegDetailID"] != null)) {
                    base.Tables.Add(new spGetPatientDetail_ByPtRegDetailIDDataTable(ds.Tables["spGetPatientDetail_ByPtRegDetailID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spGetPatientDetail_ByPtRegDetailIDDataTable spGetPatientDetail_ByPtRegDetailID {
            get {
                return this.tablespGetPatientDetail_ByPtRegDetailID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsPatientDetail cln = ((dsPatientDetail)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spGetPatientDetail_ByPtRegDetailID"] != null)) {
                    base.Tables.Add(new spGetPatientDetail_ByPtRegDetailIDDataTable(ds.Tables["spGetPatientDetail_ByPtRegDetailID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespGetPatientDetail_ByPtRegDetailID = ((spGetPatientDetail_ByPtRegDetailIDDataTable)(base.Tables["spGetPatientDetail_ByPtRegDetailID"]));
            if ((initTable == true)) {
                if ((this.tablespGetPatientDetail_ByPtRegDetailID != null)) {
                    this.tablespGetPatientDetail_ByPtRegDetailID.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsPatientDetail";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsPatientDetail.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespGetPatientDetail_ByPtRegDetailID = new spGetPatientDetail_ByPtRegDetailIDDataTable();
            base.Tables.Add(this.tablespGetPatientDetail_ByPtRegDetailID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private bool ShouldSerializespGetPatientDetail_ByPtRegDetailID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsPatientDetail ds = new dsPatientDetail();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public delegate void spGetPatientDetail_ByPtRegDetailIDRowChangeEventHandler(object sender, spGetPatientDetail_ByPtRegDetailIDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spGetPatientDetail_ByPtRegDetailIDDataTable : global::System.Data.TypedTableBase<spGetPatientDetail_ByPtRegDetailIDRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnCityProvinceID;
            
            private global::System.Data.DataColumn columnPatientCode;
            
            private global::System.Data.DataColumn columnPatientBarcode;
            
            private global::System.Data.DataColumn columnIDNumber;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnMiddleName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnBloodTypeID;
            
            private global::System.Data.DataColumn columnAgeOnly;
            
            private global::System.Data.DataColumn columnDateBecamePatient;
            
            private global::System.Data.DataColumn columnV_MaritalStatus;
            
            private global::System.Data.DataColumn columnPatientPhoto;
            
            private global::System.Data.DataColumn columnPatientNotes;
            
            private global::System.Data.DataColumn columnPatientStreetAddress;
            
            private global::System.Data.DataColumn columnPatientSurburb;
            
            private global::System.Data.DataColumn columnSuburbNameID;
            
            private global::System.Data.DataColumn columnPatientPhoneNumber;
            
            private global::System.Data.DataColumn columnPatientCellPhoneNumber;
            
            private global::System.Data.DataColumn columnPatientEmailAddress;
            
            private global::System.Data.DataColumn columnPatientEmployer;
            
            private global::System.Data.DataColumn columnPatientOccupation;
            
            private global::System.Data.DataColumn columnV_Ethnic;
            
            private global::System.Data.DataColumn columnFContactFullName;
            
            private global::System.Data.DataColumn columnV_FamilyRelationship;
            
            private global::System.Data.DataColumn columnFContactAddress;
            
            private global::System.Data.DataColumn columnFContactHomePhone;
            
            private global::System.Data.DataColumn columnFContactBusinessPhone;
            
            private global::System.Data.DataColumn columnFContactCellPhone;
            
            private global::System.Data.DataColumn columnFAlternateContact;
            
            private global::System.Data.DataColumn columnFAlternatePhone;
            
            private global::System.Data.DataColumn columnIsDeleted;
            
            private global::System.Data.DataColumn columnRecCreatedDate;
            
            private global::System.Data.DataColumn columnPatientStaffID;
            
            private global::System.Data.DataColumn columnIsExistingPatient;
            
            private global::System.Data.DataColumn columnNationalityID;
            
            private global::System.Data.DataColumn columnOldPtNamesLog;
            
            private global::System.Data.DataColumn columnTransferToPatientID;
            
            private global::System.Data.DataColumn columnWardNameID;
            
            private global::System.Data.DataColumn columnWardName;
            
            private global::System.Data.DataColumn columnDOBNumIndex;
            
            private global::System.Data.DataColumn columnOldTV_PtID;
            
            private global::System.Data.DataColumn columnPatientFullStreetAddress;
            
            private global::System.Data.DataColumn columnIDCreatedDate;
            
            private global::System.Data.DataColumn columnOccupationDate;
            
            private global::System.Data.DataColumn columnIDCreatedFrom;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spGetPatientDetail_ByPtRegDetailIDDataTable() {
                this.TableName = "spGetPatientDetail_ByPtRegDetailID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spGetPatientDetail_ByPtRegDetailIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected spGetPatientDetail_ByPtRegDetailIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn CityProvinceIDColumn {
                get {
                    return this.columnCityProvinceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientCodeColumn {
                get {
                    return this.columnPatientCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientBarcodeColumn {
                get {
                    return this.columnPatientBarcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDNumberColumn {
                get {
                    return this.columnIDNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn MiddleNameColumn {
                get {
                    return this.columnMiddleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn BloodTypeIDColumn {
                get {
                    return this.columnBloodTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn AgeOnlyColumn {
                get {
                    return this.columnAgeOnly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DateBecamePatientColumn {
                get {
                    return this.columnDateBecamePatient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_MaritalStatusColumn {
                get {
                    return this.columnV_MaritalStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientPhotoColumn {
                get {
                    return this.columnPatientPhoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientNotesColumn {
                get {
                    return this.columnPatientNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientStreetAddressColumn {
                get {
                    return this.columnPatientStreetAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientSurburbColumn {
                get {
                    return this.columnPatientSurburb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn SuburbNameIDColumn {
                get {
                    return this.columnSuburbNameID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientPhoneNumberColumn {
                get {
                    return this.columnPatientPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientCellPhoneNumberColumn {
                get {
                    return this.columnPatientCellPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientEmailAddressColumn {
                get {
                    return this.columnPatientEmailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientEmployerColumn {
                get {
                    return this.columnPatientEmployer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientOccupationColumn {
                get {
                    return this.columnPatientOccupation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_EthnicColumn {
                get {
                    return this.columnV_Ethnic;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FContactFullNameColumn {
                get {
                    return this.columnFContactFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn V_FamilyRelationshipColumn {
                get {
                    return this.columnV_FamilyRelationship;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FContactAddressColumn {
                get {
                    return this.columnFContactAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FContactHomePhoneColumn {
                get {
                    return this.columnFContactHomePhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FContactBusinessPhoneColumn {
                get {
                    return this.columnFContactBusinessPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FContactCellPhoneColumn {
                get {
                    return this.columnFContactCellPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FAlternateContactColumn {
                get {
                    return this.columnFAlternateContact;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn FAlternatePhoneColumn {
                get {
                    return this.columnFAlternatePhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsDeletedColumn {
                get {
                    return this.columnIsDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn RecCreatedDateColumn {
                get {
                    return this.columnRecCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientStaffIDColumn {
                get {
                    return this.columnPatientStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IsExistingPatientColumn {
                get {
                    return this.columnIsExistingPatient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn NationalityIDColumn {
                get {
                    return this.columnNationalityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OldPtNamesLogColumn {
                get {
                    return this.columnOldPtNamesLog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn TransferToPatientIDColumn {
                get {
                    return this.columnTransferToPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WardNameIDColumn {
                get {
                    return this.columnWardNameID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn WardNameColumn {
                get {
                    return this.columnWardName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn DOBNumIndexColumn {
                get {
                    return this.columnDOBNumIndex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OldTV_PtIDColumn {
                get {
                    return this.columnOldTV_PtID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn PatientFullStreetAddressColumn {
                get {
                    return this.columnPatientFullStreetAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDCreatedDateColumn {
                get {
                    return this.columnIDCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn OccupationDateColumn {
                get {
                    return this.columnOccupationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataColumn IDCreatedFromColumn {
                get {
                    return this.columnIDCreatedFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spGetPatientDetail_ByPtRegDetailIDRow this[int index] {
                get {
                    return ((spGetPatientDetail_ByPtRegDetailIDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spGetPatientDetail_ByPtRegDetailIDRowChangeEventHandler spGetPatientDetail_ByPtRegDetailIDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spGetPatientDetail_ByPtRegDetailIDRowChangeEventHandler spGetPatientDetail_ByPtRegDetailIDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spGetPatientDetail_ByPtRegDetailIDRowChangeEventHandler spGetPatientDetail_ByPtRegDetailIDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public event spGetPatientDetail_ByPtRegDetailIDRowChangeEventHandler spGetPatientDetail_ByPtRegDetailIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void AddspGetPatientDetail_ByPtRegDetailIDRow(spGetPatientDetail_ByPtRegDetailIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spGetPatientDetail_ByPtRegDetailIDRow AddspGetPatientDetail_ByPtRegDetailIDRow(
                        long CountryID, 
                        long CityProvinceID, 
                        string PatientCode, 
                        string PatientBarcode, 
                        string IDNumber, 
                        string FirstName, 
                        string MiddleName, 
                        string LastName, 
                        string FullName, 
                        string Gender, 
                        System.DateTime DOB, 
                        byte BloodTypeID, 
                        bool AgeOnly, 
                        System.DateTime DateBecamePatient, 
                        long V_MaritalStatus, 
                        string PatientPhoto, 
                        string PatientNotes, 
                        string PatientStreetAddress, 
                        string PatientSurburb, 
                        long SuburbNameID, 
                        string PatientPhoneNumber, 
                        string PatientCellPhoneNumber, 
                        string PatientEmailAddress, 
                        string PatientEmployer, 
                        string PatientOccupation, 
                        long V_Ethnic, 
                        string FContactFullName, 
                        long V_FamilyRelationship, 
                        string FContactAddress, 
                        string FContactHomePhone, 
                        string FContactBusinessPhone, 
                        string FContactCellPhone, 
                        string FAlternateContact, 
                        string FAlternatePhone, 
                        bool IsDeleted, 
                        System.DateTime RecCreatedDate, 
                        long PatientStaffID, 
                        bool IsExistingPatient, 
                        long NationalityID, 
                        string OldPtNamesLog, 
                        long TransferToPatientID, 
                        long WardNameID, 
                        string WardName, 
                        int DOBNumIndex, 
                        long OldTV_PtID, 
                        string PatientFullStreetAddress, 
                        System.DateTime IDCreatedDate, 
                        System.DateTime OccupationDate, 
                        string IDCreatedFrom) {
                spGetPatientDetail_ByPtRegDetailIDRow rowspGetPatientDetail_ByPtRegDetailIDRow = ((spGetPatientDetail_ByPtRegDetailIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CountryID,
                        CityProvinceID,
                        PatientCode,
                        PatientBarcode,
                        IDNumber,
                        FirstName,
                        MiddleName,
                        LastName,
                        FullName,
                        Gender,
                        DOB,
                        BloodTypeID,
                        AgeOnly,
                        DateBecamePatient,
                        V_MaritalStatus,
                        PatientPhoto,
                        PatientNotes,
                        PatientStreetAddress,
                        PatientSurburb,
                        SuburbNameID,
                        PatientPhoneNumber,
                        PatientCellPhoneNumber,
                        PatientEmailAddress,
                        PatientEmployer,
                        PatientOccupation,
                        V_Ethnic,
                        FContactFullName,
                        V_FamilyRelationship,
                        FContactAddress,
                        FContactHomePhone,
                        FContactBusinessPhone,
                        FContactCellPhone,
                        FAlternateContact,
                        FAlternatePhone,
                        IsDeleted,
                        RecCreatedDate,
                        PatientStaffID,
                        IsExistingPatient,
                        NationalityID,
                        OldPtNamesLog,
                        TransferToPatientID,
                        WardNameID,
                        WardName,
                        DOBNumIndex,
                        OldTV_PtID,
                        PatientFullStreetAddress,
                        IDCreatedDate,
                        OccupationDate,
                        IDCreatedFrom};
                rowspGetPatientDetail_ByPtRegDetailIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspGetPatientDetail_ByPtRegDetailIDRow);
                return rowspGetPatientDetail_ByPtRegDetailIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spGetPatientDetail_ByPtRegDetailIDRow FindByPatientID(long PatientID) {
                return ((spGetPatientDetail_ByPtRegDetailIDRow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spGetPatientDetail_ByPtRegDetailIDDataTable cln = ((spGetPatientDetail_ByPtRegDetailIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spGetPatientDetail_ByPtRegDetailIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnCountryID = base.Columns["CountryID"];
                this.columnCityProvinceID = base.Columns["CityProvinceID"];
                this.columnPatientCode = base.Columns["PatientCode"];
                this.columnPatientBarcode = base.Columns["PatientBarcode"];
                this.columnIDNumber = base.Columns["IDNumber"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMiddleName = base.Columns["MiddleName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnFullName = base.Columns["FullName"];
                this.columnGender = base.Columns["Gender"];
                this.columnDOB = base.Columns["DOB"];
                this.columnBloodTypeID = base.Columns["BloodTypeID"];
                this.columnAgeOnly = base.Columns["AgeOnly"];
                this.columnDateBecamePatient = base.Columns["DateBecamePatient"];
                this.columnV_MaritalStatus = base.Columns["V_MaritalStatus"];
                this.columnPatientPhoto = base.Columns["PatientPhoto"];
                this.columnPatientNotes = base.Columns["PatientNotes"];
                this.columnPatientStreetAddress = base.Columns["PatientStreetAddress"];
                this.columnPatientSurburb = base.Columns["PatientSurburb"];
                this.columnSuburbNameID = base.Columns["SuburbNameID"];
                this.columnPatientPhoneNumber = base.Columns["PatientPhoneNumber"];
                this.columnPatientCellPhoneNumber = base.Columns["PatientCellPhoneNumber"];
                this.columnPatientEmailAddress = base.Columns["PatientEmailAddress"];
                this.columnPatientEmployer = base.Columns["PatientEmployer"];
                this.columnPatientOccupation = base.Columns["PatientOccupation"];
                this.columnV_Ethnic = base.Columns["V_Ethnic"];
                this.columnFContactFullName = base.Columns["FContactFullName"];
                this.columnV_FamilyRelationship = base.Columns["V_FamilyRelationship"];
                this.columnFContactAddress = base.Columns["FContactAddress"];
                this.columnFContactHomePhone = base.Columns["FContactHomePhone"];
                this.columnFContactBusinessPhone = base.Columns["FContactBusinessPhone"];
                this.columnFContactCellPhone = base.Columns["FContactCellPhone"];
                this.columnFAlternateContact = base.Columns["FAlternateContact"];
                this.columnFAlternatePhone = base.Columns["FAlternatePhone"];
                this.columnIsDeleted = base.Columns["IsDeleted"];
                this.columnRecCreatedDate = base.Columns["RecCreatedDate"];
                this.columnPatientStaffID = base.Columns["PatientStaffID"];
                this.columnIsExistingPatient = base.Columns["IsExistingPatient"];
                this.columnNationalityID = base.Columns["NationalityID"];
                this.columnOldPtNamesLog = base.Columns["OldPtNamesLog"];
                this.columnTransferToPatientID = base.Columns["TransferToPatientID"];
                this.columnWardNameID = base.Columns["WardNameID"];
                this.columnWardName = base.Columns["WardName"];
                this.columnDOBNumIndex = base.Columns["DOBNumIndex"];
                this.columnOldTV_PtID = base.Columns["OldTV_PtID"];
                this.columnPatientFullStreetAddress = base.Columns["PatientFullStreetAddress"];
                this.columnIDCreatedDate = base.Columns["IDCreatedDate"];
                this.columnOccupationDate = base.Columns["OccupationDate"];
                this.columnIDCreatedFrom = base.Columns["IDCreatedFrom"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnCityProvinceID = new global::System.Data.DataColumn("CityProvinceID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCityProvinceID);
                this.columnPatientCode = new global::System.Data.DataColumn("PatientCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientCode);
                this.columnPatientBarcode = new global::System.Data.DataColumn("PatientBarcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientBarcode);
                this.columnIDNumber = new global::System.Data.DataColumn("IDNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDNumber);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMiddleName = new global::System.Data.DataColumn("MiddleName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiddleName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnBloodTypeID = new global::System.Data.DataColumn("BloodTypeID", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBloodTypeID);
                this.columnAgeOnly = new global::System.Data.DataColumn("AgeOnly", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeOnly);
                this.columnDateBecamePatient = new global::System.Data.DataColumn("DateBecamePatient", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateBecamePatient);
                this.columnV_MaritalStatus = new global::System.Data.DataColumn("V_MaritalStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_MaritalStatus);
                this.columnPatientPhoto = new global::System.Data.DataColumn("PatientPhoto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientPhoto);
                this.columnPatientNotes = new global::System.Data.DataColumn("PatientNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientNotes);
                this.columnPatientStreetAddress = new global::System.Data.DataColumn("PatientStreetAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientStreetAddress);
                this.columnPatientSurburb = new global::System.Data.DataColumn("PatientSurburb", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientSurburb);
                this.columnSuburbNameID = new global::System.Data.DataColumn("SuburbNameID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSuburbNameID);
                this.columnPatientPhoneNumber = new global::System.Data.DataColumn("PatientPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientPhoneNumber);
                this.columnPatientCellPhoneNumber = new global::System.Data.DataColumn("PatientCellPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientCellPhoneNumber);
                this.columnPatientEmailAddress = new global::System.Data.DataColumn("PatientEmailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientEmailAddress);
                this.columnPatientEmployer = new global::System.Data.DataColumn("PatientEmployer", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientEmployer);
                this.columnPatientOccupation = new global::System.Data.DataColumn("PatientOccupation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientOccupation);
                this.columnV_Ethnic = new global::System.Data.DataColumn("V_Ethnic", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_Ethnic);
                this.columnFContactFullName = new global::System.Data.DataColumn("FContactFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactFullName);
                this.columnV_FamilyRelationship = new global::System.Data.DataColumn("V_FamilyRelationship", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_FamilyRelationship);
                this.columnFContactAddress = new global::System.Data.DataColumn("FContactAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactAddress);
                this.columnFContactHomePhone = new global::System.Data.DataColumn("FContactHomePhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactHomePhone);
                this.columnFContactBusinessPhone = new global::System.Data.DataColumn("FContactBusinessPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactBusinessPhone);
                this.columnFContactCellPhone = new global::System.Data.DataColumn("FContactCellPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFContactCellPhone);
                this.columnFAlternateContact = new global::System.Data.DataColumn("FAlternateContact", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAlternateContact);
                this.columnFAlternatePhone = new global::System.Data.DataColumn("FAlternatePhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAlternatePhone);
                this.columnIsDeleted = new global::System.Data.DataColumn("IsDeleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsDeleted);
                this.columnRecCreatedDate = new global::System.Data.DataColumn("RecCreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecCreatedDate);
                this.columnPatientStaffID = new global::System.Data.DataColumn("PatientStaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientStaffID);
                this.columnIsExistingPatient = new global::System.Data.DataColumn("IsExistingPatient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsExistingPatient);
                this.columnNationalityID = new global::System.Data.DataColumn("NationalityID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalityID);
                this.columnOldPtNamesLog = new global::System.Data.DataColumn("OldPtNamesLog", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldPtNamesLog);
                this.columnTransferToPatientID = new global::System.Data.DataColumn("TransferToPatientID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransferToPatientID);
                this.columnWardNameID = new global::System.Data.DataColumn("WardNameID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWardNameID);
                this.columnWardName = new global::System.Data.DataColumn("WardName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWardName);
                this.columnDOBNumIndex = new global::System.Data.DataColumn("DOBNumIndex", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOBNumIndex);
                this.columnOldTV_PtID = new global::System.Data.DataColumn("OldTV_PtID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldTV_PtID);
                this.columnPatientFullStreetAddress = new global::System.Data.DataColumn("PatientFullStreetAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientFullStreetAddress);
                this.columnIDCreatedDate = new global::System.Data.DataColumn("IDCreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDCreatedDate);
                this.columnOccupationDate = new global::System.Data.DataColumn("OccupationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOccupationDate);
                this.columnIDCreatedFrom = new global::System.Data.DataColumn("IDCreatedFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDCreatedFrom);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AutoIncrement = true;
                this.columnPatientID.AutoIncrementSeed = -1;
                this.columnPatientID.AutoIncrementStep = -1;
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.ReadOnly = true;
                this.columnPatientID.Unique = true;
                this.columnPatientCode.AllowDBNull = false;
                this.columnPatientCode.MaxLength = 16;
                this.columnPatientBarcode.MaxLength = 13;
                this.columnIDNumber.MaxLength = 15;
                this.columnFirstName.MaxLength = 20;
                this.columnMiddleName.MaxLength = 25;
                this.columnLastName.MaxLength = 20;
                this.columnFullName.AllowDBNull = false;
                this.columnFullName.MaxLength = 65;
                this.columnGender.AllowDBNull = false;
                this.columnGender.MaxLength = 1;
                this.columnPatientPhoto.MaxLength = 255;
                this.columnPatientNotes.MaxLength = 512;
                this.columnPatientStreetAddress.MaxLength = 255;
                this.columnPatientSurburb.MaxLength = 80;
                this.columnPatientPhoneNumber.MaxLength = 17;
                this.columnPatientCellPhoneNumber.MaxLength = 30;
                this.columnPatientEmailAddress.MaxLength = 80;
                this.columnPatientEmployer.MaxLength = 25;
                this.columnPatientOccupation.MaxLength = 125;
                this.columnFContactFullName.MaxLength = 200;
                this.columnFContactAddress.MaxLength = 125;
                this.columnFContactHomePhone.MaxLength = 15;
                this.columnFContactBusinessPhone.MaxLength = 15;
                this.columnFContactCellPhone.MaxLength = 15;
                this.columnFAlternateContact.MaxLength = 35;
                this.columnFAlternatePhone.MaxLength = 15;
                this.columnOldPtNamesLog.MaxLength = 1024;
                this.columnWardName.MaxLength = 255;
                this.columnPatientFullStreetAddress.MaxLength = 1100;
                this.columnIDCreatedFrom.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spGetPatientDetail_ByPtRegDetailIDRow NewspGetPatientDetail_ByPtRegDetailIDRow() {
                return ((spGetPatientDetail_ByPtRegDetailIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spGetPatientDetail_ByPtRegDetailIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spGetPatientDetail_ByPtRegDetailIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spGetPatientDetail_ByPtRegDetailIDRowChanged != null)) {
                    this.spGetPatientDetail_ByPtRegDetailIDRowChanged(this, new spGetPatientDetail_ByPtRegDetailIDRowChangeEvent(((spGetPatientDetail_ByPtRegDetailIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spGetPatientDetail_ByPtRegDetailIDRowChanging != null)) {
                    this.spGetPatientDetail_ByPtRegDetailIDRowChanging(this, new spGetPatientDetail_ByPtRegDetailIDRowChangeEvent(((spGetPatientDetail_ByPtRegDetailIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spGetPatientDetail_ByPtRegDetailIDRowDeleted != null)) {
                    this.spGetPatientDetail_ByPtRegDetailIDRowDeleted(this, new spGetPatientDetail_ByPtRegDetailIDRowChangeEvent(((spGetPatientDetail_ByPtRegDetailIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spGetPatientDetail_ByPtRegDetailIDRowDeleting != null)) {
                    this.spGetPatientDetail_ByPtRegDetailIDRowDeleting(this, new spGetPatientDetail_ByPtRegDetailIDRowChangeEvent(((spGetPatientDetail_ByPtRegDetailIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void RemovespGetPatientDetail_ByPtRegDetailIDRow(spGetPatientDetail_ByPtRegDetailIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPatientDetail ds = new dsPatientDetail();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spGetPatientDetail_ByPtRegDetailIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spGetPatientDetail_ByPtRegDetailIDRow : global::System.Data.DataRow {
            
            private spGetPatientDetail_ByPtRegDetailIDDataTable tablespGetPatientDetail_ByPtRegDetailID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal spGetPatientDetail_ByPtRegDetailIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespGetPatientDetail_ByPtRegDetailID = ((spGetPatientDetail_ByPtRegDetailIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long PatientID {
                get {
                    return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientIDColumn]));
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long CountryID {
                get {
                    try {
                        return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.CountryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryID\' in table \'spGetPatientDetail_ByPtRegDetailID\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long CityProvinceID {
                get {
                    try {
                        return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.CityProvinceIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CityProvinceID\' in table \'spGetPatientDetail_ByPtRegDetailI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.CityProvinceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientCode {
                get {
                    return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientCodeColumn]));
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientBarcode {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientBarcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientBarcode\' in table \'spGetPatientDetail_ByPtRegDetailI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientBarcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IDNumber {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.IDNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDNumber\' in table \'spGetPatientDetail_ByPtRegDetailID\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.IDNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FirstName {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.FirstNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FirstName\' in table \'spGetPatientDetail_ByPtRegDetailID\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string MiddleName {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.MiddleNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MiddleName\' in table \'spGetPatientDetail_ByPtRegDetailID\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.MiddleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string LastName {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.LastNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastName\' in table \'spGetPatientDetail_ByPtRegDetailID\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FullName {
                get {
                    return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.FullNameColumn]));
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string Gender {
                get {
                    return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.GenderColumn]));
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespGetPatientDetail_ByPtRegDetailID.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'spGetPatientDetail_ByPtRegDetailID\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public byte BloodTypeID {
                get {
                    try {
                        return ((byte)(this[this.tablespGetPatientDetail_ByPtRegDetailID.BloodTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BloodTypeID\' in table \'spGetPatientDetail_ByPtRegDetailID\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.BloodTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool AgeOnly {
                get {
                    try {
                        return ((bool)(this[this.tablespGetPatientDetail_ByPtRegDetailID.AgeOnlyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeOnly\' in table \'spGetPatientDetail_ByPtRegDetailID\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.AgeOnlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime DateBecamePatient {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespGetPatientDetail_ByPtRegDetailID.DateBecamePatientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateBecamePatient\' in table \'spGetPatientDetail_ByPtRegDeta" +
                                "ilID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.DateBecamePatientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_MaritalStatus {
                get {
                    try {
                        return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.V_MaritalStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_MaritalStatus\' in table \'spGetPatientDetail_ByPtRegDetail" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.V_MaritalStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientPhoto {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientPhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientPhoto\' in table \'spGetPatientDetail_ByPtRegDetailID\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientPhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientNotes {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientNotes\' in table \'spGetPatientDetail_ByPtRegDetailID\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientStreetAddress {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientStreetAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientStreetAddress\' in table \'spGetPatientDetail_ByPtRegD" +
                                "etailID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientStreetAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientSurburb {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientSurburbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientSurburb\' in table \'spGetPatientDetail_ByPtRegDetailI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientSurburbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long SuburbNameID {
                get {
                    try {
                        return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.SuburbNameIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SuburbNameID\' in table \'spGetPatientDetail_ByPtRegDetailID\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.SuburbNameIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientPhoneNumber\' in table \'spGetPatientDetail_ByPtRegDet" +
                                "ailID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientCellPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientCellPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientCellPhoneNumber\' in table \'spGetPatientDetail_ByPtRe" +
                                "gDetailID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientCellPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientEmailAddress {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientEmailAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientEmailAddress\' in table \'spGetPatientDetail_ByPtRegDe" +
                                "tailID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientEmailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientEmployer {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientEmployerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientEmployer\' in table \'spGetPatientDetail_ByPtRegDetail" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientEmployerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientOccupation {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientOccupationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientOccupation\' in table \'spGetPatientDetail_ByPtRegDeta" +
                                "ilID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientOccupationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_Ethnic {
                get {
                    try {
                        return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.V_EthnicColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_Ethnic\' in table \'spGetPatientDetail_ByPtRegDetailID\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.V_EthnicColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FContactFullName {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactFullName\' in table \'spGetPatientDetail_ByPtRegDetai" +
                                "lID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long V_FamilyRelationship {
                get {
                    try {
                        return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.V_FamilyRelationshipColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_FamilyRelationship\' in table \'spGetPatientDetail_ByPtRegD" +
                                "etailID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.V_FamilyRelationshipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FContactAddress {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactAddress\' in table \'spGetPatientDetail_ByPtRegDetail" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FContactHomePhone {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactHomePhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactHomePhone\' in table \'spGetPatientDetail_ByPtRegDeta" +
                                "ilID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactHomePhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FContactBusinessPhone {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactBusinessPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactBusinessPhone\' in table \'spGetPatientDetail_ByPtReg" +
                                "DetailID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactBusinessPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FContactCellPhone {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactCellPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FContactCellPhone\' in table \'spGetPatientDetail_ByPtRegDeta" +
                                "ilID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactCellPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FAlternateContact {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.FAlternateContactColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FAlternateContact\' in table \'spGetPatientDetail_ByPtRegDeta" +
                                "ilID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.FAlternateContactColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string FAlternatePhone {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.FAlternatePhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FAlternatePhone\' in table \'spGetPatientDetail_ByPtRegDetail" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.FAlternatePhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDeleted {
                get {
                    try {
                        return ((bool)(this[this.tablespGetPatientDetail_ByPtRegDetailID.IsDeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsDeleted\' in table \'spGetPatientDetail_ByPtRegDetailID\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.IsDeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime RecCreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespGetPatientDetail_ByPtRegDetailID.RecCreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RecCreatedDate\' in table \'spGetPatientDetail_ByPtRegDetailI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.RecCreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long PatientStaffID {
                get {
                    try {
                        return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientStaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientStaffID\' in table \'spGetPatientDetail_ByPtRegDetailI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientStaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsExistingPatient {
                get {
                    try {
                        return ((bool)(this[this.tablespGetPatientDetail_ByPtRegDetailID.IsExistingPatientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsExistingPatient\' in table \'spGetPatientDetail_ByPtRegDeta" +
                                "ilID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.IsExistingPatientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long NationalityID {
                get {
                    try {
                        return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.NationalityIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NationalityID\' in table \'spGetPatientDetail_ByPtRegDetailID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.NationalityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string OldPtNamesLog {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.OldPtNamesLogColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldPtNamesLog\' in table \'spGetPatientDetail_ByPtRegDetailID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.OldPtNamesLogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long TransferToPatientID {
                get {
                    try {
                        return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.TransferToPatientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransferToPatientID\' in table \'spGetPatientDetail_ByPtRegDe" +
                                "tailID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.TransferToPatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long WardNameID {
                get {
                    try {
                        return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.WardNameIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WardNameID\' in table \'spGetPatientDetail_ByPtRegDetailID\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.WardNameIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string WardName {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.WardNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WardName\' in table \'spGetPatientDetail_ByPtRegDetailID\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.WardNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int DOBNumIndex {
                get {
                    try {
                        return ((int)(this[this.tablespGetPatientDetail_ByPtRegDetailID.DOBNumIndexColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOBNumIndex\' in table \'spGetPatientDetail_ByPtRegDetailID\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.DOBNumIndexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public long OldTV_PtID {
                get {
                    try {
                        return ((long)(this[this.tablespGetPatientDetail_ByPtRegDetailID.OldTV_PtIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OldTV_PtID\' in table \'spGetPatientDetail_ByPtRegDetailID\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.OldTV_PtIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string PatientFullStreetAddress {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientFullStreetAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientFullStreetAddress\' in table \'spGetPatientDetail_ByPt" +
                                "RegDetailID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientFullStreetAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime IDCreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespGetPatientDetail_ByPtRegDetailID.IDCreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDCreatedDate\' in table \'spGetPatientDetail_ByPtRegDetailID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.IDCreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public System.DateTime OccupationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespGetPatientDetail_ByPtRegDetailID.OccupationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OccupationDate\' in table \'spGetPatientDetail_ByPtRegDetailI" +
                                "D\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.OccupationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public string IDCreatedFrom {
                get {
                    try {
                        return ((string)(this[this.tablespGetPatientDetail_ByPtRegDetailID.IDCreatedFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IDCreatedFrom\' in table \'spGetPatientDetail_ByPtRegDetailID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespGetPatientDetail_ByPtRegDetailID.IDCreatedFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCountryIDNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.CountryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCountryIDNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.CountryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsCityProvinceIDNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.CityProvinceIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetCityProvinceIDNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.CityProvinceIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientBarcodeNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientBarcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientBarcodeNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientBarcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDNumberNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.IDNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDNumberNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.IDNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFirstNameNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsMiddleNameNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.MiddleNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetMiddleNameNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.MiddleNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsLastNameNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetLastNameNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDOBNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDOBNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsBloodTypeIDNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.BloodTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetBloodTypeIDNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.BloodTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsAgeOnlyNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.AgeOnlyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetAgeOnlyNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.AgeOnlyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDateBecamePatientNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.DateBecamePatientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDateBecamePatientNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.DateBecamePatientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_MaritalStatusNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.V_MaritalStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_MaritalStatusNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.V_MaritalStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientPhotoNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientPhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientPhotoNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientPhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientNotesNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientNotesNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientStreetAddressNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientStreetAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientStreetAddressNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientStreetAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientSurburbNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientSurburbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientSurburbNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientSurburbColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsSuburbNameIDNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.SuburbNameIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetSuburbNameIDNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.SuburbNameIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientPhoneNumberNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientPhoneNumberNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientCellPhoneNumberNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientCellPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientCellPhoneNumberNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientCellPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientEmailAddressNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientEmailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientEmailAddressNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientEmailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientEmployerNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientEmployerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientEmployerNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientEmployerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientOccupationNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientOccupationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientOccupationNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientOccupationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_EthnicNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.V_EthnicColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_EthnicNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.V_EthnicColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFContactFullNameNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.FContactFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFContactFullNameNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsV_FamilyRelationshipNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.V_FamilyRelationshipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetV_FamilyRelationshipNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.V_FamilyRelationshipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFContactAddressNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.FContactAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFContactAddressNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFContactHomePhoneNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.FContactHomePhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFContactHomePhoneNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactHomePhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFContactBusinessPhoneNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.FContactBusinessPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFContactBusinessPhoneNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactBusinessPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFContactCellPhoneNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.FContactCellPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFContactCellPhoneNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.FContactCellPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFAlternateContactNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.FAlternateContactColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFAlternateContactNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.FAlternateContactColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsFAlternatePhoneNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.FAlternatePhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetFAlternatePhoneNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.FAlternatePhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsDeletedNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.IsDeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsDeletedNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.IsDeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsRecCreatedDateNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.RecCreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetRecCreatedDateNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.RecCreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientStaffIDNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientStaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientStaffIDNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientStaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIsExistingPatientNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.IsExistingPatientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIsExistingPatientNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.IsExistingPatientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsNationalityIDNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.NationalityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetNationalityIDNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.NationalityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOldPtNamesLogNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.OldPtNamesLogColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOldPtNamesLogNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.OldPtNamesLogColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsTransferToPatientIDNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.TransferToPatientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetTransferToPatientIDNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.TransferToPatientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWardNameIDNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.WardNameIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWardNameIDNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.WardNameIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsWardNameNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.WardNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetWardNameNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.WardNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsDOBNumIndexNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.DOBNumIndexColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetDOBNumIndexNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.DOBNumIndexColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOldTV_PtIDNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.OldTV_PtIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOldTV_PtIDNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.OldTV_PtIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsPatientFullStreetAddressNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.PatientFullStreetAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetPatientFullStreetAddressNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.PatientFullStreetAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDCreatedDateNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.IDCreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDCreatedDateNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.IDCreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsOccupationDateNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.OccupationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetOccupationDateNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.OccupationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public bool IsIDCreatedFromNull() {
                return this.IsNull(this.tablespGetPatientDetail_ByPtRegDetailID.IDCreatedFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public void SetIDCreatedFromNull() {
                this[this.tablespGetPatientDetail_ByPtRegDetailID.IDCreatedFromColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public class spGetPatientDetail_ByPtRegDetailIDRowChangeEvent : global::System.EventArgs {
            
            private spGetPatientDetail_ByPtRegDetailIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spGetPatientDetail_ByPtRegDetailIDRowChangeEvent(spGetPatientDetail_ByPtRegDetailIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public spGetPatientDetail_ByPtRegDetailIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace eHCMS.ReportLib.RptConsultations.DataSchema.dsPatientDetailTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spGetPatientDetail_ByPtRegDetailIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public spGetPatientDetail_ByPtRegDetailIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spGetPatientDetail_ByPtRegDetailID";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("CountryID", "CountryID");
            tableMapping.ColumnMappings.Add("CityProvinceID", "CityProvinceID");
            tableMapping.ColumnMappings.Add("PatientCode", "PatientCode");
            tableMapping.ColumnMappings.Add("PatientBarcode", "PatientBarcode");
            tableMapping.ColumnMappings.Add("IDNumber", "IDNumber");
            tableMapping.ColumnMappings.Add("FirstName", "FirstName");
            tableMapping.ColumnMappings.Add("MiddleName", "MiddleName");
            tableMapping.ColumnMappings.Add("LastName", "LastName");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("DOB", "DOB");
            tableMapping.ColumnMappings.Add("BloodTypeID", "BloodTypeID");
            tableMapping.ColumnMappings.Add("AgeOnly", "AgeOnly");
            tableMapping.ColumnMappings.Add("DateBecamePatient", "DateBecamePatient");
            tableMapping.ColumnMappings.Add("V_MaritalStatus", "V_MaritalStatus");
            tableMapping.ColumnMappings.Add("PatientPhoto", "PatientPhoto");
            tableMapping.ColumnMappings.Add("PatientNotes", "PatientNotes");
            tableMapping.ColumnMappings.Add("PatientStreetAddress", "PatientStreetAddress");
            tableMapping.ColumnMappings.Add("PatientSurburb", "PatientSurburb");
            tableMapping.ColumnMappings.Add("SuburbNameID", "SuburbNameID");
            tableMapping.ColumnMappings.Add("PatientPhoneNumber", "PatientPhoneNumber");
            tableMapping.ColumnMappings.Add("PatientCellPhoneNumber", "PatientCellPhoneNumber");
            tableMapping.ColumnMappings.Add("PatientEmailAddress", "PatientEmailAddress");
            tableMapping.ColumnMappings.Add("PatientEmployer", "PatientEmployer");
            tableMapping.ColumnMappings.Add("PatientOccupation", "PatientOccupation");
            tableMapping.ColumnMappings.Add("V_Ethnic", "V_Ethnic");
            tableMapping.ColumnMappings.Add("FContactFullName", "FContactFullName");
            tableMapping.ColumnMappings.Add("V_FamilyRelationship", "V_FamilyRelationship");
            tableMapping.ColumnMappings.Add("FContactAddress", "FContactAddress");
            tableMapping.ColumnMappings.Add("FContactHomePhone", "FContactHomePhone");
            tableMapping.ColumnMappings.Add("FContactBusinessPhone", "FContactBusinessPhone");
            tableMapping.ColumnMappings.Add("FContactCellPhone", "FContactCellPhone");
            tableMapping.ColumnMappings.Add("FAlternateContact", "FAlternateContact");
            tableMapping.ColumnMappings.Add("FAlternatePhone", "FAlternatePhone");
            tableMapping.ColumnMappings.Add("IsDeleted", "IsDeleted");
            tableMapping.ColumnMappings.Add("RecCreatedDate", "RecCreatedDate");
            tableMapping.ColumnMappings.Add("PatientStaffID", "PatientStaffID");
            tableMapping.ColumnMappings.Add("IsExistingPatient", "IsExistingPatient");
            tableMapping.ColumnMappings.Add("NationalityID", "NationalityID");
            tableMapping.ColumnMappings.Add("OldPtNamesLog", "OldPtNamesLog");
            tableMapping.ColumnMappings.Add("TransferToPatientID", "TransferToPatientID");
            tableMapping.ColumnMappings.Add("WardNameID", "WardNameID");
            tableMapping.ColumnMappings.Add("WardName", "WardName");
            tableMapping.ColumnMappings.Add("DOBNumIndex", "DOBNumIndex");
            tableMapping.ColumnMappings.Add("OldTV_PtID", "OldTV_PtID");
            tableMapping.ColumnMappings.Add("PatientFullStreetAddress", "PatientFullStreetAddress");
            tableMapping.ColumnMappings.Add("IDCreatedDate", "IDCreatedDate");
            tableMapping.ColumnMappings.Add("OccupationDate", "OccupationDate");
            tableMapping.ColumnMappings.Add("IDCreatedFrom", "IDCreatedFrom");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spGetPatientDetail_ByPtRegDetailID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PtRegDetailID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPatientDetail.spGetPatientDetail_ByPtRegDetailIDDataTable dataTable, global::System.Nullable<long> PtRegDetailID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PtRegDetailID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PtRegDetailID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPatientDetail.spGetPatientDetail_ByPtRegDetailIDDataTable GetData(global::System.Nullable<long> PtRegDetailID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PtRegDetailID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PtRegDetailID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsPatientDetail.spGetPatientDetail_ByPtRegDetailIDDataTable dataTable = new dsPatientDetail.spGetPatientDetail_ByPtRegDetailIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateUpdatedRows(dsPatientDetail dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateInsertedRows(dsPatientDetail dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private int UpdateDeletedRows(dsPatientDetail dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public virtual int UpdateAll(dsPatientDetail dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "15.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591