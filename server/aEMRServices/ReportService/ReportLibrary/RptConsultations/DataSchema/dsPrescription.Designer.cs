//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eHCMS.ReportLib.RptConsultations.DataSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsPrescription")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsPrescription : global::System.Data.DataSet {
        
        private EPrescript_PrescriptHeaderDataTable tableEPrescript_PrescriptHeader;
        
        private EPrescript_PtInfoDataTable tableEPrescript_PtInfo;
        
        private EPrescript_PrescriptDetailsDataTable tableEPrescript_PrescriptDetails;
        
        private global::System.Data.DataRelation relationEPrescript_PtInfo_EPrescript_PrescriptHeader;
        
        private global::System.Data.DataRelation relationEPrescript_PrescriptHeader_EPrescript_PrescriptDetails;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsPrescription() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsPrescription(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["EPrescript_PrescriptHeader"] != null)) {
                    base.Tables.Add(new EPrescript_PrescriptHeaderDataTable(ds.Tables["EPrescript_PrescriptHeader"]));
                }
                if ((ds.Tables["EPrescript_PtInfo"] != null)) {
                    base.Tables.Add(new EPrescript_PtInfoDataTable(ds.Tables["EPrescript_PtInfo"]));
                }
                if ((ds.Tables["EPrescript_PrescriptDetails"] != null)) {
                    base.Tables.Add(new EPrescript_PrescriptDetailsDataTable(ds.Tables["EPrescript_PrescriptDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EPrescript_PrescriptHeaderDataTable EPrescript_PrescriptHeader {
            get {
                return this.tableEPrescript_PrescriptHeader;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EPrescript_PtInfoDataTable EPrescript_PtInfo {
            get {
                return this.tableEPrescript_PtInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EPrescript_PrescriptDetailsDataTable EPrescript_PrescriptDetails {
            get {
                return this.tableEPrescript_PrescriptDetails;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsPrescription cln = ((dsPrescription)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["EPrescript_PrescriptHeader"] != null)) {
                    base.Tables.Add(new EPrescript_PrescriptHeaderDataTable(ds.Tables["EPrescript_PrescriptHeader"]));
                }
                if ((ds.Tables["EPrescript_PtInfo"] != null)) {
                    base.Tables.Add(new EPrescript_PtInfoDataTable(ds.Tables["EPrescript_PtInfo"]));
                }
                if ((ds.Tables["EPrescript_PrescriptDetails"] != null)) {
                    base.Tables.Add(new EPrescript_PrescriptDetailsDataTable(ds.Tables["EPrescript_PrescriptDetails"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableEPrescript_PrescriptHeader = ((EPrescript_PrescriptHeaderDataTable)(base.Tables["EPrescript_PrescriptHeader"]));
            if ((initTable == true)) {
                if ((this.tableEPrescript_PrescriptHeader != null)) {
                    this.tableEPrescript_PrescriptHeader.InitVars();
                }
            }
            this.tableEPrescript_PtInfo = ((EPrescript_PtInfoDataTable)(base.Tables["EPrescript_PtInfo"]));
            if ((initTable == true)) {
                if ((this.tableEPrescript_PtInfo != null)) {
                    this.tableEPrescript_PtInfo.InitVars();
                }
            }
            this.tableEPrescript_PrescriptDetails = ((EPrescript_PrescriptDetailsDataTable)(base.Tables["EPrescript_PrescriptDetails"]));
            if ((initTable == true)) {
                if ((this.tableEPrescript_PrescriptDetails != null)) {
                    this.tableEPrescript_PrescriptDetails.InitVars();
                }
            }
            this.relationEPrescript_PtInfo_EPrescript_PrescriptHeader = this.Relations["EPrescript_PtInfo_EPrescript_PrescriptHeader"];
            this.relationEPrescript_PrescriptHeader_EPrescript_PrescriptDetails = this.Relations["EPrescript_PrescriptHeader_EPrescript_PrescriptDetails"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsPrescription";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsPrescription.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableEPrescript_PrescriptHeader = new EPrescript_PrescriptHeaderDataTable();
            base.Tables.Add(this.tableEPrescript_PrescriptHeader);
            this.tableEPrescript_PtInfo = new EPrescript_PtInfoDataTable();
            base.Tables.Add(this.tableEPrescript_PtInfo);
            this.tableEPrescript_PrescriptDetails = new EPrescript_PrescriptDetailsDataTable();
            base.Tables.Add(this.tableEPrescript_PrescriptDetails);
            this.relationEPrescript_PtInfo_EPrescript_PrescriptHeader = new global::System.Data.DataRelation("EPrescript_PtInfo_EPrescript_PrescriptHeader", new global::System.Data.DataColumn[] {
                        this.tableEPrescript_PtInfo.PatientIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableEPrescript_PrescriptHeader.PatientIDColumn}, false);
            this.Relations.Add(this.relationEPrescript_PtInfo_EPrescript_PrescriptHeader);
            this.relationEPrescript_PrescriptHeader_EPrescript_PrescriptDetails = new global::System.Data.DataRelation("EPrescript_PrescriptHeader_EPrescript_PrescriptDetails", new global::System.Data.DataColumn[] {
                        this.tableEPrescript_PrescriptHeader.PrescriptIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableEPrescript_PrescriptDetails.PrescriptIDColumn}, false);
            this.Relations.Add(this.relationEPrescript_PrescriptHeader_EPrescript_PrescriptDetails);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEPrescript_PrescriptHeader() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEPrescript_PtInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEPrescript_PrescriptDetails() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsPrescription ds = new dsPrescription();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EPrescript_PrescriptHeaderRowChangeEventHandler(object sender, EPrescript_PrescriptHeaderRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EPrescript_PtInfoRowChangeEventHandler(object sender, EPrescript_PtInfoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EPrescript_PrescriptDetailsRowChangeEventHandler(object sender, EPrescript_PrescriptDetailsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EPrescript_PrescriptHeaderDataTable : global::System.Data.TypedTableBase<EPrescript_PrescriptHeaderRow> {
            
            private global::System.Data.DataColumn columnPatientRecID;
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnNationalMedicalCode;
            
            private global::System.Data.DataColumn columnPatientRecBarCode;
            
            private global::System.Data.DataColumn columnCreatedDate;
            
            private global::System.Data.DataColumn columnFinishedDate;
            
            private global::System.Data.DataColumn columnServiceRecID;
            
            private global::System.Data.DataColumn columnPtRegistrationID;
            
            private global::System.Data.DataColumn columnDoctorID;
            
            private global::System.Data.DataColumn columnDoctorName;
            
            private global::System.Data.DataColumn columnDrPhoneNumber;
            
            private global::System.Data.DataColumn columnExamDate;
            
            private global::System.Data.DataColumn columnV_ProcessingType;
            
            private global::System.Data.DataColumn columnProcessingType;
            
            private global::System.Data.DataColumn columnV_Behaving;
            
            private global::System.Data.DataColumn columnBehaving;
            
            private global::System.Data.DataColumn columnIssueID;
            
            private global::System.Data.DataColumn columnIssuedDateTime;
            
            private global::System.Data.DataColumn columnIssuerID;
            
            private global::System.Data.DataColumn columnIssuerFullName;
            
            private global::System.Data.DataColumn columnTimesNumberIsPrinted;
            
            private global::System.Data.DataColumn columnV_PrescriptionNotes;
            
            private global::System.Data.DataColumn columnPrescriptionNotes;
            
            private global::System.Data.DataColumn columnPrescriptionIssuedCase;
            
            private global::System.Data.DataColumn columnPrescriptID;
            
            private global::System.Data.DataColumn columnNeedToHoldConsultation;
            
            private global::System.Data.DataColumn columnConsultantDoctorID;
            
            private global::System.Data.DataColumn columnConsultantDoctorFullName;
            
            private global::System.Data.DataColumn columnAppointmentID;
            
            private global::System.Data.DataColumn columnAppointmentDate;
            
            private global::System.Data.DataColumn columnDiagnosis;
            
            private global::System.Data.DataColumn columnDoctorAdvice;
            
            private global::System.Data.DataColumn columnForOutPatient;
            
            private global::System.Data.DataColumn columnV_PrescriptionType;
            
            private global::System.Data.DataColumn columnPrescriptionType;
            
            private global::System.Data.DataColumn columnHaveBeenConsulted;
            
            private global::System.Data.DataColumn columnAuthorID;
            
            private global::System.Data.DataColumn columnAuthorFullName;
            
            private global::System.Data.DataColumn columnCreatorID;
            
            private global::System.Data.DataColumn columnCreatorFullName;
            
            private global::System.Data.DataColumn columnAllergiesString;
            
            private global::System.Data.DataColumn columnWarningString;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptHeaderDataTable() {
                this.TableName = "EPrescript_PrescriptHeader";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EPrescript_PrescriptHeaderDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EPrescript_PrescriptHeaderDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientRecIDColumn {
                get {
                    return this.columnPatientRecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NationalMedicalCodeColumn {
                get {
                    return this.columnNationalMedicalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientRecBarCodeColumn {
                get {
                    return this.columnPatientRecBarCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatedDateColumn {
                get {
                    return this.columnCreatedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinishedDateColumn {
                get {
                    return this.columnFinishedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ServiceRecIDColumn {
                get {
                    return this.columnServiceRecID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PtRegistrationIDColumn {
                get {
                    return this.columnPtRegistrationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoctorIDColumn {
                get {
                    return this.columnDoctorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoctorNameColumn {
                get {
                    return this.columnDoctorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrPhoneNumberColumn {
                get {
                    return this.columnDrPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamDateColumn {
                get {
                    return this.columnExamDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_ProcessingTypeColumn {
                get {
                    return this.columnV_ProcessingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessingTypeColumn {
                get {
                    return this.columnProcessingType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_BehavingColumn {
                get {
                    return this.columnV_Behaving;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BehavingColumn {
                get {
                    return this.columnBehaving;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IssueIDColumn {
                get {
                    return this.columnIssueID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IssuedDateTimeColumn {
                get {
                    return this.columnIssuedDateTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IssuerIDColumn {
                get {
                    return this.columnIssuerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IssuerFullNameColumn {
                get {
                    return this.columnIssuerFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TimesNumberIsPrintedColumn {
                get {
                    return this.columnTimesNumberIsPrinted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_PrescriptionNotesColumn {
                get {
                    return this.columnV_PrescriptionNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrescriptionNotesColumn {
                get {
                    return this.columnPrescriptionNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrescriptionIssuedCaseColumn {
                get {
                    return this.columnPrescriptionIssuedCase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrescriptIDColumn {
                get {
                    return this.columnPrescriptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NeedToHoldConsultationColumn {
                get {
                    return this.columnNeedToHoldConsultation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsultantDoctorIDColumn {
                get {
                    return this.columnConsultantDoctorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConsultantDoctorFullNameColumn {
                get {
                    return this.columnConsultantDoctorFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppointmentIDColumn {
                get {
                    return this.columnAppointmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AppointmentDateColumn {
                get {
                    return this.columnAppointmentDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DiagnosisColumn {
                get {
                    return this.columnDiagnosis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoctorAdviceColumn {
                get {
                    return this.columnDoctorAdvice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ForOutPatientColumn {
                get {
                    return this.columnForOutPatient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_PrescriptionTypeColumn {
                get {
                    return this.columnV_PrescriptionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrescriptionTypeColumn {
                get {
                    return this.columnPrescriptionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HaveBeenConsultedColumn {
                get {
                    return this.columnHaveBeenConsulted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AuthorIDColumn {
                get {
                    return this.columnAuthorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AuthorFullNameColumn {
                get {
                    return this.columnAuthorFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorIDColumn {
                get {
                    return this.columnCreatorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreatorFullNameColumn {
                get {
                    return this.columnCreatorFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllergiesStringColumn {
                get {
                    return this.columnAllergiesString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WarningStringColumn {
                get {
                    return this.columnWarningString;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptHeaderRow this[int index] {
                get {
                    return ((EPrescript_PrescriptHeaderRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PrescriptHeaderRowChangeEventHandler EPrescript_PrescriptHeaderRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PrescriptHeaderRowChangeEventHandler EPrescript_PrescriptHeaderRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PrescriptHeaderRowChangeEventHandler EPrescript_PrescriptHeaderRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PrescriptHeaderRowChangeEventHandler EPrescript_PrescriptHeaderRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEPrescript_PrescriptHeaderRow(EPrescript_PrescriptHeaderRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptHeaderRow AddEPrescript_PrescriptHeaderRow(
                        long PatientRecID, 
                        EPrescript_PtInfoRow parentEPrescript_PtInfoRowByEPrescript_PtInfo_EPrescript_PrescriptHeader, 
                        string NationalMedicalCode, 
                        string PatientRecBarCode, 
                        System.DateTime CreatedDate, 
                        System.DateTime FinishedDate, 
                        long ServiceRecID, 
                        long PtRegistrationID, 
                        long DoctorID, 
                        string DoctorName, 
                        string DrPhoneNumber, 
                        System.DateTime ExamDate, 
                        long V_ProcessingType, 
                        string ProcessingType, 
                        long V_Behaving, 
                        string Behaving, 
                        long IssueID, 
                        System.DateTime IssuedDateTime, 
                        long IssuerID, 
                        string IssuerFullName, 
                        byte TimesNumberIsPrinted, 
                        long V_PrescriptionNotes, 
                        string PrescriptionNotes, 
                        string PrescriptionIssuedCase, 
                        long PrescriptID, 
                        bool NeedToHoldConsultation, 
                        long ConsultantDoctorID, 
                        string ConsultantDoctorFullName, 
                        long AppointmentID, 
                        System.DateTime AppointmentDate, 
                        string Diagnosis, 
                        string DoctorAdvice, 
                        bool ForOutPatient, 
                        long V_PrescriptionType, 
                        string PrescriptionType, 
                        bool HaveBeenConsulted, 
                        long AuthorID, 
                        string AuthorFullName, 
                        long CreatorID, 
                        string CreatorFullName, 
                        string AllergiesString, 
                        string WarningString) {
                EPrescript_PrescriptHeaderRow rowEPrescript_PrescriptHeaderRow = ((EPrescript_PrescriptHeaderRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientRecID,
                        null,
                        NationalMedicalCode,
                        PatientRecBarCode,
                        CreatedDate,
                        FinishedDate,
                        ServiceRecID,
                        PtRegistrationID,
                        DoctorID,
                        DoctorName,
                        DrPhoneNumber,
                        ExamDate,
                        V_ProcessingType,
                        ProcessingType,
                        V_Behaving,
                        Behaving,
                        IssueID,
                        IssuedDateTime,
                        IssuerID,
                        IssuerFullName,
                        TimesNumberIsPrinted,
                        V_PrescriptionNotes,
                        PrescriptionNotes,
                        PrescriptionIssuedCase,
                        PrescriptID,
                        NeedToHoldConsultation,
                        ConsultantDoctorID,
                        ConsultantDoctorFullName,
                        AppointmentID,
                        AppointmentDate,
                        Diagnosis,
                        DoctorAdvice,
                        ForOutPatient,
                        V_PrescriptionType,
                        PrescriptionType,
                        HaveBeenConsulted,
                        AuthorID,
                        AuthorFullName,
                        CreatorID,
                        CreatorFullName,
                        AllergiesString,
                        WarningString};
                if ((parentEPrescript_PtInfoRowByEPrescript_PtInfo_EPrescript_PrescriptHeader != null)) {
                    columnValuesArray[1] = parentEPrescript_PtInfoRowByEPrescript_PtInfo_EPrescript_PrescriptHeader[0];
                }
                rowEPrescript_PrescriptHeaderRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEPrescript_PrescriptHeaderRow);
                return rowEPrescript_PrescriptHeaderRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptHeaderRow FindByPatientRecIDServiceRecIDIssueIDPrescriptID(long PatientRecID, long ServiceRecID, long IssueID, long PrescriptID) {
                return ((EPrescript_PrescriptHeaderRow)(this.Rows.Find(new object[] {
                            PatientRecID,
                            ServiceRecID,
                            IssueID,
                            PrescriptID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EPrescript_PrescriptHeaderDataTable cln = ((EPrescript_PrescriptHeaderDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EPrescript_PrescriptHeaderDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientRecID = base.Columns["PatientRecID"];
                this.columnPatientID = base.Columns["PatientID"];
                this.columnNationalMedicalCode = base.Columns["NationalMedicalCode"];
                this.columnPatientRecBarCode = base.Columns["PatientRecBarCode"];
                this.columnCreatedDate = base.Columns["CreatedDate"];
                this.columnFinishedDate = base.Columns["FinishedDate"];
                this.columnServiceRecID = base.Columns["ServiceRecID"];
                this.columnPtRegistrationID = base.Columns["PtRegistrationID"];
                this.columnDoctorID = base.Columns["DoctorID"];
                this.columnDoctorName = base.Columns["DoctorName"];
                this.columnDrPhoneNumber = base.Columns["DrPhoneNumber"];
                this.columnExamDate = base.Columns["ExamDate"];
                this.columnV_ProcessingType = base.Columns["V_ProcessingType"];
                this.columnProcessingType = base.Columns["ProcessingType"];
                this.columnV_Behaving = base.Columns["V_Behaving"];
                this.columnBehaving = base.Columns["Behaving"];
                this.columnIssueID = base.Columns["IssueID"];
                this.columnIssuedDateTime = base.Columns["IssuedDateTime"];
                this.columnIssuerID = base.Columns["IssuerID"];
                this.columnIssuerFullName = base.Columns["IssuerFullName"];
                this.columnTimesNumberIsPrinted = base.Columns["TimesNumberIsPrinted"];
                this.columnV_PrescriptionNotes = base.Columns["V_PrescriptionNotes"];
                this.columnPrescriptionNotes = base.Columns["PrescriptionNotes"];
                this.columnPrescriptionIssuedCase = base.Columns["PrescriptionIssuedCase"];
                this.columnPrescriptID = base.Columns["PrescriptID"];
                this.columnNeedToHoldConsultation = base.Columns["NeedToHoldConsultation"];
                this.columnConsultantDoctorID = base.Columns["ConsultantDoctorID"];
                this.columnConsultantDoctorFullName = base.Columns["ConsultantDoctorFullName"];
                this.columnAppointmentID = base.Columns["AppointmentID"];
                this.columnAppointmentDate = base.Columns["AppointmentDate"];
                this.columnDiagnosis = base.Columns["Diagnosis"];
                this.columnDoctorAdvice = base.Columns["DoctorAdvice"];
                this.columnForOutPatient = base.Columns["ForOutPatient"];
                this.columnV_PrescriptionType = base.Columns["V_PrescriptionType"];
                this.columnPrescriptionType = base.Columns["PrescriptionType"];
                this.columnHaveBeenConsulted = base.Columns["HaveBeenConsulted"];
                this.columnAuthorID = base.Columns["AuthorID"];
                this.columnAuthorFullName = base.Columns["AuthorFullName"];
                this.columnCreatorID = base.Columns["CreatorID"];
                this.columnCreatorFullName = base.Columns["CreatorFullName"];
                this.columnAllergiesString = base.Columns["AllergiesString"];
                this.columnWarningString = base.Columns["WarningString"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientRecID = new global::System.Data.DataColumn("PatientRecID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientRecID);
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnNationalMedicalCode = new global::System.Data.DataColumn("NationalMedicalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalMedicalCode);
                this.columnPatientRecBarCode = new global::System.Data.DataColumn("PatientRecBarCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientRecBarCode);
                this.columnCreatedDate = new global::System.Data.DataColumn("CreatedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatedDate);
                this.columnFinishedDate = new global::System.Data.DataColumn("FinishedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinishedDate);
                this.columnServiceRecID = new global::System.Data.DataColumn("ServiceRecID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceRecID);
                this.columnPtRegistrationID = new global::System.Data.DataColumn("PtRegistrationID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegistrationID);
                this.columnDoctorID = new global::System.Data.DataColumn("DoctorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctorID);
                this.columnDoctorName = new global::System.Data.DataColumn("DoctorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctorName);
                this.columnDrPhoneNumber = new global::System.Data.DataColumn("DrPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrPhoneNumber);
                this.columnExamDate = new global::System.Data.DataColumn("ExamDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamDate);
                this.columnV_ProcessingType = new global::System.Data.DataColumn("V_ProcessingType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_ProcessingType);
                this.columnProcessingType = new global::System.Data.DataColumn("ProcessingType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessingType);
                this.columnV_Behaving = new global::System.Data.DataColumn("V_Behaving", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_Behaving);
                this.columnBehaving = new global::System.Data.DataColumn("Behaving", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBehaving);
                this.columnIssueID = new global::System.Data.DataColumn("IssueID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssueID);
                this.columnIssuedDateTime = new global::System.Data.DataColumn("IssuedDateTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuedDateTime);
                this.columnIssuerID = new global::System.Data.DataColumn("IssuerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuerID);
                this.columnIssuerFullName = new global::System.Data.DataColumn("IssuerFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIssuerFullName);
                this.columnTimesNumberIsPrinted = new global::System.Data.DataColumn("TimesNumberIsPrinted", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTimesNumberIsPrinted);
                this.columnV_PrescriptionNotes = new global::System.Data.DataColumn("V_PrescriptionNotes", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_PrescriptionNotes);
                this.columnPrescriptionNotes = new global::System.Data.DataColumn("PrescriptionNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptionNotes);
                this.columnPrescriptionIssuedCase = new global::System.Data.DataColumn("PrescriptionIssuedCase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptionIssuedCase);
                this.columnPrescriptID = new global::System.Data.DataColumn("PrescriptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptID);
                this.columnNeedToHoldConsultation = new global::System.Data.DataColumn("NeedToHoldConsultation", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNeedToHoldConsultation);
                this.columnConsultantDoctorID = new global::System.Data.DataColumn("ConsultantDoctorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantDoctorID);
                this.columnConsultantDoctorFullName = new global::System.Data.DataColumn("ConsultantDoctorFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsultantDoctorFullName);
                this.columnAppointmentID = new global::System.Data.DataColumn("AppointmentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppointmentID);
                this.columnAppointmentDate = new global::System.Data.DataColumn("AppointmentDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAppointmentDate);
                this.columnDiagnosis = new global::System.Data.DataColumn("Diagnosis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiagnosis);
                this.columnDoctorAdvice = new global::System.Data.DataColumn("DoctorAdvice", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoctorAdvice);
                this.columnForOutPatient = new global::System.Data.DataColumn("ForOutPatient", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForOutPatient);
                this.columnV_PrescriptionType = new global::System.Data.DataColumn("V_PrescriptionType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_PrescriptionType);
                this.columnPrescriptionType = new global::System.Data.DataColumn("PrescriptionType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptionType);
                this.columnHaveBeenConsulted = new global::System.Data.DataColumn("HaveBeenConsulted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHaveBeenConsulted);
                this.columnAuthorID = new global::System.Data.DataColumn("AuthorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorID);
                this.columnAuthorFullName = new global::System.Data.DataColumn("AuthorFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorFullName);
                this.columnCreatorID = new global::System.Data.DataColumn("CreatorID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorID);
                this.columnCreatorFullName = new global::System.Data.DataColumn("CreatorFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorFullName);
                this.columnAllergiesString = new global::System.Data.DataColumn("AllergiesString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllergiesString);
                this.columnWarningString = new global::System.Data.DataColumn("WarningString", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWarningString);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientRecID,
                                this.columnServiceRecID,
                                this.columnIssueID,
                                this.columnPrescriptID}, true));
                this.columnPatientRecID.AllowDBNull = false;
                this.columnNationalMedicalCode.MaxLength = 17;
                this.columnPatientRecBarCode.MaxLength = 15;
                this.columnServiceRecID.AllowDBNull = false;
                this.columnDoctorName.ReadOnly = true;
                this.columnDoctorName.MaxLength = 128;
                this.columnDrPhoneNumber.ReadOnly = true;
                this.columnDrPhoneNumber.MaxLength = 30;
                this.columnExamDate.AllowDBNull = false;
                this.columnProcessingType.ReadOnly = true;
                this.columnProcessingType.MaxLength = 125;
                this.columnBehaving.ReadOnly = true;
                this.columnBehaving.MaxLength = 125;
                this.columnIssueID.AllowDBNull = false;
                this.columnIssuerFullName.ReadOnly = true;
                this.columnIssuerFullName.MaxLength = 128;
                this.columnPrescriptionNotes.ReadOnly = true;
                this.columnPrescriptionNotes.MaxLength = 125;
                this.columnPrescriptionIssuedCase.ReadOnly = true;
                this.columnPrescriptionIssuedCase.MaxLength = 125;
                this.columnPrescriptID.AllowDBNull = false;
                this.columnNeedToHoldConsultation.ReadOnly = true;
                this.columnConsultantDoctorFullName.ReadOnly = true;
                this.columnConsultantDoctorFullName.MaxLength = 128;
                this.columnAppointmentDate.ReadOnly = true;
                this.columnDiagnosis.MaxLength = 256;
                this.columnDoctorAdvice.MaxLength = 128;
                this.columnPrescriptionType.ReadOnly = true;
                this.columnPrescriptionType.MaxLength = 125;
                this.columnAuthorID.ReadOnly = true;
                this.columnAuthorFullName.ReadOnly = true;
                this.columnAuthorFullName.MaxLength = 128;
                this.columnCreatorID.ReadOnly = true;
                this.columnCreatorFullName.ReadOnly = true;
                this.columnCreatorFullName.MaxLength = 128;
                this.columnAllergiesString.ReadOnly = true;
                this.columnAllergiesString.MaxLength = 255;
                this.columnWarningString.ReadOnly = true;
                this.columnWarningString.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptHeaderRow NewEPrescript_PrescriptHeaderRow() {
                return ((EPrescript_PrescriptHeaderRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EPrescript_PrescriptHeaderRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EPrescript_PrescriptHeaderRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EPrescript_PrescriptHeaderRowChanged != null)) {
                    this.EPrescript_PrescriptHeaderRowChanged(this, new EPrescript_PrescriptHeaderRowChangeEvent(((EPrescript_PrescriptHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EPrescript_PrescriptHeaderRowChanging != null)) {
                    this.EPrescript_PrescriptHeaderRowChanging(this, new EPrescript_PrescriptHeaderRowChangeEvent(((EPrescript_PrescriptHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EPrescript_PrescriptHeaderRowDeleted != null)) {
                    this.EPrescript_PrescriptHeaderRowDeleted(this, new EPrescript_PrescriptHeaderRowChangeEvent(((EPrescript_PrescriptHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EPrescript_PrescriptHeaderRowDeleting != null)) {
                    this.EPrescript_PrescriptHeaderRowDeleting(this, new EPrescript_PrescriptHeaderRowChangeEvent(((EPrescript_PrescriptHeaderRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEPrescript_PrescriptHeaderRow(EPrescript_PrescriptHeaderRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPrescription ds = new dsPrescription();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EPrescript_PrescriptHeaderDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EPrescript_PtInfoDataTable : global::System.Data.TypedTableBase<EPrescript_PtInfoRow> {
            
            private global::System.Data.DataColumn columnPatientID;
            
            private global::System.Data.DataColumn columnNationalMedicalCode;
            
            private global::System.Data.DataColumn columnPtFullName;
            
            private global::System.Data.DataColumn columnPtAge;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnPtAddress;
            
            private global::System.Data.DataColumn columnPatientBarCode;
            
            private global::System.Data.DataColumn columnPatientPhoneNumber;
            
            private global::System.Data.DataColumn columnPatientCellPhoneNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PtInfoDataTable() {
                this.TableName = "EPrescript_PtInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EPrescript_PtInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EPrescript_PtInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientIDColumn {
                get {
                    return this.columnPatientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NationalMedicalCodeColumn {
                get {
                    return this.columnNationalMedicalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PtFullNameColumn {
                get {
                    return this.columnPtFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PtAgeColumn {
                get {
                    return this.columnPtAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PtAddressColumn {
                get {
                    return this.columnPtAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientBarCodeColumn {
                get {
                    return this.columnPatientBarCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientPhoneNumberColumn {
                get {
                    return this.columnPatientPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PatientCellPhoneNumberColumn {
                get {
                    return this.columnPatientCellPhoneNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PtInfoRow this[int index] {
                get {
                    return ((EPrescript_PtInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PtInfoRowChangeEventHandler EPrescript_PtInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PtInfoRowChangeEventHandler EPrescript_PtInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PtInfoRowChangeEventHandler EPrescript_PtInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PtInfoRowChangeEventHandler EPrescript_PtInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEPrescript_PtInfoRow(EPrescript_PtInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PtInfoRow AddEPrescript_PtInfoRow(long PatientID, string NationalMedicalCode, string PtFullName, int PtAge, string Gender, string PtAddress, string PatientBarCode, string PatientPhoneNumber, string PatientCellPhoneNumber) {
                EPrescript_PtInfoRow rowEPrescript_PtInfoRow = ((EPrescript_PtInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PatientID,
                        NationalMedicalCode,
                        PtFullName,
                        PtAge,
                        Gender,
                        PtAddress,
                        PatientBarCode,
                        PatientPhoneNumber,
                        PatientCellPhoneNumber};
                rowEPrescript_PtInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEPrescript_PtInfoRow);
                return rowEPrescript_PtInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PtInfoRow FindByPatientID(long PatientID) {
                return ((EPrescript_PtInfoRow)(this.Rows.Find(new object[] {
                            PatientID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EPrescript_PtInfoDataTable cln = ((EPrescript_PtInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EPrescript_PtInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPatientID = base.Columns["PatientID"];
                this.columnNationalMedicalCode = base.Columns["NationalMedicalCode"];
                this.columnPtFullName = base.Columns["PtFullName"];
                this.columnPtAge = base.Columns["PtAge"];
                this.columnGender = base.Columns["Gender"];
                this.columnPtAddress = base.Columns["PtAddress"];
                this.columnPatientBarCode = base.Columns["PatientBarCode"];
                this.columnPatientPhoneNumber = base.Columns["PatientPhoneNumber"];
                this.columnPatientCellPhoneNumber = base.Columns["PatientCellPhoneNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPatientID = new global::System.Data.DataColumn("PatientID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientID);
                this.columnNationalMedicalCode = new global::System.Data.DataColumn("NationalMedicalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationalMedicalCode);
                this.columnPtFullName = new global::System.Data.DataColumn("PtFullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtFullName);
                this.columnPtAge = new global::System.Data.DataColumn("PtAge", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtAge);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnPtAddress = new global::System.Data.DataColumn("PtAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtAddress);
                this.columnPatientBarCode = new global::System.Data.DataColumn("PatientBarCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientBarCode);
                this.columnPatientPhoneNumber = new global::System.Data.DataColumn("PatientPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientPhoneNumber);
                this.columnPatientCellPhoneNumber = new global::System.Data.DataColumn("PatientCellPhoneNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPatientCellPhoneNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPatientID}, true));
                this.columnPatientID.AllowDBNull = false;
                this.columnPatientID.Unique = true;
                this.columnNationalMedicalCode.MaxLength = 17;
                this.columnPtFullName.AllowDBNull = false;
                this.columnPtFullName.MaxLength = 65;
                this.columnPtAge.ReadOnly = true;
                this.columnGender.AllowDBNull = false;
                this.columnGender.MaxLength = 1;
                this.columnPtAddress.ReadOnly = true;
                this.columnPtAddress.MaxLength = 339;
                this.columnPatientBarCode.MaxLength = 13;
                this.columnPatientPhoneNumber.MaxLength = 17;
                this.columnPatientCellPhoneNumber.MaxLength = 13;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PtInfoRow NewEPrescript_PtInfoRow() {
                return ((EPrescript_PtInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EPrescript_PtInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EPrescript_PtInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EPrescript_PtInfoRowChanged != null)) {
                    this.EPrescript_PtInfoRowChanged(this, new EPrescript_PtInfoRowChangeEvent(((EPrescript_PtInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EPrescript_PtInfoRowChanging != null)) {
                    this.EPrescript_PtInfoRowChanging(this, new EPrescript_PtInfoRowChangeEvent(((EPrescript_PtInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EPrescript_PtInfoRowDeleted != null)) {
                    this.EPrescript_PtInfoRowDeleted(this, new EPrescript_PtInfoRowChangeEvent(((EPrescript_PtInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EPrescript_PtInfoRowDeleting != null)) {
                    this.EPrescript_PtInfoRowDeleting(this, new EPrescript_PtInfoRowChangeEvent(((EPrescript_PtInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEPrescript_PtInfoRow(EPrescript_PtInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPrescription ds = new dsPrescription();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EPrescript_PtInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EPrescript_PrescriptDetailsDataTable : global::System.Data.TypedTableBase<EPrescript_PrescriptDetailsRow> {
            
            private global::System.Data.DataColumn columnPrescriptDetailID;
            
            private global::System.Data.DataColumn columnDrugID;
            
            private global::System.Data.DataColumn columnPrescriptID;
            
            private global::System.Data.DataColumn columnStrength;
            
            private global::System.Data.DataColumn columnBeOfHIMedicineList;
            
            private global::System.Data.DataColumn columnV_DrugUsage;
            
            private global::System.Data.DataColumn columnMDose;
            
            private global::System.Data.DataColumn columnADose;
            
            private global::System.Data.DataColumn columnEDose;
            
            private global::System.Data.DataColumn columnNDose;
            
            private global::System.Data.DataColumn columnDayRpts;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnDrugInstructionNotes;
            
            private global::System.Data.DataColumn columnDrugName;
            
            private global::System.Data.DataColumn columnInsuranceCover;
            
            private global::System.Data.DataColumn columnDrugUsage;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnUnitUse;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptDetailsDataTable() {
                this.TableName = "EPrescript_PrescriptDetails";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EPrescript_PrescriptDetailsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EPrescript_PrescriptDetailsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrescriptDetailIDColumn {
                get {
                    return this.columnPrescriptDetailID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugIDColumn {
                get {
                    return this.columnDrugID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrescriptIDColumn {
                get {
                    return this.columnPrescriptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StrengthColumn {
                get {
                    return this.columnStrength;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BeOfHIMedicineListColumn {
                get {
                    return this.columnBeOfHIMedicineList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_DrugUsageColumn {
                get {
                    return this.columnV_DrugUsage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MDoseColumn {
                get {
                    return this.columnMDose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADoseColumn {
                get {
                    return this.columnADose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EDoseColumn {
                get {
                    return this.columnEDose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NDoseColumn {
                get {
                    return this.columnNDose;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DayRptsColumn {
                get {
                    return this.columnDayRpts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugInstructionNotesColumn {
                get {
                    return this.columnDrugInstructionNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugNameColumn {
                get {
                    return this.columnDrugName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsuranceCoverColumn {
                get {
                    return this.columnInsuranceCover;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugUsageColumn {
                get {
                    return this.columnDrugUsage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitUseColumn {
                get {
                    return this.columnUnitUse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptDetailsRow this[int index] {
                get {
                    return ((EPrescript_PrescriptDetailsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PrescriptDetailsRowChangeEventHandler EPrescript_PrescriptDetailsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PrescriptDetailsRowChangeEventHandler EPrescript_PrescriptDetailsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PrescriptDetailsRowChangeEventHandler EPrescript_PrescriptDetailsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EPrescript_PrescriptDetailsRowChangeEventHandler EPrescript_PrescriptDetailsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEPrescript_PrescriptDetailsRow(EPrescript_PrescriptDetailsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptDetailsRow AddEPrescript_PrescriptDetailsRow(
                        long DrugID, 
                        EPrescript_PrescriptHeaderRow parentEPrescript_PrescriptHeaderRowByEPrescript_PrescriptHeader_EPrescript_PrescriptDetails, 
                        string Strength, 
                        bool BeOfHIMedicineList, 
                        long V_DrugUsage, 
                        float MDose, 
                        float ADose, 
                        float EDose, 
                        float NDose, 
                        double DayRpts, 
                        double Qty, 
                        string DrugInstructionNotes, 
                        string DrugName, 
                        bool InsuranceCover, 
                        string DrugUsage, 
                        string UnitName, 
                        string UnitUse) {
                EPrescript_PrescriptDetailsRow rowEPrescript_PrescriptDetailsRow = ((EPrescript_PrescriptDetailsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DrugID,
                        null,
                        Strength,
                        BeOfHIMedicineList,
                        V_DrugUsage,
                        MDose,
                        ADose,
                        EDose,
                        NDose,
                        DayRpts,
                        Qty,
                        DrugInstructionNotes,
                        DrugName,
                        InsuranceCover,
                        DrugUsage,
                        UnitName,
                        UnitUse};
                if ((parentEPrescript_PrescriptHeaderRowByEPrescript_PrescriptHeader_EPrescript_PrescriptDetails != null)) {
                    columnValuesArray[2] = parentEPrescript_PrescriptHeaderRowByEPrescript_PrescriptHeader_EPrescript_PrescriptDetails[24];
                }
                rowEPrescript_PrescriptDetailsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEPrescript_PrescriptDetailsRow);
                return rowEPrescript_PrescriptDetailsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptDetailsRow FindByPrescriptDetailID(long PrescriptDetailID) {
                return ((EPrescript_PrescriptDetailsRow)(this.Rows.Find(new object[] {
                            PrescriptDetailID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EPrescript_PrescriptDetailsDataTable cln = ((EPrescript_PrescriptDetailsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EPrescript_PrescriptDetailsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPrescriptDetailID = base.Columns["PrescriptDetailID"];
                this.columnDrugID = base.Columns["DrugID"];
                this.columnPrescriptID = base.Columns["PrescriptID"];
                this.columnStrength = base.Columns["Strength"];
                this.columnBeOfHIMedicineList = base.Columns["BeOfHIMedicineList"];
                this.columnV_DrugUsage = base.Columns["V_DrugUsage"];
                this.columnMDose = base.Columns["MDose"];
                this.columnADose = base.Columns["ADose"];
                this.columnEDose = base.Columns["EDose"];
                this.columnNDose = base.Columns["NDose"];
                this.columnDayRpts = base.Columns["DayRpts"];
                this.columnQty = base.Columns["Qty"];
                this.columnDrugInstructionNotes = base.Columns["DrugInstructionNotes"];
                this.columnDrugName = base.Columns["DrugName"];
                this.columnInsuranceCover = base.Columns["InsuranceCover"];
                this.columnDrugUsage = base.Columns["DrugUsage"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnUnitUse = base.Columns["UnitUse"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPrescriptDetailID = new global::System.Data.DataColumn("PrescriptDetailID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptDetailID);
                this.columnDrugID = new global::System.Data.DataColumn("DrugID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugID);
                this.columnPrescriptID = new global::System.Data.DataColumn("PrescriptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptID);
                this.columnStrength = new global::System.Data.DataColumn("Strength", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStrength);
                this.columnBeOfHIMedicineList = new global::System.Data.DataColumn("BeOfHIMedicineList", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBeOfHIMedicineList);
                this.columnV_DrugUsage = new global::System.Data.DataColumn("V_DrugUsage", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_DrugUsage);
                this.columnMDose = new global::System.Data.DataColumn("MDose", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMDose);
                this.columnADose = new global::System.Data.DataColumn("ADose", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADose);
                this.columnEDose = new global::System.Data.DataColumn("EDose", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDose);
                this.columnNDose = new global::System.Data.DataColumn("NDose", typeof(float), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNDose);
                this.columnDayRpts = new global::System.Data.DataColumn("DayRpts", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDayRpts);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnDrugInstructionNotes = new global::System.Data.DataColumn("DrugInstructionNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugInstructionNotes);
                this.columnDrugName = new global::System.Data.DataColumn("DrugName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugName);
                this.columnInsuranceCover = new global::System.Data.DataColumn("InsuranceCover", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceCover);
                this.columnDrugUsage = new global::System.Data.DataColumn("DrugUsage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugUsage);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnUnitUse = new global::System.Data.DataColumn("UnitUse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitUse);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPrescriptDetailID}, true));
                this.columnPrescriptDetailID.AutoIncrement = true;
                this.columnPrescriptDetailID.AutoIncrementSeed = -1;
                this.columnPrescriptDetailID.AutoIncrementStep = -1;
                this.columnPrescriptDetailID.AllowDBNull = false;
                this.columnPrescriptDetailID.ReadOnly = true;
                this.columnPrescriptDetailID.Unique = true;
                this.columnStrength.AllowDBNull = false;
                this.columnStrength.MaxLength = 20;
                this.columnMDose.AllowDBNull = false;
                this.columnADose.AllowDBNull = false;
                this.columnEDose.AllowDBNull = false;
                this.columnNDose.AllowDBNull = false;
                this.columnQty.AllowDBNull = false;
                this.columnDrugInstructionNotes.MaxLength = 128;
                this.columnDrugName.ReadOnly = true;
                this.columnDrugName.MaxLength = 125;
                this.columnDrugUsage.MaxLength = 128;
                this.columnUnitName.MaxLength = 64;
                this.columnUnitUse.MaxLength = 64;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptDetailsRow NewEPrescript_PrescriptDetailsRow() {
                return ((EPrescript_PrescriptDetailsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EPrescript_PrescriptDetailsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EPrescript_PrescriptDetailsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EPrescript_PrescriptDetailsRowChanged != null)) {
                    this.EPrescript_PrescriptDetailsRowChanged(this, new EPrescript_PrescriptDetailsRowChangeEvent(((EPrescript_PrescriptDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EPrescript_PrescriptDetailsRowChanging != null)) {
                    this.EPrescript_PrescriptDetailsRowChanging(this, new EPrescript_PrescriptDetailsRowChangeEvent(((EPrescript_PrescriptDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EPrescript_PrescriptDetailsRowDeleted != null)) {
                    this.EPrescript_PrescriptDetailsRowDeleted(this, new EPrescript_PrescriptDetailsRowChangeEvent(((EPrescript_PrescriptDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EPrescript_PrescriptDetailsRowDeleting != null)) {
                    this.EPrescript_PrescriptDetailsRowDeleting(this, new EPrescript_PrescriptDetailsRowChangeEvent(((EPrescript_PrescriptDetailsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEPrescript_PrescriptDetailsRow(EPrescript_PrescriptDetailsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsPrescription ds = new dsPrescription();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EPrescript_PrescriptDetailsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EPrescript_PrescriptHeaderRow : global::System.Data.DataRow {
            
            private EPrescript_PrescriptHeaderDataTable tableEPrescript_PrescriptHeader;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EPrescript_PrescriptHeaderRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEPrescript_PrescriptHeader = ((EPrescript_PrescriptHeaderDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientRecID {
                get {
                    return ((long)(this[this.tableEPrescript_PrescriptHeader.PatientRecIDColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.PatientRecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientID {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.PatientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientID\' in table \'EPrescript_PrescriptHeader\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NationalMedicalCode {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.NationalMedicalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NationalMedicalCode\' in table \'EPrescript_PrescriptHeader\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.NationalMedicalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientRecBarCode {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.PatientRecBarCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientRecBarCode\' in table \'EPrescript_PrescriptHeader\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.PatientRecBarCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CreatedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEPrescript_PrescriptHeader.CreatedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatedDate\' in table \'EPrescript_PrescriptHeader\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.CreatedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FinishedDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEPrescript_PrescriptHeader.FinishedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FinishedDate\' in table \'EPrescript_PrescriptHeader\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.FinishedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ServiceRecID {
                get {
                    return ((long)(this[this.tableEPrescript_PrescriptHeader.ServiceRecIDColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.ServiceRecIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PtRegistrationID {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.PtRegistrationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtRegistrationID\' in table \'EPrescript_PrescriptHeader\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.PtRegistrationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DoctorID {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.DoctorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoctorID\' in table \'EPrescript_PrescriptHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.DoctorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DoctorName {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.DoctorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoctorName\' in table \'EPrescript_PrescriptHeader\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.DoctorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.DrPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrPhoneNumber\' in table \'EPrescript_PrescriptHeader\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.DrPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ExamDate {
                get {
                    return ((global::System.DateTime)(this[this.tableEPrescript_PrescriptHeader.ExamDateColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.ExamDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_ProcessingType {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.V_ProcessingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_ProcessingType\' in table \'EPrescript_PrescriptHeader\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.V_ProcessingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProcessingType {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.ProcessingTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProcessingType\' in table \'EPrescript_PrescriptHeader\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.ProcessingTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_Behaving {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.V_BehavingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_Behaving\' in table \'EPrescript_PrescriptHeader\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.V_BehavingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Behaving {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.BehavingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Behaving\' in table \'EPrescript_PrescriptHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.BehavingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long IssueID {
                get {
                    return ((long)(this[this.tableEPrescript_PrescriptHeader.IssueIDColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.IssueIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime IssuedDateTime {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEPrescript_PrescriptHeader.IssuedDateTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuedDateTime\' in table \'EPrescript_PrescriptHeader\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.IssuedDateTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long IssuerID {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.IssuerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuerID\' in table \'EPrescript_PrescriptHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.IssuerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IssuerFullName {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.IssuerFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IssuerFullName\' in table \'EPrescript_PrescriptHeader\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.IssuerFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte TimesNumberIsPrinted {
                get {
                    try {
                        return ((byte)(this[this.tableEPrescript_PrescriptHeader.TimesNumberIsPrintedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TimesNumberIsPrinted\' in table \'EPrescript_PrescriptHeader\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.TimesNumberIsPrintedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_PrescriptionNotes {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.V_PrescriptionNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_PrescriptionNotes\' in table \'EPrescript_PrescriptHeader\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.V_PrescriptionNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrescriptionNotes {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.PrescriptionNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrescriptionNotes\' in table \'EPrescript_PrescriptHeader\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.PrescriptionNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrescriptionIssuedCase {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.PrescriptionIssuedCaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrescriptionIssuedCase\' in table \'EPrescript_PrescriptHeade" +
                                "r\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.PrescriptionIssuedCaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PrescriptID {
                get {
                    return ((long)(this[this.tableEPrescript_PrescriptHeader.PrescriptIDColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.PrescriptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NeedToHoldConsultation {
                get {
                    try {
                        return ((bool)(this[this.tableEPrescript_PrescriptHeader.NeedToHoldConsultationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NeedToHoldConsultation\' in table \'EPrescript_PrescriptHeade" +
                                "r\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.NeedToHoldConsultationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ConsultantDoctorID {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.ConsultantDoctorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsultantDoctorID\' in table \'EPrescript_PrescriptHeader\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.ConsultantDoctorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ConsultantDoctorFullName {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.ConsultantDoctorFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConsultantDoctorFullName\' in table \'EPrescript_PrescriptHea" +
                                "der\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.ConsultantDoctorFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AppointmentID {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.AppointmentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppointmentID\' in table \'EPrescript_PrescriptHeader\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.AppointmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AppointmentDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEPrescript_PrescriptHeader.AppointmentDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AppointmentDate\' in table \'EPrescript_PrescriptHeader\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.AppointmentDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Diagnosis {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.DiagnosisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Diagnosis\' in table \'EPrescript_PrescriptHeader\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.DiagnosisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DoctorAdvice {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.DoctorAdviceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DoctorAdvice\' in table \'EPrescript_PrescriptHeader\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.DoctorAdviceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ForOutPatient {
                get {
                    try {
                        return ((bool)(this[this.tableEPrescript_PrescriptHeader.ForOutPatientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ForOutPatient\' in table \'EPrescript_PrescriptHeader\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.ForOutPatientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_PrescriptionType {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.V_PrescriptionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_PrescriptionType\' in table \'EPrescript_PrescriptHeader\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.V_PrescriptionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrescriptionType {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.PrescriptionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrescriptionType\' in table \'EPrescript_PrescriptHeader\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.PrescriptionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool HaveBeenConsulted {
                get {
                    try {
                        return ((bool)(this[this.tableEPrescript_PrescriptHeader.HaveBeenConsultedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HaveBeenConsulted\' in table \'EPrescript_PrescriptHeader\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.HaveBeenConsultedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AuthorID {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.AuthorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuthorID\' in table \'EPrescript_PrescriptHeader\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.AuthorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AuthorFullName {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.AuthorFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AuthorFullName\' in table \'EPrescript_PrescriptHeader\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.AuthorFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreatorID {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptHeader.CreatorIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatorID\' in table \'EPrescript_PrescriptHeader\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.CreatorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CreatorFullName {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.CreatorFullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreatorFullName\' in table \'EPrescript_PrescriptHeader\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.CreatorFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AllergiesString {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.AllergiesStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AllergiesString\' in table \'EPrescript_PrescriptHeader\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.AllergiesStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WarningString {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptHeader.WarningStringColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'WarningString\' in table \'EPrescript_PrescriptHeader\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptHeader.WarningStringColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PtInfoRow EPrescript_PtInfoRow {
                get {
                    return ((EPrescript_PtInfoRow)(this.GetParentRow(this.Table.ParentRelations["EPrescript_PtInfo_EPrescript_PrescriptHeader"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EPrescript_PtInfo_EPrescript_PrescriptHeader"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientIDNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.PatientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientIDNull() {
                this[this.tableEPrescript_PrescriptHeader.PatientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNationalMedicalCodeNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.NationalMedicalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNationalMedicalCodeNull() {
                this[this.tableEPrescript_PrescriptHeader.NationalMedicalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientRecBarCodeNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.PatientRecBarCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientRecBarCodeNull() {
                this[this.tableEPrescript_PrescriptHeader.PatientRecBarCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatedDateNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.CreatedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatedDateNull() {
                this[this.tableEPrescript_PrescriptHeader.CreatedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinishedDateNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.FinishedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinishedDateNull() {
                this[this.tableEPrescript_PrescriptHeader.FinishedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPtRegistrationIDNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.PtRegistrationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPtRegistrationIDNull() {
                this[this.tableEPrescript_PrescriptHeader.PtRegistrationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDoctorIDNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.DoctorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDoctorIDNull() {
                this[this.tableEPrescript_PrescriptHeader.DoctorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDoctorNameNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.DoctorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDoctorNameNull() {
                this[this.tableEPrescript_PrescriptHeader.DoctorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrPhoneNumberNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.DrPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrPhoneNumberNull() {
                this[this.tableEPrescript_PrescriptHeader.DrPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_ProcessingTypeNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.V_ProcessingTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_ProcessingTypeNull() {
                this[this.tableEPrescript_PrescriptHeader.V_ProcessingTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProcessingTypeNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.ProcessingTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProcessingTypeNull() {
                this[this.tableEPrescript_PrescriptHeader.ProcessingTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_BehavingNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.V_BehavingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_BehavingNull() {
                this[this.tableEPrescript_PrescriptHeader.V_BehavingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBehavingNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.BehavingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBehavingNull() {
                this[this.tableEPrescript_PrescriptHeader.BehavingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIssuedDateTimeNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.IssuedDateTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIssuedDateTimeNull() {
                this[this.tableEPrescript_PrescriptHeader.IssuedDateTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIssuerIDNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.IssuerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIssuerIDNull() {
                this[this.tableEPrescript_PrescriptHeader.IssuerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIssuerFullNameNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.IssuerFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIssuerFullNameNull() {
                this[this.tableEPrescript_PrescriptHeader.IssuerFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTimesNumberIsPrintedNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.TimesNumberIsPrintedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTimesNumberIsPrintedNull() {
                this[this.tableEPrescript_PrescriptHeader.TimesNumberIsPrintedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_PrescriptionNotesNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.V_PrescriptionNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_PrescriptionNotesNull() {
                this[this.tableEPrescript_PrescriptHeader.V_PrescriptionNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrescriptionNotesNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.PrescriptionNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrescriptionNotesNull() {
                this[this.tableEPrescript_PrescriptHeader.PrescriptionNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrescriptionIssuedCaseNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.PrescriptionIssuedCaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrescriptionIssuedCaseNull() {
                this[this.tableEPrescript_PrescriptHeader.PrescriptionIssuedCaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNeedToHoldConsultationNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.NeedToHoldConsultationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNeedToHoldConsultationNull() {
                this[this.tableEPrescript_PrescriptHeader.NeedToHoldConsultationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsultantDoctorIDNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.ConsultantDoctorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsultantDoctorIDNull() {
                this[this.tableEPrescript_PrescriptHeader.ConsultantDoctorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsultantDoctorFullNameNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.ConsultantDoctorFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsultantDoctorFullNameNull() {
                this[this.tableEPrescript_PrescriptHeader.ConsultantDoctorFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAppointmentIDNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.AppointmentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAppointmentIDNull() {
                this[this.tableEPrescript_PrescriptHeader.AppointmentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAppointmentDateNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.AppointmentDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAppointmentDateNull() {
                this[this.tableEPrescript_PrescriptHeader.AppointmentDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiagnosisNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.DiagnosisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiagnosisNull() {
                this[this.tableEPrescript_PrescriptHeader.DiagnosisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDoctorAdviceNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.DoctorAdviceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDoctorAdviceNull() {
                this[this.tableEPrescript_PrescriptHeader.DoctorAdviceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsForOutPatientNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.ForOutPatientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetForOutPatientNull() {
                this[this.tableEPrescript_PrescriptHeader.ForOutPatientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_PrescriptionTypeNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.V_PrescriptionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_PrescriptionTypeNull() {
                this[this.tableEPrescript_PrescriptHeader.V_PrescriptionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrescriptionTypeNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.PrescriptionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrescriptionTypeNull() {
                this[this.tableEPrescript_PrescriptHeader.PrescriptionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHaveBeenConsultedNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.HaveBeenConsultedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHaveBeenConsultedNull() {
                this[this.tableEPrescript_PrescriptHeader.HaveBeenConsultedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAuthorIDNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.AuthorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAuthorIDNull() {
                this[this.tableEPrescript_PrescriptHeader.AuthorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAuthorFullNameNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.AuthorFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAuthorFullNameNull() {
                this[this.tableEPrescript_PrescriptHeader.AuthorFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorIDNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.CreatorIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorIDNull() {
                this[this.tableEPrescript_PrescriptHeader.CreatorIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreatorFullNameNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.CreatorFullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreatorFullNameNull() {
                this[this.tableEPrescript_PrescriptHeader.CreatorFullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAllergiesStringNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.AllergiesStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAllergiesStringNull() {
                this[this.tableEPrescript_PrescriptHeader.AllergiesStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWarningStringNull() {
                return this.IsNull(this.tableEPrescript_PrescriptHeader.WarningStringColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWarningStringNull() {
                this[this.tableEPrescript_PrescriptHeader.WarningStringColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptDetailsRow[] GetEPrescript_PrescriptDetailsRows() {
                if ((this.Table.ChildRelations["EPrescript_PrescriptHeader_EPrescript_PrescriptDetails"] == null)) {
                    return new EPrescript_PrescriptDetailsRow[0];
                }
                else {
                    return ((EPrescript_PrescriptDetailsRow[])(base.GetChildRows(this.Table.ChildRelations["EPrescript_PrescriptHeader_EPrescript_PrescriptDetails"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EPrescript_PtInfoRow : global::System.Data.DataRow {
            
            private EPrescript_PtInfoDataTable tableEPrescript_PtInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EPrescript_PtInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEPrescript_PtInfo = ((EPrescript_PtInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PatientID {
                get {
                    return ((long)(this[this.tableEPrescript_PtInfo.PatientIDColumn]));
                }
                set {
                    this[this.tableEPrescript_PtInfo.PatientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NationalMedicalCode {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PtInfo.NationalMedicalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NationalMedicalCode\' in table \'EPrescript_PtInfo\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PtInfo.NationalMedicalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PtFullName {
                get {
                    return ((string)(this[this.tableEPrescript_PtInfo.PtFullNameColumn]));
                }
                set {
                    this[this.tableEPrescript_PtInfo.PtFullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PtAge {
                get {
                    try {
                        return ((int)(this[this.tableEPrescript_PtInfo.PtAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtAge\' in table \'EPrescript_PtInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PtInfo.PtAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    return ((string)(this[this.tableEPrescript_PtInfo.GenderColumn]));
                }
                set {
                    this[this.tableEPrescript_PtInfo.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PtAddress {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PtInfo.PtAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtAddress\' in table \'EPrescript_PtInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PtInfo.PtAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientBarCode {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PtInfo.PatientBarCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientBarCode\' in table \'EPrescript_PtInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PtInfo.PatientBarCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PtInfo.PatientPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientPhoneNumber\' in table \'EPrescript_PtInfo\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PtInfo.PatientPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PatientCellPhoneNumber {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PtInfo.PatientCellPhoneNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PatientCellPhoneNumber\' in table \'EPrescript_PtInfo\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PtInfo.PatientCellPhoneNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNationalMedicalCodeNull() {
                return this.IsNull(this.tableEPrescript_PtInfo.NationalMedicalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNationalMedicalCodeNull() {
                this[this.tableEPrescript_PtInfo.NationalMedicalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPtAgeNull() {
                return this.IsNull(this.tableEPrescript_PtInfo.PtAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPtAgeNull() {
                this[this.tableEPrescript_PtInfo.PtAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPtAddressNull() {
                return this.IsNull(this.tableEPrescript_PtInfo.PtAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPtAddressNull() {
                this[this.tableEPrescript_PtInfo.PtAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientBarCodeNull() {
                return this.IsNull(this.tableEPrescript_PtInfo.PatientBarCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientBarCodeNull() {
                this[this.tableEPrescript_PtInfo.PatientBarCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientPhoneNumberNull() {
                return this.IsNull(this.tableEPrescript_PtInfo.PatientPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientPhoneNumberNull() {
                this[this.tableEPrescript_PtInfo.PatientPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPatientCellPhoneNumberNull() {
                return this.IsNull(this.tableEPrescript_PtInfo.PatientCellPhoneNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPatientCellPhoneNumberNull() {
                this[this.tableEPrescript_PtInfo.PatientCellPhoneNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptHeaderRow[] GetEPrescript_PrescriptHeaderRows() {
                if ((this.Table.ChildRelations["EPrescript_PtInfo_EPrescript_PrescriptHeader"] == null)) {
                    return new EPrescript_PrescriptHeaderRow[0];
                }
                else {
                    return ((EPrescript_PrescriptHeaderRow[])(base.GetChildRows(this.Table.ChildRelations["EPrescript_PtInfo_EPrescript_PrescriptHeader"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EPrescript_PrescriptDetailsRow : global::System.Data.DataRow {
            
            private EPrescript_PrescriptDetailsDataTable tableEPrescript_PrescriptDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EPrescript_PrescriptDetailsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEPrescript_PrescriptDetails = ((EPrescript_PrescriptDetailsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PrescriptDetailID {
                get {
                    return ((long)(this[this.tableEPrescript_PrescriptDetails.PrescriptDetailIDColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.PrescriptDetailIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DrugID {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptDetails.DrugIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugID\' in table \'EPrescript_PrescriptDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.DrugIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PrescriptID {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptDetails.PrescriptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrescriptID\' in table \'EPrescript_PrescriptDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.PrescriptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Strength {
                get {
                    return ((string)(this[this.tableEPrescript_PrescriptDetails.StrengthColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.StrengthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BeOfHIMedicineList {
                get {
                    try {
                        return ((bool)(this[this.tableEPrescript_PrescriptDetails.BeOfHIMedicineListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BeOfHIMedicineList\' in table \'EPrescript_PrescriptDetails\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.BeOfHIMedicineListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_DrugUsage {
                get {
                    try {
                        return ((long)(this[this.tableEPrescript_PrescriptDetails.V_DrugUsageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_DrugUsage\' in table \'EPrescript_PrescriptDetails\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.V_DrugUsageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float MDose {
                get {
                    return ((float)(this[this.tableEPrescript_PrescriptDetails.MDoseColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.MDoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float ADose {
                get {
                    return ((float)(this[this.tableEPrescript_PrescriptDetails.ADoseColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.ADoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float EDose {
                get {
                    return ((float)(this[this.tableEPrescript_PrescriptDetails.EDoseColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.EDoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public float NDose {
                get {
                    return ((float)(this[this.tableEPrescript_PrescriptDetails.NDoseColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.NDoseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double DayRpts {
                get {
                    try {
                        return ((double)(this[this.tableEPrescript_PrescriptDetails.DayRptsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DayRpts\' in table \'EPrescript_PrescriptDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.DayRptsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Qty {
                get {
                    return ((double)(this[this.tableEPrescript_PrescriptDetails.QtyColumn]));
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrugInstructionNotes {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptDetails.DrugInstructionNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugInstructionNotes\' in table \'EPrescript_PrescriptDetails" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.DrugInstructionNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrugName {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptDetails.DrugNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugName\' in table \'EPrescript_PrescriptDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.DrugNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool InsuranceCover {
                get {
                    try {
                        return ((bool)(this[this.tableEPrescript_PrescriptDetails.InsuranceCoverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceCover\' in table \'EPrescript_PrescriptDetails\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.InsuranceCoverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrugUsage {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptDetails.DrugUsageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugUsage\' in table \'EPrescript_PrescriptDetails\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.DrugUsageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnitName {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptDetails.UnitNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitName\' in table \'EPrescript_PrescriptDetails\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnitUse {
                get {
                    try {
                        return ((string)(this[this.tableEPrescript_PrescriptDetails.UnitUseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitUse\' in table \'EPrescript_PrescriptDetails\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableEPrescript_PrescriptDetails.UnitUseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptHeaderRow EPrescript_PrescriptHeaderRow {
                get {
                    return ((EPrescript_PrescriptHeaderRow)(this.GetParentRow(this.Table.ParentRelations["EPrescript_PrescriptHeader_EPrescript_PrescriptDetails"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["EPrescript_PrescriptHeader_EPrescript_PrescriptDetails"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugIDNull() {
                return this.IsNull(this.tableEPrescript_PrescriptDetails.DrugIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugIDNull() {
                this[this.tableEPrescript_PrescriptDetails.DrugIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrescriptIDNull() {
                return this.IsNull(this.tableEPrescript_PrescriptDetails.PrescriptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrescriptIDNull() {
                this[this.tableEPrescript_PrescriptDetails.PrescriptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBeOfHIMedicineListNull() {
                return this.IsNull(this.tableEPrescript_PrescriptDetails.BeOfHIMedicineListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBeOfHIMedicineListNull() {
                this[this.tableEPrescript_PrescriptDetails.BeOfHIMedicineListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_DrugUsageNull() {
                return this.IsNull(this.tableEPrescript_PrescriptDetails.V_DrugUsageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_DrugUsageNull() {
                this[this.tableEPrescript_PrescriptDetails.V_DrugUsageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDayRptsNull() {
                return this.IsNull(this.tableEPrescript_PrescriptDetails.DayRptsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDayRptsNull() {
                this[this.tableEPrescript_PrescriptDetails.DayRptsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugInstructionNotesNull() {
                return this.IsNull(this.tableEPrescript_PrescriptDetails.DrugInstructionNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugInstructionNotesNull() {
                this[this.tableEPrescript_PrescriptDetails.DrugInstructionNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugNameNull() {
                return this.IsNull(this.tableEPrescript_PrescriptDetails.DrugNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugNameNull() {
                this[this.tableEPrescript_PrescriptDetails.DrugNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsuranceCoverNull() {
                return this.IsNull(this.tableEPrescript_PrescriptDetails.InsuranceCoverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsuranceCoverNull() {
                this[this.tableEPrescript_PrescriptDetails.InsuranceCoverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugUsageNull() {
                return this.IsNull(this.tableEPrescript_PrescriptDetails.DrugUsageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugUsageNull() {
                this[this.tableEPrescript_PrescriptDetails.DrugUsageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitNameNull() {
                return this.IsNull(this.tableEPrescript_PrescriptDetails.UnitNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitNameNull() {
                this[this.tableEPrescript_PrescriptDetails.UnitNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitUseNull() {
                return this.IsNull(this.tableEPrescript_PrescriptDetails.UnitUseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitUseNull() {
                this[this.tableEPrescript_PrescriptDetails.UnitUseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EPrescript_PrescriptHeaderRowChangeEvent : global::System.EventArgs {
            
            private EPrescript_PrescriptHeaderRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptHeaderRowChangeEvent(EPrescript_PrescriptHeaderRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptHeaderRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EPrescript_PtInfoRowChangeEvent : global::System.EventArgs {
            
            private EPrescript_PtInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PtInfoRowChangeEvent(EPrescript_PtInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PtInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EPrescript_PrescriptDetailsRowChangeEvent : global::System.EventArgs {
            
            private EPrescript_PrescriptDetailsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptDetailsRowChangeEvent(EPrescript_PrescriptDetailsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EPrescript_PrescriptDetailsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace eHCMS.ReportLib.RptConsultations.DataSchema.dsPrescriptionTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EPrescript_PrescriptHeaderTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EPrescript_PrescriptHeaderTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EPrescript_PrescriptHeader";
            tableMapping.ColumnMappings.Add("PatientRecID", "PatientRecID");
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("NationalMedicalCode", "NationalMedicalCode");
            tableMapping.ColumnMappings.Add("PatientRecBarCode", "PatientRecBarCode");
            tableMapping.ColumnMappings.Add("CreatedDate", "CreatedDate");
            tableMapping.ColumnMappings.Add("FinishedDate", "FinishedDate");
            tableMapping.ColumnMappings.Add("ServiceRecID", "ServiceRecID");
            tableMapping.ColumnMappings.Add("PtRegistrationID", "PtRegistrationID");
            tableMapping.ColumnMappings.Add("DoctorID", "DoctorID");
            tableMapping.ColumnMappings.Add("DoctorName", "DoctorName");
            tableMapping.ColumnMappings.Add("DrPhoneNumber", "DrPhoneNumber");
            tableMapping.ColumnMappings.Add("ExamDate", "ExamDate");
            tableMapping.ColumnMappings.Add("V_ProcessingType", "V_ProcessingType");
            tableMapping.ColumnMappings.Add("ProcessingType", "ProcessingType");
            tableMapping.ColumnMappings.Add("V_Behaving", "V_Behaving");
            tableMapping.ColumnMappings.Add("Behaving", "Behaving");
            tableMapping.ColumnMappings.Add("IssueID", "IssueID");
            tableMapping.ColumnMappings.Add("IssuedDateTime", "IssuedDateTime");
            tableMapping.ColumnMappings.Add("IssuerID", "IssuerID");
            tableMapping.ColumnMappings.Add("IssuerFullName", "IssuerFullName");
            tableMapping.ColumnMappings.Add("TimesNumberIsPrinted", "TimesNumberIsPrinted");
            tableMapping.ColumnMappings.Add("V_PrescriptionNotes", "V_PrescriptionNotes");
            tableMapping.ColumnMappings.Add("PrescriptionNotes", "PrescriptionNotes");
            tableMapping.ColumnMappings.Add("PrescriptionIssuedCase", "PrescriptionIssuedCase");
            tableMapping.ColumnMappings.Add("PrescriptID", "PrescriptID");
            tableMapping.ColumnMappings.Add("NeedToHoldConsultation", "NeedToHoldConsultation");
            tableMapping.ColumnMappings.Add("ConsultantDoctorID", "ConsultantDoctorID");
            tableMapping.ColumnMappings.Add("ConsultantDoctorFullName", "ConsultantDoctorFullName");
            tableMapping.ColumnMappings.Add("AppointmentID", "AppointmentID");
            tableMapping.ColumnMappings.Add("AppointmentDate", "AppointmentDate");
            tableMapping.ColumnMappings.Add("Diagnosis", "Diagnosis");
            tableMapping.ColumnMappings.Add("DoctorAdvice", "DoctorAdvice");
            tableMapping.ColumnMappings.Add("ForOutPatient", "ForOutPatient");
            tableMapping.ColumnMappings.Add("V_PrescriptionType", "V_PrescriptionType");
            tableMapping.ColumnMappings.Add("PrescriptionType", "PrescriptionType");
            tableMapping.ColumnMappings.Add("HaveBeenConsulted", "HaveBeenConsulted");
            tableMapping.ColumnMappings.Add("AuthorID", "AuthorID");
            tableMapping.ColumnMappings.Add("AuthorFullName", "AuthorFullName");
            tableMapping.ColumnMappings.Add("CreatorID", "CreatorID");
            tableMapping.ColumnMappings.Add("CreatorFullName", "CreatorFullName");
            tableMapping.ColumnMappings.Add("AllergiesString", "AllergiesString");
            tableMapping.ColumnMappings.Add("WarningString", "WarningString");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRpt_Prescriptions_GetHeaderInfoByID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrescriptID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPrescription.EPrescript_PrescriptHeaderDataTable dataTable, global::System.Nullable<long> PrescriptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PrescriptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PrescriptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPrescription.EPrescript_PrescriptHeaderDataTable GetData(global::System.Nullable<long> PrescriptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PrescriptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PrescriptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsPrescription.EPrescript_PrescriptHeaderDataTable dataTable = new dsPrescription.EPrescript_PrescriptHeaderDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EPrescript_PtInfoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EPrescript_PtInfoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EPrescript_PtInfo";
            tableMapping.ColumnMappings.Add("PatientID", "PatientID");
            tableMapping.ColumnMappings.Add("NationalMedicalCode", "NationalMedicalCode");
            tableMapping.ColumnMappings.Add("PtFullName", "PtFullName");
            tableMapping.ColumnMappings.Add("PtAge", "PtAge");
            tableMapping.ColumnMappings.Add("Gender", "Gender");
            tableMapping.ColumnMappings.Add("PtAddress", "PtAddress");
            tableMapping.ColumnMappings.Add("PatientBarCode", "PatientBarCode");
            tableMapping.ColumnMappings.Add("PatientPhoneNumber", "PatientPhoneNumber");
            tableMapping.ColumnMappings.Add("PatientCellPhoneNumber", "PatientCellPhoneNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRpt_Patients_GetSumaryInfoByID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PatientID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPrescription.EPrescript_PtInfoDataTable dataTable, global::System.Nullable<long> PatientID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PatientID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PatientID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPrescription.EPrescript_PtInfoDataTable GetData(global::System.Nullable<long> PatientID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PatientID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PatientID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsPrescription.EPrescript_PtInfoDataTable dataTable = new dsPrescription.EPrescript_PtInfoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EPrescript_PrescriptDetailsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EPrescript_PrescriptDetailsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EPrescript_PrescriptDetails";
            tableMapping.ColumnMappings.Add("PrescriptDetailID", "PrescriptDetailID");
            tableMapping.ColumnMappings.Add("DrugID", "DrugID");
            tableMapping.ColumnMappings.Add("PrescriptID", "PrescriptID");
            tableMapping.ColumnMappings.Add("Strength", "Strength");
            tableMapping.ColumnMappings.Add("BeOfHIMedicineList", "BeOfHIMedicineList");
            tableMapping.ColumnMappings.Add("V_DrugUsage", "V_DrugUsage");
            tableMapping.ColumnMappings.Add("MDose", "MDose");
            tableMapping.ColumnMappings.Add("ADose", "ADose");
            tableMapping.ColumnMappings.Add("EDose", "EDose");
            tableMapping.ColumnMappings.Add("NDose", "NDose");
            tableMapping.ColumnMappings.Add("DayRpts", "DayRpts");
            tableMapping.ColumnMappings.Add("Qty", "Qty");
            tableMapping.ColumnMappings.Add("DrugInstructionNotes", "DrugInstructionNotes");
            tableMapping.ColumnMappings.Add("DrugName", "DrugName");
            tableMapping.ColumnMappings.Add("InsuranceCover", "InsuranceCover");
            tableMapping.ColumnMappings.Add("DrugUsage", "DrugUsage");
            tableMapping.ColumnMappings.Add("UnitName", "UnitName");
            tableMapping.ColumnMappings.Add("UnitUse", "UnitUse");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRpt_Prescriptions_GetDetailsInfoByID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PrescriptID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsPrescription.EPrescript_PrescriptDetailsDataTable dataTable, global::System.Nullable<long> PrescriptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PrescriptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PrescriptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsPrescription.EPrescript_PrescriptDetailsDataTable GetData(global::System.Nullable<long> PrescriptID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((PrescriptID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(PrescriptID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsPrescription.EPrescript_PrescriptDetailsDataTable dataTable = new dsPrescription.EPrescript_PrescriptDetailsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsPrescription dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsPrescription dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsPrescription dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsPrescription dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591