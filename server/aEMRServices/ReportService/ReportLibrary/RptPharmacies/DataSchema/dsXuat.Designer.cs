//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace eHCMS.ReportLib.RptPharmacies.DataSchema {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsXuatNoiBo")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsXuatNoiBo : global::System.Data.DataSet {
        
        private spOutwardDrugInvoices_ByIDVisitorDataTable tablespOutwardDrugInvoices_ByIDVisitor;
        
        private spOutwardDrug_ByIDInvoiceDataTable tablespOutwardDrug_ByIDInvoice;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsXuatNoiBo() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsXuatNoiBo(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["spOutwardDrugInvoices_ByIDVisitor"] != null)) {
                    base.Tables.Add(new spOutwardDrugInvoices_ByIDVisitorDataTable(ds.Tables["spOutwardDrugInvoices_ByIDVisitor"]));
                }
                if ((ds.Tables["spOutwardDrug_ByIDInvoice"] != null)) {
                    base.Tables.Add(new spOutwardDrug_ByIDInvoiceDataTable(ds.Tables["spOutwardDrug_ByIDInvoice"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spOutwardDrugInvoices_ByIDVisitorDataTable spOutwardDrugInvoices_ByIDVisitor {
            get {
                return this.tablespOutwardDrugInvoices_ByIDVisitor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public spOutwardDrug_ByIDInvoiceDataTable spOutwardDrug_ByIDInvoice {
            get {
                return this.tablespOutwardDrug_ByIDInvoice;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsXuatNoiBo cln = ((dsXuatNoiBo)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["spOutwardDrugInvoices_ByIDVisitor"] != null)) {
                    base.Tables.Add(new spOutwardDrugInvoices_ByIDVisitorDataTable(ds.Tables["spOutwardDrugInvoices_ByIDVisitor"]));
                }
                if ((ds.Tables["spOutwardDrug_ByIDInvoice"] != null)) {
                    base.Tables.Add(new spOutwardDrug_ByIDInvoiceDataTable(ds.Tables["spOutwardDrug_ByIDInvoice"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablespOutwardDrugInvoices_ByIDVisitor = ((spOutwardDrugInvoices_ByIDVisitorDataTable)(base.Tables["spOutwardDrugInvoices_ByIDVisitor"]));
            if ((initTable == true)) {
                if ((this.tablespOutwardDrugInvoices_ByIDVisitor != null)) {
                    this.tablespOutwardDrugInvoices_ByIDVisitor.InitVars();
                }
            }
            this.tablespOutwardDrug_ByIDInvoice = ((spOutwardDrug_ByIDInvoiceDataTable)(base.Tables["spOutwardDrug_ByIDInvoice"]));
            if ((initTable == true)) {
                if ((this.tablespOutwardDrug_ByIDInvoice != null)) {
                    this.tablespOutwardDrug_ByIDInvoice.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsXuatNoiBo";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsXuatNoiBo.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablespOutwardDrugInvoices_ByIDVisitor = new spOutwardDrugInvoices_ByIDVisitorDataTable();
            base.Tables.Add(this.tablespOutwardDrugInvoices_ByIDVisitor);
            this.tablespOutwardDrug_ByIDInvoice = new spOutwardDrug_ByIDInvoiceDataTable();
            base.Tables.Add(this.tablespOutwardDrug_ByIDInvoice);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespOutwardDrugInvoices_ByIDVisitor() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializespOutwardDrug_ByIDInvoice() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsXuatNoiBo ds = new dsXuatNoiBo();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spOutwardDrugInvoices_ByIDVisitorRowChangeEventHandler(object sender, spOutwardDrugInvoices_ByIDVisitorRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void spOutwardDrug_ByIDInvoiceRowChangeEventHandler(object sender, spOutwardDrug_ByIDInvoiceRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spOutwardDrugInvoices_ByIDVisitorDataTable : global::System.Data.TypedTableBase<spOutwardDrugInvoices_ByIDVisitorRow> {
            
            private global::System.Data.DataColumn columnoutiID;
            
            private global::System.Data.DataColumn columnPrescriptID;
            
            private global::System.Data.DataColumn columnIMEID;
            
            private global::System.Data.DataColumn columnHITTypeID;
            
            private global::System.Data.DataColumn columnMSCID;
            
            private global::System.Data.DataColumn columnStaffID;
            
            private global::System.Data.DataColumn columnTypID;
            
            private global::System.Data.DataColumn columnOutInvID;
            
            private global::System.Data.DataColumn columnOutInvoiceNumber;
            
            private global::System.Data.DataColumn columnOutDate;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnNumberPhone;
            
            private global::System.Data.DataColumn columnAddress;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnStoreID;
            
            private global::System.Data.DataColumn columnStoreTypeID;
            
            private global::System.Data.DataColumn columnDeptID;
            
            private global::System.Data.DataColumn columnswhlName;
            
            private global::System.Data.DataColumn columnswhlNotes;
            
            private global::System.Data.DataColumn columnswhlActive;
            
            private global::System.Data.DataColumn columnPtRegistrationID;
            
            private global::System.Data.DataColumn columnV_OutDrugInvStatus;
            
            private global::System.Data.DataColumn columnOutDrugInvStatus;
            
            private global::System.Data.DataColumn columnReqNumCode;
            
            private global::System.Data.DataColumn columnToStoreID;
            
            private global::System.Data.DataColumn columnToStoreName;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnCheckedPoint;
            
            private global::System.Data.DataColumn columnToStaffID;
            
            private global::System.Data.DataColumn columnToStaffIDName;
            
            private global::System.Data.DataColumn columnHosID;
            
            private global::System.Data.DataColumn columnHosName;
            
            private global::System.Data.DataColumn columnByCost;
            
            private global::System.Data.DataColumn columnIsHICount;
            
            private global::System.Data.DataColumn columnReturnID;
            
            private global::System.Data.DataColumn columnTypName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrugInvoices_ByIDVisitorDataTable() {
                this.TableName = "spOutwardDrugInvoices_ByIDVisitor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spOutwardDrugInvoices_ByIDVisitorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spOutwardDrugInvoices_ByIDVisitorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn outiIDColumn {
                get {
                    return this.columnoutiID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrescriptIDColumn {
                get {
                    return this.columnPrescriptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IMEIDColumn {
                get {
                    return this.columnIMEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HITTypeIDColumn {
                get {
                    return this.columnHITTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MSCIDColumn {
                get {
                    return this.columnMSCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StaffIDColumn {
                get {
                    return this.columnStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypIDColumn {
                get {
                    return this.columnTypID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutInvIDColumn {
                get {
                    return this.columnOutInvID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutInvoiceNumberColumn {
                get {
                    return this.columnOutInvoiceNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutDateColumn {
                get {
                    return this.columnOutDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberPhoneColumn {
                get {
                    return this.columnNumberPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AddressColumn {
                get {
                    return this.columnAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StoreIDColumn {
                get {
                    return this.columnStoreID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StoreTypeIDColumn {
                get {
                    return this.columnStoreTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeptIDColumn {
                get {
                    return this.columnDeptID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn swhlNameColumn {
                get {
                    return this.columnswhlName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn swhlNotesColumn {
                get {
                    return this.columnswhlNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn swhlActiveColumn {
                get {
                    return this.columnswhlActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PtRegistrationIDColumn {
                get {
                    return this.columnPtRegistrationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_OutDrugInvStatusColumn {
                get {
                    return this.columnV_OutDrugInvStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutDrugInvStatusColumn {
                get {
                    return this.columnOutDrugInvStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReqNumCodeColumn {
                get {
                    return this.columnReqNumCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToStoreIDColumn {
                get {
                    return this.columnToStoreID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToStoreNameColumn {
                get {
                    return this.columnToStoreName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckedPointColumn {
                get {
                    return this.columnCheckedPoint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToStaffIDColumn {
                get {
                    return this.columnToStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToStaffIDNameColumn {
                get {
                    return this.columnToStaffIDName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HosIDColumn {
                get {
                    return this.columnHosID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HosNameColumn {
                get {
                    return this.columnHosName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ByCostColumn {
                get {
                    return this.columnByCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsHICountColumn {
                get {
                    return this.columnIsHICount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReturnIDColumn {
                get {
                    return this.columnReturnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypNameColumn {
                get {
                    return this.columnTypName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrugInvoices_ByIDVisitorRow this[int index] {
                get {
                    return ((spOutwardDrugInvoices_ByIDVisitorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spOutwardDrugInvoices_ByIDVisitorRowChangeEventHandler spOutwardDrugInvoices_ByIDVisitorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spOutwardDrugInvoices_ByIDVisitorRowChangeEventHandler spOutwardDrugInvoices_ByIDVisitorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spOutwardDrugInvoices_ByIDVisitorRowChangeEventHandler spOutwardDrugInvoices_ByIDVisitorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spOutwardDrugInvoices_ByIDVisitorRowChangeEventHandler spOutwardDrugInvoices_ByIDVisitorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspOutwardDrugInvoices_ByIDVisitorRow(spOutwardDrugInvoices_ByIDVisitorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrugInvoices_ByIDVisitorRow AddspOutwardDrugInvoices_ByIDVisitorRow(
                        long PrescriptID, 
                        long IMEID, 
                        long HITTypeID, 
                        long MSCID, 
                        long StaffID, 
                        long TypID, 
                        string OutInvID, 
                        string OutInvoiceNumber, 
                        System.DateTime OutDate, 
                        string CustomerName, 
                        string NumberPhone, 
                        string Address, 
                        string FullName, 
                        long StoreTypeID, 
                        long DeptID, 
                        string swhlName, 
                        string swhlNotes, 
                        bool swhlActive, 
                        long PtRegistrationID, 
                        long V_OutDrugInvStatus, 
                        string OutDrugInvStatus, 
                        string ReqNumCode, 
                        long ToStoreID, 
                        string ToStoreName, 
                        string Notes, 
                        bool CheckedPoint, 
                        long ToStaffID, 
                        string ToStaffIDName, 
                        long HosID, 
                        string HosName, 
                        bool ByCost, 
                        bool IsHICount, 
                        long ReturnID, 
                        string TypName) {
                spOutwardDrugInvoices_ByIDVisitorRow rowspOutwardDrugInvoices_ByIDVisitorRow = ((spOutwardDrugInvoices_ByIDVisitorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PrescriptID,
                        IMEID,
                        HITTypeID,
                        MSCID,
                        StaffID,
                        TypID,
                        OutInvID,
                        OutInvoiceNumber,
                        OutDate,
                        CustomerName,
                        NumberPhone,
                        Address,
                        FullName,
                        null,
                        StoreTypeID,
                        DeptID,
                        swhlName,
                        swhlNotes,
                        swhlActive,
                        PtRegistrationID,
                        V_OutDrugInvStatus,
                        OutDrugInvStatus,
                        ReqNumCode,
                        ToStoreID,
                        ToStoreName,
                        Notes,
                        CheckedPoint,
                        ToStaffID,
                        ToStaffIDName,
                        HosID,
                        HosName,
                        ByCost,
                        IsHICount,
                        ReturnID,
                        TypName};
                rowspOutwardDrugInvoices_ByIDVisitorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspOutwardDrugInvoices_ByIDVisitorRow);
                return rowspOutwardDrugInvoices_ByIDVisitorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spOutwardDrugInvoices_ByIDVisitorDataTable cln = ((spOutwardDrugInvoices_ByIDVisitorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spOutwardDrugInvoices_ByIDVisitorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnoutiID = base.Columns["outiID"];
                this.columnPrescriptID = base.Columns["PrescriptID"];
                this.columnIMEID = base.Columns["IMEID"];
                this.columnHITTypeID = base.Columns["HITTypeID"];
                this.columnMSCID = base.Columns["MSCID"];
                this.columnStaffID = base.Columns["StaffID"];
                this.columnTypID = base.Columns["TypID"];
                this.columnOutInvID = base.Columns["OutInvID"];
                this.columnOutInvoiceNumber = base.Columns["OutInvoiceNumber"];
                this.columnOutDate = base.Columns["OutDate"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnNumberPhone = base.Columns["NumberPhone"];
                this.columnAddress = base.Columns["Address"];
                this.columnFullName = base.Columns["FullName"];
                this.columnStoreID = base.Columns["StoreID"];
                this.columnStoreTypeID = base.Columns["StoreTypeID"];
                this.columnDeptID = base.Columns["DeptID"];
                this.columnswhlName = base.Columns["swhlName"];
                this.columnswhlNotes = base.Columns["swhlNotes"];
                this.columnswhlActive = base.Columns["swhlActive"];
                this.columnPtRegistrationID = base.Columns["PtRegistrationID"];
                this.columnV_OutDrugInvStatus = base.Columns["V_OutDrugInvStatus"];
                this.columnOutDrugInvStatus = base.Columns["OutDrugInvStatus"];
                this.columnReqNumCode = base.Columns["ReqNumCode"];
                this.columnToStoreID = base.Columns["ToStoreID"];
                this.columnToStoreName = base.Columns["ToStoreName"];
                this.columnNotes = base.Columns["Notes"];
                this.columnCheckedPoint = base.Columns["CheckedPoint"];
                this.columnToStaffID = base.Columns["ToStaffID"];
                this.columnToStaffIDName = base.Columns["ToStaffIDName"];
                this.columnHosID = base.Columns["HosID"];
                this.columnHosName = base.Columns["HosName"];
                this.columnByCost = base.Columns["ByCost"];
                this.columnIsHICount = base.Columns["IsHICount"];
                this.columnReturnID = base.Columns["ReturnID"];
                this.columnTypName = base.Columns["TypName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnoutiID = new global::System.Data.DataColumn("outiID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoutiID);
                this.columnPrescriptID = new global::System.Data.DataColumn("PrescriptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrescriptID);
                this.columnIMEID = new global::System.Data.DataColumn("IMEID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMEID);
                this.columnHITTypeID = new global::System.Data.DataColumn("HITTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHITTypeID);
                this.columnMSCID = new global::System.Data.DataColumn("MSCID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMSCID);
                this.columnStaffID = new global::System.Data.DataColumn("StaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID);
                this.columnTypID = new global::System.Data.DataColumn("TypID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypID);
                this.columnOutInvID = new global::System.Data.DataColumn("OutInvID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutInvID);
                this.columnOutInvoiceNumber = new global::System.Data.DataColumn("OutInvoiceNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutInvoiceNumber);
                this.columnOutDate = new global::System.Data.DataColumn("OutDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutDate);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnNumberPhone = new global::System.Data.DataColumn("NumberPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberPhone);
                this.columnAddress = new global::System.Data.DataColumn("Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnStoreID = new global::System.Data.DataColumn("StoreID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreID);
                this.columnStoreTypeID = new global::System.Data.DataColumn("StoreTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStoreTypeID);
                this.columnDeptID = new global::System.Data.DataColumn("DeptID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeptID);
                this.columnswhlName = new global::System.Data.DataColumn("swhlName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnswhlName);
                this.columnswhlNotes = new global::System.Data.DataColumn("swhlNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnswhlNotes);
                this.columnswhlActive = new global::System.Data.DataColumn("swhlActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnswhlActive);
                this.columnPtRegistrationID = new global::System.Data.DataColumn("PtRegistrationID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPtRegistrationID);
                this.columnV_OutDrugInvStatus = new global::System.Data.DataColumn("V_OutDrugInvStatus", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_OutDrugInvStatus);
                this.columnOutDrugInvStatus = new global::System.Data.DataColumn("OutDrugInvStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutDrugInvStatus);
                this.columnReqNumCode = new global::System.Data.DataColumn("ReqNumCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReqNumCode);
                this.columnToStoreID = new global::System.Data.DataColumn("ToStoreID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToStoreID);
                this.columnToStoreName = new global::System.Data.DataColumn("ToStoreName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToStoreName);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnCheckedPoint = new global::System.Data.DataColumn("CheckedPoint", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckedPoint);
                this.columnToStaffID = new global::System.Data.DataColumn("ToStaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToStaffID);
                this.columnToStaffIDName = new global::System.Data.DataColumn("ToStaffIDName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToStaffIDName);
                this.columnHosID = new global::System.Data.DataColumn("HosID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHosID);
                this.columnHosName = new global::System.Data.DataColumn("HosName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHosName);
                this.columnByCost = new global::System.Data.DataColumn("ByCost", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnByCost);
                this.columnIsHICount = new global::System.Data.DataColumn("IsHICount", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHICount);
                this.columnReturnID = new global::System.Data.DataColumn("ReturnID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReturnID);
                this.columnTypName = new global::System.Data.DataColumn("TypName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypName);
                this.columnoutiID.AutoIncrement = true;
                this.columnoutiID.AutoIncrementSeed = -1;
                this.columnoutiID.AutoIncrementStep = -1;
                this.columnoutiID.AllowDBNull = false;
                this.columnoutiID.ReadOnly = true;
                this.columnOutInvID.MaxLength = 15;
                this.columnOutInvoiceNumber.MaxLength = 15;
                this.columnCustomerName.MaxLength = 128;
                this.columnNumberPhone.ReadOnly = true;
                this.columnNumberPhone.MaxLength = 80;
                this.columnAddress.ReadOnly = true;
                this.columnAddress.MaxLength = 80;
                this.columnFullName.MaxLength = 65;
                this.columnStoreID.AutoIncrement = true;
                this.columnStoreID.AutoIncrementSeed = -1;
                this.columnStoreID.AutoIncrementStep = -1;
                this.columnStoreID.ReadOnly = true;
                this.columnswhlName.MaxLength = 128;
                this.columnswhlNotes.MaxLength = 128;
                this.columnOutDrugInvStatus.ReadOnly = true;
                this.columnOutDrugInvStatus.MaxLength = 125;
                this.columnReqNumCode.MaxLength = 25;
                this.columnToStoreName.MaxLength = 128;
                this.columnNotes.MaxLength = 256;
                this.columnToStaffIDName.MaxLength = 65;
                this.columnHosName.MaxLength = 128;
                this.columnTypName.MaxLength = 64;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrugInvoices_ByIDVisitorRow NewspOutwardDrugInvoices_ByIDVisitorRow() {
                return ((spOutwardDrugInvoices_ByIDVisitorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spOutwardDrugInvoices_ByIDVisitorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spOutwardDrugInvoices_ByIDVisitorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spOutwardDrugInvoices_ByIDVisitorRowChanged != null)) {
                    this.spOutwardDrugInvoices_ByIDVisitorRowChanged(this, new spOutwardDrugInvoices_ByIDVisitorRowChangeEvent(((spOutwardDrugInvoices_ByIDVisitorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spOutwardDrugInvoices_ByIDVisitorRowChanging != null)) {
                    this.spOutwardDrugInvoices_ByIDVisitorRowChanging(this, new spOutwardDrugInvoices_ByIDVisitorRowChangeEvent(((spOutwardDrugInvoices_ByIDVisitorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spOutwardDrugInvoices_ByIDVisitorRowDeleted != null)) {
                    this.spOutwardDrugInvoices_ByIDVisitorRowDeleted(this, new spOutwardDrugInvoices_ByIDVisitorRowChangeEvent(((spOutwardDrugInvoices_ByIDVisitorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spOutwardDrugInvoices_ByIDVisitorRowDeleting != null)) {
                    this.spOutwardDrugInvoices_ByIDVisitorRowDeleting(this, new spOutwardDrugInvoices_ByIDVisitorRowChangeEvent(((spOutwardDrugInvoices_ByIDVisitorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespOutwardDrugInvoices_ByIDVisitorRow(spOutwardDrugInvoices_ByIDVisitorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsXuatNoiBo ds = new dsXuatNoiBo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spOutwardDrugInvoices_ByIDVisitorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class spOutwardDrug_ByIDInvoiceDataTable : global::System.Data.TypedTableBase<spOutwardDrug_ByIDInvoiceRow> {
            
            private global::System.Data.DataColumn columnOutID;
            
            private global::System.Data.DataColumn columnoutiID;
            
            private global::System.Data.DataColumn columnDrugID;
            
            private global::System.Data.DataColumn columnInID;
            
            private global::System.Data.DataColumn columnOutHIRebate;
            
            private global::System.Data.DataColumn columnOutQuantity;
            
            private global::System.Data.DataColumn columnOutPrice;
            
            private global::System.Data.DataColumn columnOutHIAllowedPrice;
            
            private global::System.Data.DataColumn columnOutPriceDifference;
            
            private global::System.Data.DataColumn columnOutNotes;
            
            private global::System.Data.DataColumn columnOutAmount;
            
            private global::System.Data.DataColumn columnOutAmountCoPay;
            
            private global::System.Data.DataColumn columnQty;
            
            private global::System.Data.DataColumn columnSellingPrice;
            
            private global::System.Data.DataColumn columnRemaining;
            
            private global::System.Data.DataColumn columnBrandName;
            
            private global::System.Data.DataColumn columnSdlDescription;
            
            private global::System.Data.DataColumn columnContent;
            
            private global::System.Data.DataColumn columnAdministration;
            
            private global::System.Data.DataColumn columnQtyReturn;
            
            private global::System.Data.DataColumn columnInsuranceCover;
            
            private global::System.Data.DataColumn columnHIDrugCode;
            
            private global::System.Data.DataColumn columnVisa;
            
            private global::System.Data.DataColumn columnPackaging;
            
            private global::System.Data.DataColumn columnUnitID;
            
            private global::System.Data.DataColumn columnUnitCode;
            
            private global::System.Data.DataColumn columnUnitName;
            
            private global::System.Data.DataColumn columnUnitActive;
            
            private global::System.Data.DataColumn columnUnitUse;
            
            private global::System.Data.DataColumn columnUnitUseID;
            
            private global::System.Data.DataColumn columnSdlID;
            
            private global::System.Data.DataColumn columnStaffID;
            
            private global::System.Data.DataColumn columninviID;
            
            private global::System.Data.DataColumn columnInBatchNumber;
            
            private global::System.Data.DataColumn columnInProductionDate;
            
            private global::System.Data.DataColumn columnInExpiryDate;
            
            private global::System.Data.DataColumn columnInQuantity;
            
            private global::System.Data.DataColumn columnInBuyingPrice;
            
            private global::System.Data.DataColumn columnNormalPrice;
            
            private global::System.Data.DataColumn columnHIPatientPrice;
            
            private global::System.Data.DataColumn columnHIAllowedPrice;
            
            private global::System.Data.DataColumn columnIsPercentage;
            
            private global::System.Data.DataColumn columnInCost;
            
            private global::System.Data.DataColumn columnPsID;
            
            private global::System.Data.DataColumn columnAtID;
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnDrugClassID;
            
            private global::System.Data.DataColumn columnGenericName;
            
            private global::System.Data.DataColumn columnDrugDescription;
            
            private global::System.Data.DataColumn columnComposition;
            
            private global::System.Data.DataColumn columnActiveIngredient;
            
            private global::System.Data.DataColumn columnIndication;
            
            private global::System.Data.DataColumn columnContraindication;
            
            private global::System.Data.DataColumn columnDosage;
            
            private global::System.Data.DataColumn columnPrecaution_Warn;
            
            private global::System.Data.DataColumn columnSideEffects;
            
            private global::System.Data.DataColumn columnInteraction;
            
            private global::System.Data.DataColumn columnAdvTimeBeforeExpire;
            
            private global::System.Data.DataColumn columnOutNotes1;
            
            private global::System.Data.DataColumn columnIsConsult;
            
            private global::System.Data.DataColumn columnDIsActive;
            
            private global::System.Data.DataColumn columnDrugCode;
            
            private global::System.Data.DataColumn columnIsMedDept;
            
            private global::System.Data.DataColumn columnUnitPackaging;
            
            private global::System.Data.DataColumn columnNumberOfEstimatedMonths;
            
            private global::System.Data.DataColumn columnFactorSafety;
            
            private global::System.Data.DataColumn columnCountryName;
            
            private global::System.Data.DataColumn columnCountryCode;
            
            private global::System.Data.DataColumn columnFaName;
            
            private global::System.Data.DataColumn columnFaDescription;
            
            private global::System.Data.DataColumn columnDrugClassCode;
            
            private global::System.Data.DataColumn columnFaActive;
            
            private global::System.Data.DataColumn columnV_MedProductType;
            
            private global::System.Data.DataColumn columnParDrugClassID;
            
            private global::System.Data.DataColumn columnPCOID;
            
            private global::System.Data.DataColumn columnPCOName;
            
            private global::System.Data.DataColumn columnPCOAddress;
            
            private global::System.Data.DataColumn columnPCOState;
            
            private global::System.Data.DataColumn columnPCOZipCode;
            
            private global::System.Data.DataColumn columnCountryIDNSX;
            
            private global::System.Data.DataColumn columnPCOTelephone;
            
            private global::System.Data.DataColumn columnContactName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrug_ByIDInvoiceDataTable() {
                this.TableName = "spOutwardDrug_ByIDInvoice";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spOutwardDrug_ByIDInvoiceDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected spOutwardDrug_ByIDInvoiceDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutIDColumn {
                get {
                    return this.columnOutID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn outiIDColumn {
                get {
                    return this.columnoutiID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugIDColumn {
                get {
                    return this.columnDrugID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InIDColumn {
                get {
                    return this.columnInID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutHIRebateColumn {
                get {
                    return this.columnOutHIRebate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutQuantityColumn {
                get {
                    return this.columnOutQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutPriceColumn {
                get {
                    return this.columnOutPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutHIAllowedPriceColumn {
                get {
                    return this.columnOutHIAllowedPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutPriceDifferenceColumn {
                get {
                    return this.columnOutPriceDifference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutNotesColumn {
                get {
                    return this.columnOutNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutAmountColumn {
                get {
                    return this.columnOutAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutAmountCoPayColumn {
                get {
                    return this.columnOutAmountCoPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QtyColumn {
                get {
                    return this.columnQty;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellingPriceColumn {
                get {
                    return this.columnSellingPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RemainingColumn {
                get {
                    return this.columnRemaining;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BrandNameColumn {
                get {
                    return this.columnBrandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SdlDescriptionColumn {
                get {
                    return this.columnSdlDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContentColumn {
                get {
                    return this.columnContent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdministrationColumn {
                get {
                    return this.columnAdministration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn QtyReturnColumn {
                get {
                    return this.columnQtyReturn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InsuranceCoverColumn {
                get {
                    return this.columnInsuranceCover;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIDrugCodeColumn {
                get {
                    return this.columnHIDrugCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VisaColumn {
                get {
                    return this.columnVisa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PackagingColumn {
                get {
                    return this.columnPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitIDColumn {
                get {
                    return this.columnUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitCodeColumn {
                get {
                    return this.columnUnitCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitActiveColumn {
                get {
                    return this.columnUnitActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitUseColumn {
                get {
                    return this.columnUnitUse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitUseIDColumn {
                get {
                    return this.columnUnitUseID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SdlIDColumn {
                get {
                    return this.columnSdlID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StaffIDColumn {
                get {
                    return this.columnStaffID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn inviIDColumn {
                get {
                    return this.columninviID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InBatchNumberColumn {
                get {
                    return this.columnInBatchNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InProductionDateColumn {
                get {
                    return this.columnInProductionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InExpiryDateColumn {
                get {
                    return this.columnInExpiryDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InQuantityColumn {
                get {
                    return this.columnInQuantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InBuyingPriceColumn {
                get {
                    return this.columnInBuyingPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NormalPriceColumn {
                get {
                    return this.columnNormalPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIPatientPriceColumn {
                get {
                    return this.columnHIPatientPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HIAllowedPriceColumn {
                get {
                    return this.columnHIAllowedPrice;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsPercentageColumn {
                get {
                    return this.columnIsPercentage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InCostColumn {
                get {
                    return this.columnInCost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PsIDColumn {
                get {
                    return this.columnPsID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AtIDColumn {
                get {
                    return this.columnAtID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugClassIDColumn {
                get {
                    return this.columnDrugClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenericNameColumn {
                get {
                    return this.columnGenericName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugDescriptionColumn {
                get {
                    return this.columnDrugDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompositionColumn {
                get {
                    return this.columnComposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActiveIngredientColumn {
                get {
                    return this.columnActiveIngredient;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IndicationColumn {
                get {
                    return this.columnIndication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContraindicationColumn {
                get {
                    return this.columnContraindication;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DosageColumn {
                get {
                    return this.columnDosage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Precaution_WarnColumn {
                get {
                    return this.columnPrecaution_Warn;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SideEffectsColumn {
                get {
                    return this.columnSideEffects;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InteractionColumn {
                get {
                    return this.columnInteraction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdvTimeBeforeExpireColumn {
                get {
                    return this.columnAdvTimeBeforeExpire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutNotes1Column {
                get {
                    return this.columnOutNotes1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsConsultColumn {
                get {
                    return this.columnIsConsult;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIsActiveColumn {
                get {
                    return this.columnDIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugCodeColumn {
                get {
                    return this.columnDrugCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsMedDeptColumn {
                get {
                    return this.columnIsMedDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UnitPackagingColumn {
                get {
                    return this.columnUnitPackaging;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumberOfEstimatedMonthsColumn {
                get {
                    return this.columnNumberOfEstimatedMonths;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FactorSafetyColumn {
                get {
                    return this.columnFactorSafety;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryNameColumn {
                get {
                    return this.columnCountryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryCodeColumn {
                get {
                    return this.columnCountryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaNameColumn {
                get {
                    return this.columnFaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaDescriptionColumn {
                get {
                    return this.columnFaDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DrugClassCodeColumn {
                get {
                    return this.columnDrugClassCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaActiveColumn {
                get {
                    return this.columnFaActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn V_MedProductTypeColumn {
                get {
                    return this.columnV_MedProductType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParDrugClassIDColumn {
                get {
                    return this.columnParDrugClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCOIDColumn {
                get {
                    return this.columnPCOID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCONameColumn {
                get {
                    return this.columnPCOName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCOAddressColumn {
                get {
                    return this.columnPCOAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCOStateColumn {
                get {
                    return this.columnPCOState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCOZipCodeColumn {
                get {
                    return this.columnPCOZipCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryIDNSXColumn {
                get {
                    return this.columnCountryIDNSX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PCOTelephoneColumn {
                get {
                    return this.columnPCOTelephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContactNameColumn {
                get {
                    return this.columnContactName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrug_ByIDInvoiceRow this[int index] {
                get {
                    return ((spOutwardDrug_ByIDInvoiceRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spOutwardDrug_ByIDInvoiceRowChangeEventHandler spOutwardDrug_ByIDInvoiceRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spOutwardDrug_ByIDInvoiceRowChangeEventHandler spOutwardDrug_ByIDInvoiceRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spOutwardDrug_ByIDInvoiceRowChangeEventHandler spOutwardDrug_ByIDInvoiceRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event spOutwardDrug_ByIDInvoiceRowChangeEventHandler spOutwardDrug_ByIDInvoiceRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddspOutwardDrug_ByIDInvoiceRow(spOutwardDrug_ByIDInvoiceRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrug_ByIDInvoiceRow AddspOutwardDrug_ByIDInvoiceRow(
                        long outiID, 
                        long DrugID, 
                        long InID, 
                        decimal OutHIRebate, 
                        int OutQuantity, 
                        decimal OutPrice, 
                        decimal OutHIAllowedPrice, 
                        decimal OutPriceDifference, 
                        string OutNotes, 
                        decimal OutAmount, 
                        decimal OutAmountCoPay, 
                        int Qty, 
                        decimal SellingPrice, 
                        int Remaining, 
                        string BrandName, 
                        string SdlDescription, 
                        string Content, 
                        string Administration, 
                        int QtyReturn, 
                        bool InsuranceCover, 
                        string HIDrugCode, 
                        string Visa, 
                        string Packaging, 
                        string UnitCode, 
                        string UnitName, 
                        bool UnitActive, 
                        string UnitUse, 
                        long UnitUseID, 
                        long SdlID, 
                        long StaffID, 
                        long inviID, 
                        string InBatchNumber, 
                        System.DateTime InProductionDate, 
                        System.DateTime InExpiryDate, 
                        int InQuantity, 
                        decimal InBuyingPrice, 
                        decimal NormalPrice, 
                        decimal HIPatientPrice, 
                        decimal HIAllowedPrice, 
                        bool IsPercentage, 
                        decimal InCost, 
                        long PsID, 
                        long AtID, 
                        long CountryID, 
                        long DrugClassID, 
                        string GenericName, 
                        string DrugDescription, 
                        string Composition, 
                        string ActiveIngredient, 
                        string Indication, 
                        string Contraindication, 
                        string Dosage, 
                        string Precaution_Warn, 
                        string SideEffects, 
                        string Interaction, 
                        int AdvTimeBeforeExpire, 
                        string OutNotes1, 
                        bool IsConsult, 
                        bool DIsActive, 
                        string DrugCode, 
                        byte IsMedDept, 
                        int UnitPackaging, 
                        int NumberOfEstimatedMonths, 
                        int FactorSafety, 
                        string CountryName, 
                        string CountryCode, 
                        string FaName, 
                        string FaDescription, 
                        string DrugClassCode, 
                        bool FaActive, 
                        long V_MedProductType, 
                        long ParDrugClassID, 
                        long PCOID, 
                        string PCOName, 
                        string PCOAddress, 
                        string PCOState, 
                        string PCOZipCode, 
                        long CountryIDNSX, 
                        string PCOTelephone, 
                        string ContactName) {
                spOutwardDrug_ByIDInvoiceRow rowspOutwardDrug_ByIDInvoiceRow = ((spOutwardDrug_ByIDInvoiceRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        outiID,
                        DrugID,
                        InID,
                        OutHIRebate,
                        OutQuantity,
                        OutPrice,
                        OutHIAllowedPrice,
                        OutPriceDifference,
                        OutNotes,
                        OutAmount,
                        OutAmountCoPay,
                        Qty,
                        SellingPrice,
                        Remaining,
                        BrandName,
                        SdlDescription,
                        Content,
                        Administration,
                        QtyReturn,
                        InsuranceCover,
                        HIDrugCode,
                        Visa,
                        Packaging,
                        null,
                        UnitCode,
                        UnitName,
                        UnitActive,
                        UnitUse,
                        UnitUseID,
                        SdlID,
                        StaffID,
                        inviID,
                        InBatchNumber,
                        InProductionDate,
                        InExpiryDate,
                        InQuantity,
                        InBuyingPrice,
                        NormalPrice,
                        HIPatientPrice,
                        HIAllowedPrice,
                        IsPercentage,
                        InCost,
                        PsID,
                        AtID,
                        CountryID,
                        DrugClassID,
                        GenericName,
                        DrugDescription,
                        Composition,
                        ActiveIngredient,
                        Indication,
                        Contraindication,
                        Dosage,
                        Precaution_Warn,
                        SideEffects,
                        Interaction,
                        AdvTimeBeforeExpire,
                        OutNotes1,
                        IsConsult,
                        DIsActive,
                        DrugCode,
                        IsMedDept,
                        UnitPackaging,
                        NumberOfEstimatedMonths,
                        FactorSafety,
                        CountryName,
                        CountryCode,
                        FaName,
                        FaDescription,
                        DrugClassCode,
                        FaActive,
                        V_MedProductType,
                        ParDrugClassID,
                        PCOID,
                        PCOName,
                        PCOAddress,
                        PCOState,
                        PCOZipCode,
                        CountryIDNSX,
                        PCOTelephone,
                        ContactName};
                rowspOutwardDrug_ByIDInvoiceRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowspOutwardDrug_ByIDInvoiceRow);
                return rowspOutwardDrug_ByIDInvoiceRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                spOutwardDrug_ByIDInvoiceDataTable cln = ((spOutwardDrug_ByIDInvoiceDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new spOutwardDrug_ByIDInvoiceDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnOutID = base.Columns["OutID"];
                this.columnoutiID = base.Columns["outiID"];
                this.columnDrugID = base.Columns["DrugID"];
                this.columnInID = base.Columns["InID"];
                this.columnOutHIRebate = base.Columns["OutHIRebate"];
                this.columnOutQuantity = base.Columns["OutQuantity"];
                this.columnOutPrice = base.Columns["OutPrice"];
                this.columnOutHIAllowedPrice = base.Columns["OutHIAllowedPrice"];
                this.columnOutPriceDifference = base.Columns["OutPriceDifference"];
                this.columnOutNotes = base.Columns["OutNotes"];
                this.columnOutAmount = base.Columns["OutAmount"];
                this.columnOutAmountCoPay = base.Columns["OutAmountCoPay"];
                this.columnQty = base.Columns["Qty"];
                this.columnSellingPrice = base.Columns["SellingPrice"];
                this.columnRemaining = base.Columns["Remaining"];
                this.columnBrandName = base.Columns["BrandName"];
                this.columnSdlDescription = base.Columns["SdlDescription"];
                this.columnContent = base.Columns["Content"];
                this.columnAdministration = base.Columns["Administration"];
                this.columnQtyReturn = base.Columns["QtyReturn"];
                this.columnInsuranceCover = base.Columns["InsuranceCover"];
                this.columnHIDrugCode = base.Columns["HIDrugCode"];
                this.columnVisa = base.Columns["Visa"];
                this.columnPackaging = base.Columns["Packaging"];
                this.columnUnitID = base.Columns["UnitID"];
                this.columnUnitCode = base.Columns["UnitCode"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnUnitActive = base.Columns["UnitActive"];
                this.columnUnitUse = base.Columns["UnitUse"];
                this.columnUnitUseID = base.Columns["UnitUseID"];
                this.columnSdlID = base.Columns["SdlID"];
                this.columnStaffID = base.Columns["StaffID"];
                this.columninviID = base.Columns["inviID"];
                this.columnInBatchNumber = base.Columns["InBatchNumber"];
                this.columnInProductionDate = base.Columns["InProductionDate"];
                this.columnInExpiryDate = base.Columns["InExpiryDate"];
                this.columnInQuantity = base.Columns["InQuantity"];
                this.columnInBuyingPrice = base.Columns["InBuyingPrice"];
                this.columnNormalPrice = base.Columns["NormalPrice"];
                this.columnHIPatientPrice = base.Columns["HIPatientPrice"];
                this.columnHIAllowedPrice = base.Columns["HIAllowedPrice"];
                this.columnIsPercentage = base.Columns["IsPercentage"];
                this.columnInCost = base.Columns["InCost"];
                this.columnPsID = base.Columns["PsID"];
                this.columnAtID = base.Columns["AtID"];
                this.columnCountryID = base.Columns["CountryID"];
                this.columnDrugClassID = base.Columns["DrugClassID"];
                this.columnGenericName = base.Columns["GenericName"];
                this.columnDrugDescription = base.Columns["DrugDescription"];
                this.columnComposition = base.Columns["Composition"];
                this.columnActiveIngredient = base.Columns["ActiveIngredient"];
                this.columnIndication = base.Columns["Indication"];
                this.columnContraindication = base.Columns["Contraindication"];
                this.columnDosage = base.Columns["Dosage"];
                this.columnPrecaution_Warn = base.Columns["Precaution_Warn"];
                this.columnSideEffects = base.Columns["SideEffects"];
                this.columnInteraction = base.Columns["Interaction"];
                this.columnAdvTimeBeforeExpire = base.Columns["AdvTimeBeforeExpire"];
                this.columnOutNotes1 = base.Columns["OutNotes1"];
                this.columnIsConsult = base.Columns["IsConsult"];
                this.columnDIsActive = base.Columns["DIsActive"];
                this.columnDrugCode = base.Columns["DrugCode"];
                this.columnIsMedDept = base.Columns["IsMedDept"];
                this.columnUnitPackaging = base.Columns["UnitPackaging"];
                this.columnNumberOfEstimatedMonths = base.Columns["NumberOfEstimatedMonths"];
                this.columnFactorSafety = base.Columns["FactorSafety"];
                this.columnCountryName = base.Columns["CountryName"];
                this.columnCountryCode = base.Columns["CountryCode"];
                this.columnFaName = base.Columns["FaName"];
                this.columnFaDescription = base.Columns["FaDescription"];
                this.columnDrugClassCode = base.Columns["DrugClassCode"];
                this.columnFaActive = base.Columns["FaActive"];
                this.columnV_MedProductType = base.Columns["V_MedProductType"];
                this.columnParDrugClassID = base.Columns["ParDrugClassID"];
                this.columnPCOID = base.Columns["PCOID"];
                this.columnPCOName = base.Columns["PCOName"];
                this.columnPCOAddress = base.Columns["PCOAddress"];
                this.columnPCOState = base.Columns["PCOState"];
                this.columnPCOZipCode = base.Columns["PCOZipCode"];
                this.columnCountryIDNSX = base.Columns["CountryIDNSX"];
                this.columnPCOTelephone = base.Columns["PCOTelephone"];
                this.columnContactName = base.Columns["ContactName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnOutID = new global::System.Data.DataColumn("OutID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutID);
                this.columnoutiID = new global::System.Data.DataColumn("outiID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoutiID);
                this.columnDrugID = new global::System.Data.DataColumn("DrugID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugID);
                this.columnInID = new global::System.Data.DataColumn("InID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInID);
                this.columnOutHIRebate = new global::System.Data.DataColumn("OutHIRebate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutHIRebate);
                this.columnOutQuantity = new global::System.Data.DataColumn("OutQuantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutQuantity);
                this.columnOutPrice = new global::System.Data.DataColumn("OutPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutPrice);
                this.columnOutHIAllowedPrice = new global::System.Data.DataColumn("OutHIAllowedPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutHIAllowedPrice);
                this.columnOutPriceDifference = new global::System.Data.DataColumn("OutPriceDifference", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutPriceDifference);
                this.columnOutNotes = new global::System.Data.DataColumn("OutNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutNotes);
                this.columnOutAmount = new global::System.Data.DataColumn("OutAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutAmount);
                this.columnOutAmountCoPay = new global::System.Data.DataColumn("OutAmountCoPay", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutAmountCoPay);
                this.columnQty = new global::System.Data.DataColumn("Qty", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQty);
                this.columnSellingPrice = new global::System.Data.DataColumn("SellingPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellingPrice);
                this.columnRemaining = new global::System.Data.DataColumn("Remaining", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemaining);
                this.columnBrandName = new global::System.Data.DataColumn("BrandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBrandName);
                this.columnSdlDescription = new global::System.Data.DataColumn("SdlDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSdlDescription);
                this.columnContent = new global::System.Data.DataColumn("Content", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContent);
                this.columnAdministration = new global::System.Data.DataColumn("Administration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdministration);
                this.columnQtyReturn = new global::System.Data.DataColumn("QtyReturn", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQtyReturn);
                this.columnInsuranceCover = new global::System.Data.DataColumn("InsuranceCover", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsuranceCover);
                this.columnHIDrugCode = new global::System.Data.DataColumn("HIDrugCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIDrugCode);
                this.columnVisa = new global::System.Data.DataColumn("Visa", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVisa);
                this.columnPackaging = new global::System.Data.DataColumn("Packaging", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackaging);
                this.columnUnitID = new global::System.Data.DataColumn("UnitID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitID);
                this.columnUnitCode = new global::System.Data.DataColumn("UnitCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitCode);
                this.columnUnitName = new global::System.Data.DataColumn("UnitName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnUnitActive = new global::System.Data.DataColumn("UnitActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitActive);
                this.columnUnitUse = new global::System.Data.DataColumn("UnitUse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitUse);
                this.columnUnitUseID = new global::System.Data.DataColumn("UnitUseID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitUseID);
                this.columnSdlID = new global::System.Data.DataColumn("SdlID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSdlID);
                this.columnStaffID = new global::System.Data.DataColumn("StaffID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStaffID);
                this.columninviID = new global::System.Data.DataColumn("inviID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninviID);
                this.columnInBatchNumber = new global::System.Data.DataColumn("InBatchNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInBatchNumber);
                this.columnInProductionDate = new global::System.Data.DataColumn("InProductionDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInProductionDate);
                this.columnInExpiryDate = new global::System.Data.DataColumn("InExpiryDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInExpiryDate);
                this.columnInQuantity = new global::System.Data.DataColumn("InQuantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInQuantity);
                this.columnInBuyingPrice = new global::System.Data.DataColumn("InBuyingPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInBuyingPrice);
                this.columnNormalPrice = new global::System.Data.DataColumn("NormalPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormalPrice);
                this.columnHIPatientPrice = new global::System.Data.DataColumn("HIPatientPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIPatientPrice);
                this.columnHIAllowedPrice = new global::System.Data.DataColumn("HIAllowedPrice", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHIAllowedPrice);
                this.columnIsPercentage = new global::System.Data.DataColumn("IsPercentage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPercentage);
                this.columnInCost = new global::System.Data.DataColumn("InCost", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInCost);
                this.columnPsID = new global::System.Data.DataColumn("PsID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPsID);
                this.columnAtID = new global::System.Data.DataColumn("AtID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtID);
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnDrugClassID = new global::System.Data.DataColumn("DrugClassID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugClassID);
                this.columnGenericName = new global::System.Data.DataColumn("GenericName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGenericName);
                this.columnDrugDescription = new global::System.Data.DataColumn("DrugDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugDescription);
                this.columnComposition = new global::System.Data.DataColumn("Composition", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComposition);
                this.columnActiveIngredient = new global::System.Data.DataColumn("ActiveIngredient", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActiveIngredient);
                this.columnIndication = new global::System.Data.DataColumn("Indication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndication);
                this.columnContraindication = new global::System.Data.DataColumn("Contraindication", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContraindication);
                this.columnDosage = new global::System.Data.DataColumn("Dosage", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDosage);
                this.columnPrecaution_Warn = new global::System.Data.DataColumn("Precaution_Warn", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrecaution_Warn);
                this.columnSideEffects = new global::System.Data.DataColumn("SideEffects", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSideEffects);
                this.columnInteraction = new global::System.Data.DataColumn("Interaction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInteraction);
                this.columnAdvTimeBeforeExpire = new global::System.Data.DataColumn("AdvTimeBeforeExpire", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdvTimeBeforeExpire);
                this.columnOutNotes1 = new global::System.Data.DataColumn("OutNotes1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutNotes1);
                this.columnIsConsult = new global::System.Data.DataColumn("IsConsult", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsConsult);
                this.columnDIsActive = new global::System.Data.DataColumn("DIsActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIsActive);
                this.columnDrugCode = new global::System.Data.DataColumn("DrugCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugCode);
                this.columnIsMedDept = new global::System.Data.DataColumn("IsMedDept", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsMedDept);
                this.columnUnitPackaging = new global::System.Data.DataColumn("UnitPackaging", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitPackaging);
                this.columnNumberOfEstimatedMonths = new global::System.Data.DataColumn("NumberOfEstimatedMonths", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumberOfEstimatedMonths);
                this.columnFactorSafety = new global::System.Data.DataColumn("FactorSafety", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFactorSafety);
                this.columnCountryName = new global::System.Data.DataColumn("CountryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryName);
                this.columnCountryCode = new global::System.Data.DataColumn("CountryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryCode);
                this.columnFaName = new global::System.Data.DataColumn("FaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaName);
                this.columnFaDescription = new global::System.Data.DataColumn("FaDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaDescription);
                this.columnDrugClassCode = new global::System.Data.DataColumn("DrugClassCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDrugClassCode);
                this.columnFaActive = new global::System.Data.DataColumn("FaActive", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaActive);
                this.columnV_MedProductType = new global::System.Data.DataColumn("V_MedProductType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV_MedProductType);
                this.columnParDrugClassID = new global::System.Data.DataColumn("ParDrugClassID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParDrugClassID);
                this.columnPCOID = new global::System.Data.DataColumn("PCOID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCOID);
                this.columnPCOName = new global::System.Data.DataColumn("PCOName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCOName);
                this.columnPCOAddress = new global::System.Data.DataColumn("PCOAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCOAddress);
                this.columnPCOState = new global::System.Data.DataColumn("PCOState", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCOState);
                this.columnPCOZipCode = new global::System.Data.DataColumn("PCOZipCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCOZipCode);
                this.columnCountryIDNSX = new global::System.Data.DataColumn("CountryIDNSX", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryIDNSX);
                this.columnPCOTelephone = new global::System.Data.DataColumn("PCOTelephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCOTelephone);
                this.columnContactName = new global::System.Data.DataColumn("ContactName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContactName);
                this.columnOutID.AutoIncrement = true;
                this.columnOutID.AutoIncrementSeed = -1;
                this.columnOutID.AutoIncrementStep = -1;
                this.columnOutID.AllowDBNull = false;
                this.columnOutID.ReadOnly = true;
                this.columnDrugID.AllowDBNull = false;
                this.columnOutHIRebate.ReadOnly = true;
                this.columnOutHIAllowedPrice.ReadOnly = true;
                this.columnOutNotes.MaxLength = 512;
                this.columnOutAmount.ReadOnly = true;
                this.columnOutAmountCoPay.ReadOnly = true;
                this.columnRemaining.ReadOnly = true;
                this.columnBrandName.MaxLength = 128;
                this.columnSdlDescription.MaxLength = 512;
                this.columnContent.MaxLength = 128;
                this.columnAdministration.MaxLength = 128;
                this.columnQtyReturn.ReadOnly = true;
                this.columnHIDrugCode.MaxLength = 20;
                this.columnVisa.MaxLength = 20;
                this.columnPackaging.MaxLength = 20;
                this.columnUnitID.AutoIncrement = true;
                this.columnUnitID.AutoIncrementSeed = -1;
                this.columnUnitID.AutoIncrementStep = -1;
                this.columnUnitID.ReadOnly = true;
                this.columnUnitCode.MaxLength = 5;
                this.columnUnitName.AllowDBNull = false;
                this.columnUnitName.MaxLength = 64;
                this.columnUnitUse.MaxLength = 64;
                this.columnInBatchNumber.MaxLength = 15;
                this.columnIsPercentage.ReadOnly = true;
                this.columnGenericName.MaxLength = 128;
                this.columnDrugDescription.MaxLength = 512;
                this.columnComposition.MaxLength = 128;
                this.columnActiveIngredient.MaxLength = 128;
                this.columnIndication.MaxLength = 128;
                this.columnContraindication.MaxLength = 512;
                this.columnDosage.MaxLength = 128;
                this.columnPrecaution_Warn.MaxLength = 512;
                this.columnSideEffects.MaxLength = 255;
                this.columnInteraction.MaxLength = 512;
                this.columnOutNotes1.MaxLength = 512;
                this.columnDrugCode.MaxLength = 20;
                this.columnCountryName.MaxLength = 128;
                this.columnCountryCode.MaxLength = 3;
                this.columnFaName.MaxLength = 128;
                this.columnFaDescription.MaxLength = 128;
                this.columnDrugClassCode.MaxLength = 15;
                this.columnPCOName.MaxLength = 128;
                this.columnPCOAddress.MaxLength = 128;
                this.columnPCOState.MaxLength = 50;
                this.columnPCOZipCode.MaxLength = 10;
                this.columnPCOTelephone.MaxLength = 25;
                this.columnContactName.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrug_ByIDInvoiceRow NewspOutwardDrug_ByIDInvoiceRow() {
                return ((spOutwardDrug_ByIDInvoiceRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new spOutwardDrug_ByIDInvoiceRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(spOutwardDrug_ByIDInvoiceRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.spOutwardDrug_ByIDInvoiceRowChanged != null)) {
                    this.spOutwardDrug_ByIDInvoiceRowChanged(this, new spOutwardDrug_ByIDInvoiceRowChangeEvent(((spOutwardDrug_ByIDInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.spOutwardDrug_ByIDInvoiceRowChanging != null)) {
                    this.spOutwardDrug_ByIDInvoiceRowChanging(this, new spOutwardDrug_ByIDInvoiceRowChangeEvent(((spOutwardDrug_ByIDInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.spOutwardDrug_ByIDInvoiceRowDeleted != null)) {
                    this.spOutwardDrug_ByIDInvoiceRowDeleted(this, new spOutwardDrug_ByIDInvoiceRowChangeEvent(((spOutwardDrug_ByIDInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.spOutwardDrug_ByIDInvoiceRowDeleting != null)) {
                    this.spOutwardDrug_ByIDInvoiceRowDeleting(this, new spOutwardDrug_ByIDInvoiceRowChangeEvent(((spOutwardDrug_ByIDInvoiceRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovespOutwardDrug_ByIDInvoiceRow(spOutwardDrug_ByIDInvoiceRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsXuatNoiBo ds = new dsXuatNoiBo();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "spOutwardDrug_ByIDInvoiceDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spOutwardDrugInvoices_ByIDVisitorRow : global::System.Data.DataRow {
            
            private spOutwardDrugInvoices_ByIDVisitorDataTable tablespOutwardDrugInvoices_ByIDVisitor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spOutwardDrugInvoices_ByIDVisitorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespOutwardDrugInvoices_ByIDVisitor = ((spOutwardDrugInvoices_ByIDVisitorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long outiID {
                get {
                    return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.outiIDColumn]));
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.outiIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PrescriptID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.PrescriptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrescriptID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.PrescriptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long IMEID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.IMEIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IMEID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.IMEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long HITTypeID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.HITTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HITTypeID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.HITTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long MSCID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.MSCIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MSCID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.MSCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long StaffID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.StaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.StaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long TypID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.TypIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.TypIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutInvID {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutInvIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutInvID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutInvIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutInvoiceNumber {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutInvoiceNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutInvoiceNumber\' in table \'spOutwardDrugInvoices_ByIDVisit" +
                                "or\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutInvoiceNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OutDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutDate\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.CustomerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerName\' in table \'spOutwardDrugInvoices_ByIDVisitor\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumberPhone {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.NumberPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberPhone\' in table \'spOutwardDrugInvoices_ByIDVisitor\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.NumberPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Address\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long StoreID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.StoreIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.StoreIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long StoreTypeID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.StoreTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StoreTypeID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.StoreTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DeptID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.DeptIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeptID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.DeptIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string swhlName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.swhlNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'swhlName\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.swhlNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string swhlNotes {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.swhlNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'swhlNotes\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.swhlNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool swhlActive {
                get {
                    try {
                        return ((bool)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.swhlActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'swhlActive\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.swhlActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PtRegistrationID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.PtRegistrationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PtRegistrationID\' in table \'spOutwardDrugInvoices_ByIDVisit" +
                                "or\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.PtRegistrationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_OutDrugInvStatus {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.V_OutDrugInvStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_OutDrugInvStatus\' in table \'spOutwardDrugInvoices_ByIDVis" +
                                "itor\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.V_OutDrugInvStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutDrugInvStatus {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutDrugInvStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutDrugInvStatus\' in table \'spOutwardDrugInvoices_ByIDVisit" +
                                "or\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutDrugInvStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ReqNumCode {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.ReqNumCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReqNumCode\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.ReqNumCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ToStoreID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStoreIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToStoreID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStoreIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ToStoreName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStoreNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToStoreName\' in table \'spOutwardDrugInvoices_ByIDVisitor\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStoreNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Notes\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckedPoint {
                get {
                    try {
                        return ((bool)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.CheckedPointColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CheckedPoint\' in table \'spOutwardDrugInvoices_ByIDVisitor\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.CheckedPointColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ToStaffID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToStaffID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ToStaffIDName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStaffIDNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToStaffIDName\' in table \'spOutwardDrugInvoices_ByIDVisitor\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStaffIDNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long HosID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.HosIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HosID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.HosIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HosName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.HosNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HosName\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.HosNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ByCost {
                get {
                    try {
                        return ((bool)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.ByCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ByCost\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.ByCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHICount {
                get {
                    try {
                        return ((bool)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.IsHICountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHICount\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.IsHICountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ReturnID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.ReturnIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReturnID\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.ReturnIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrugInvoices_ByIDVisitor.TypNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypName\' in table \'spOutwardDrugInvoices_ByIDVisitor\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrugInvoices_ByIDVisitor.TypNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrescriptIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.PrescriptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrescriptIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.PrescriptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIMEIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.IMEIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIMEIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.IMEIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHITTypeIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.HITTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHITTypeIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.HITTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMSCIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.MSCIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMSCIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.MSCIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStaffIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.StaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStaffIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.StaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.TypIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.TypIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutInvIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.OutInvIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutInvIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutInvIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutInvoiceNumberNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.OutInvoiceNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutInvoiceNumberNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutInvoiceNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutDateNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.OutDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutDateNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerNameNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.CustomerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerNameNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.CustomerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberPhoneNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.NumberPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberPhoneNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.NumberPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddressNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddressNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStoreIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.StoreIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStoreIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.StoreIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStoreTypeIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.StoreTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStoreTypeIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.StoreTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeptIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.DeptIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeptIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.DeptIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsswhlNameNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.swhlNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetswhlNameNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.swhlNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsswhlNotesNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.swhlNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetswhlNotesNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.swhlNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsswhlActiveNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.swhlActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetswhlActiveNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.swhlActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPtRegistrationIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.PtRegistrationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPtRegistrationIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.PtRegistrationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_OutDrugInvStatusNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.V_OutDrugInvStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_OutDrugInvStatusNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.V_OutDrugInvStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutDrugInvStatusNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.OutDrugInvStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutDrugInvStatusNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.OutDrugInvStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReqNumCodeNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.ReqNumCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReqNumCodeNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.ReqNumCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToStoreIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.ToStoreIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToStoreIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStoreIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToStoreNameNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.ToStoreNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToStoreNameNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStoreNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNotesNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckedPointNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.CheckedPointColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckedPointNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.CheckedPointColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToStaffIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.ToStaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToStaffIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToStaffIDNameNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.ToStaffIDNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToStaffIDNameNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.ToStaffIDNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHosIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.HosIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHosIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.HosIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHosNameNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.HosNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHosNameNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.HosNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsByCostNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.ByCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetByCostNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.ByCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsHICountNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.IsHICountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsHICountNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.IsHICountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReturnIDNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.ReturnIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReturnIDNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.ReturnIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypNameNull() {
                return this.IsNull(this.tablespOutwardDrugInvoices_ByIDVisitor.TypNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypNameNull() {
                this[this.tablespOutwardDrugInvoices_ByIDVisitor.TypNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class spOutwardDrug_ByIDInvoiceRow : global::System.Data.DataRow {
            
            private spOutwardDrug_ByIDInvoiceDataTable tablespOutwardDrug_ByIDInvoice;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal spOutwardDrug_ByIDInvoiceRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablespOutwardDrug_ByIDInvoice = ((spOutwardDrug_ByIDInvoiceDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long OutID {
                get {
                    return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.OutIDColumn]));
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.OutIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long outiID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.outiIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'outiID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.outiIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DrugID {
                get {
                    return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.DrugIDColumn]));
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.DrugIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.InIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.InIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OutHIRebate {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.OutHIRebateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutHIRebate\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.OutHIRebateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OutQuantity {
                get {
                    try {
                        return ((int)(this[this.tablespOutwardDrug_ByIDInvoice.OutQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutQuantity\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.OutQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OutPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.OutPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutPrice\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.OutPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OutHIAllowedPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.OutHIAllowedPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutHIAllowedPrice\' in table \'spOutwardDrug_ByIDInvoice\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.OutHIAllowedPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OutPriceDifference {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.OutPriceDifferenceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutPriceDifference\' in table \'spOutwardDrug_ByIDInvoice\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.OutPriceDifferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutNotes {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.OutNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutNotes\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.OutNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OutAmount {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.OutAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutAmount\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.OutAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OutAmountCoPay {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.OutAmountCoPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutAmountCoPay\' in table \'spOutwardDrug_ByIDInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.OutAmountCoPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Qty {
                get {
                    try {
                        return ((int)(this[this.tablespOutwardDrug_ByIDInvoice.QtyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Qty\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.QtyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SellingPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.SellingPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellingPrice\' in table \'spOutwardDrug_ByIDInvoice\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.SellingPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Remaining {
                get {
                    try {
                        return ((int)(this[this.tablespOutwardDrug_ByIDInvoice.RemainingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remaining\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.RemainingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BrandName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.BrandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BrandName\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.BrandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SdlDescription {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.SdlDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SdlDescription\' in table \'spOutwardDrug_ByIDInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.SdlDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Content {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.ContentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Content\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.ContentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Administration {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.AdministrationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Administration\' in table \'spOutwardDrug_ByIDInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.AdministrationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int QtyReturn {
                get {
                    try {
                        return ((int)(this[this.tablespOutwardDrug_ByIDInvoice.QtyReturnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QtyReturn\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.QtyReturnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool InsuranceCover {
                get {
                    try {
                        return ((bool)(this[this.tablespOutwardDrug_ByIDInvoice.InsuranceCoverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InsuranceCover\' in table \'spOutwardDrug_ByIDInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.InsuranceCoverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HIDrugCode {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.HIDrugCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIDrugCode\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.HIDrugCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Visa {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.VisaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Visa\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.VisaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Packaging {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.PackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Packaging\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.PackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UnitID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.UnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.UnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnitCode {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.UnitCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitCode\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.UnitCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnitName {
                get {
                    return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.UnitNameColumn]));
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.UnitNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UnitActive {
                get {
                    try {
                        return ((bool)(this[this.tablespOutwardDrug_ByIDInvoice.UnitActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitActive\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.UnitActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UnitUse {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.UnitUseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitUse\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.UnitUseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UnitUseID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.UnitUseIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitUseID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.UnitUseIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long SdlID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.SdlIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SdlID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.SdlIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long StaffID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.StaffIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StaffID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.StaffIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long inviID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.inviIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inviID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.inviIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InBatchNumber {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.InBatchNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InBatchNumber\' in table \'spOutwardDrug_ByIDInvoice\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.InBatchNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InProductionDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespOutwardDrug_ByIDInvoice.InProductionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InProductionDate\' in table \'spOutwardDrug_ByIDInvoice\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.InProductionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InExpiryDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablespOutwardDrug_ByIDInvoice.InExpiryDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InExpiryDate\' in table \'spOutwardDrug_ByIDInvoice\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.InExpiryDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InQuantity {
                get {
                    try {
                        return ((int)(this[this.tablespOutwardDrug_ByIDInvoice.InQuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InQuantity\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.InQuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal InBuyingPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.InBuyingPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InBuyingPrice\' in table \'spOutwardDrug_ByIDInvoice\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.InBuyingPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NormalPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.NormalPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NormalPrice\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.NormalPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIPatientPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.HIPatientPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIPatientPrice\' in table \'spOutwardDrug_ByIDInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.HIPatientPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HIAllowedPrice {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.HIAllowedPriceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HIAllowedPrice\' in table \'spOutwardDrug_ByIDInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.HIAllowedPriceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPercentage {
                get {
                    try {
                        return ((bool)(this[this.tablespOutwardDrug_ByIDInvoice.IsPercentageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsPercentage\' in table \'spOutwardDrug_ByIDInvoice\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.IsPercentageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal InCost {
                get {
                    try {
                        return ((decimal)(this[this.tablespOutwardDrug_ByIDInvoice.InCostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InCost\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.InCostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PsID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.PsIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PsID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.PsIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long AtID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.AtIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AtID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.AtIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CountryID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.CountryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long DrugClassID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.DrugClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugClassID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.DrugClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GenericName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.GenericNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GenericName\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.GenericNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrugDescription {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.DrugDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugDescription\' in table \'spOutwardDrug_ByIDInvoice\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.DrugDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Composition {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.CompositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Composition\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.CompositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ActiveIngredient {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.ActiveIngredientColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActiveIngredient\' in table \'spOutwardDrug_ByIDInvoice\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.ActiveIngredientColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Indication {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.IndicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Indication\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.IndicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Contraindication {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.ContraindicationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Contraindication\' in table \'spOutwardDrug_ByIDInvoice\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.ContraindicationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Dosage {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.DosageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dosage\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.DosageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Precaution_Warn {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.Precaution_WarnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Precaution_Warn\' in table \'spOutwardDrug_ByIDInvoice\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.Precaution_WarnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SideEffects {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.SideEffectsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SideEffects\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.SideEffectsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Interaction {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.InteractionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Interaction\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.InteractionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AdvTimeBeforeExpire {
                get {
                    try {
                        return ((int)(this[this.tablespOutwardDrug_ByIDInvoice.AdvTimeBeforeExpireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AdvTimeBeforeExpire\' in table \'spOutwardDrug_ByIDInvoice\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.AdvTimeBeforeExpireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutNotes1 {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.OutNotes1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OutNotes1\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.OutNotes1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsult {
                get {
                    try {
                        return ((bool)(this[this.tablespOutwardDrug_ByIDInvoice.IsConsultColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsConsult\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.IsConsultColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DIsActive {
                get {
                    try {
                        return ((bool)(this[this.tablespOutwardDrug_ByIDInvoice.DIsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DIsActive\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.DIsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrugCode {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.DrugCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugCode\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.DrugCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte IsMedDept {
                get {
                    try {
                        return ((byte)(this[this.tablespOutwardDrug_ByIDInvoice.IsMedDeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsMedDept\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.IsMedDeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UnitPackaging {
                get {
                    try {
                        return ((int)(this[this.tablespOutwardDrug_ByIDInvoice.UnitPackagingColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UnitPackaging\' in table \'spOutwardDrug_ByIDInvoice\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.UnitPackagingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumberOfEstimatedMonths {
                get {
                    try {
                        return ((int)(this[this.tablespOutwardDrug_ByIDInvoice.NumberOfEstimatedMonthsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NumberOfEstimatedMonths\' in table \'spOutwardDrug_ByIDInvoic" +
                                "e\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.NumberOfEstimatedMonthsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FactorSafety {
                get {
                    try {
                        return ((int)(this[this.tablespOutwardDrug_ByIDInvoice.FactorSafetyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FactorSafety\' in table \'spOutwardDrug_ByIDInvoice\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.FactorSafetyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CountryName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.CountryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryName\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.CountryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CountryCode {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.CountryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryCode\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.CountryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FaName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.FaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FaName\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.FaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FaDescription {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.FaDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FaDescription\' in table \'spOutwardDrug_ByIDInvoice\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.FaDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DrugClassCode {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.DrugClassCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DrugClassCode\' in table \'spOutwardDrug_ByIDInvoice\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.DrugClassCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FaActive {
                get {
                    try {
                        return ((bool)(this[this.tablespOutwardDrug_ByIDInvoice.FaActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FaActive\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.FaActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long V_MedProductType {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.V_MedProductTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'V_MedProductType\' in table \'spOutwardDrug_ByIDInvoice\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.V_MedProductTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ParDrugClassID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.ParDrugClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParDrugClassID\' in table \'spOutwardDrug_ByIDInvoice\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.ParDrugClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long PCOID {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.PCOIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCOID\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.PCOIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCOName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.PCONameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCOName\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.PCONameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCOAddress {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.PCOAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCOAddress\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.PCOAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCOState {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.PCOStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCOState\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.PCOStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCOZipCode {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.PCOZipCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCOZipCode\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.PCOZipCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CountryIDNSX {
                get {
                    try {
                        return ((long)(this[this.tablespOutwardDrug_ByIDInvoice.CountryIDNSXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryIDNSX\' in table \'spOutwardDrug_ByIDInvoice\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.CountryIDNSXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PCOTelephone {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.PCOTelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PCOTelephone\' in table \'spOutwardDrug_ByIDInvoice\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.PCOTelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContactName {
                get {
                    try {
                        return ((string)(this[this.tablespOutwardDrug_ByIDInvoice.ContactNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContactName\' in table \'spOutwardDrug_ByIDInvoice\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablespOutwardDrug_ByIDInvoice.ContactNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoutiIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.outiIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoutiIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.outiIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.InIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.InIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutHIRebateNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.OutHIRebateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutHIRebateNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.OutHIRebateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutQuantityNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.OutQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutQuantityNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.OutQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutPriceNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.OutPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutPriceNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.OutPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutHIAllowedPriceNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.OutHIAllowedPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutHIAllowedPriceNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.OutHIAllowedPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutPriceDifferenceNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.OutPriceDifferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutPriceDifferenceNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.OutPriceDifferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutNotesNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.OutNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutNotesNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.OutNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutAmountNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.OutAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutAmountNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.OutAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutAmountCoPayNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.OutAmountCoPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutAmountCoPayNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.OutAmountCoPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQtyNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.QtyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQtyNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.QtyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellingPriceNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.SellingPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellingPriceNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.SellingPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRemainingNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.RemainingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRemainingNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.RemainingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBrandNameNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.BrandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBrandNameNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.BrandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSdlDescriptionNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.SdlDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSdlDescriptionNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.SdlDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContentNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.ContentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContentNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.ContentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdministrationNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.AdministrationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdministrationNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.AdministrationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQtyReturnNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.QtyReturnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQtyReturnNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.QtyReturnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInsuranceCoverNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.InsuranceCoverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInsuranceCoverNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.InsuranceCoverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIDrugCodeNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.HIDrugCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIDrugCodeNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.HIDrugCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVisaNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.VisaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVisaNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.VisaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPackagingNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.PackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPackagingNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.PackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.UnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.UnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitCodeNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.UnitCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitCodeNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.UnitCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitActiveNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.UnitActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitActiveNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.UnitActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitUseNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.UnitUseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitUseNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.UnitUseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitUseIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.UnitUseIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitUseIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.UnitUseIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSdlIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.SdlIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSdlIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.SdlIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStaffIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.StaffIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStaffIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.StaffIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsinviIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.inviIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetinviIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.inviIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInBatchNumberNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.InBatchNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInBatchNumberNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.InBatchNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInProductionDateNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.InProductionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInProductionDateNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.InProductionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInExpiryDateNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.InExpiryDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInExpiryDateNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.InExpiryDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInQuantityNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.InQuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInQuantityNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.InQuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInBuyingPriceNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.InBuyingPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInBuyingPriceNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.InBuyingPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNormalPriceNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.NormalPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNormalPriceNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.NormalPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIPatientPriceNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.HIPatientPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIPatientPriceNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.HIPatientPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHIAllowedPriceNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.HIAllowedPriceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHIAllowedPriceNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.HIAllowedPriceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsPercentageNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.IsPercentageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsPercentageNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.IsPercentageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInCostNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.InCostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInCostNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.InCostColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPsIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.PsIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPsIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.PsIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAtIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.AtIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAtIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.AtIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.CountryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.CountryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugClassIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.DrugClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugClassIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.DrugClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGenericNameNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.GenericNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGenericNameNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.GenericNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugDescriptionNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.DrugDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugDescriptionNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.DrugDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCompositionNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.CompositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCompositionNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.CompositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActiveIngredientNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.ActiveIngredientColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActiveIngredientNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.ActiveIngredientColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIndicationNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.IndicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIndicationNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.IndicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContraindicationNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.ContraindicationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContraindicationNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.ContraindicationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDosageNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.DosageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDosageNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.DosageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrecaution_WarnNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.Precaution_WarnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrecaution_WarnNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.Precaution_WarnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSideEffectsNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.SideEffectsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSideEffectsNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.SideEffectsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInteractionNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.InteractionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInteractionNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.InteractionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdvTimeBeforeExpireNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.AdvTimeBeforeExpireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdvTimeBeforeExpireNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.AdvTimeBeforeExpireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutNotes1Null() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.OutNotes1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutNotes1Null() {
                this[this.tablespOutwardDrug_ByIDInvoice.OutNotes1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsConsultNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.IsConsultColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsConsultNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.IsConsultColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDIsActiveNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.DIsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDIsActiveNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.DIsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugCodeNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.DrugCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugCodeNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.DrugCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsMedDeptNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.IsMedDeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsMedDeptNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.IsMedDeptColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnitPackagingNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.UnitPackagingColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnitPackagingNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.UnitPackagingColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumberOfEstimatedMonthsNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.NumberOfEstimatedMonthsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumberOfEstimatedMonthsNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.NumberOfEstimatedMonthsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFactorSafetyNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.FactorSafetyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFactorSafetyNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.FactorSafetyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryNameNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.CountryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryNameNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.CountryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryCodeNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.CountryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryCodeNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.CountryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaNameNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.FaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaNameNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.FaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaDescriptionNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.FaDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaDescriptionNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.FaDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDrugClassCodeNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.DrugClassCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDrugClassCodeNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.DrugClassCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaActiveNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.FaActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaActiveNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.FaActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsV_MedProductTypeNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.V_MedProductTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetV_MedProductTypeNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.V_MedProductTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParDrugClassIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.ParDrugClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParDrugClassIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.ParDrugClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCOIDNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.PCOIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCOIDNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.PCOIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCONameNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.PCONameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCONameNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.PCONameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCOAddressNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.PCOAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCOAddressNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.PCOAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCOStateNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.PCOStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCOStateNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.PCOStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCOZipCodeNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.PCOZipCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCOZipCodeNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.PCOZipCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryIDNSXNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.CountryIDNSXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryIDNSXNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.CountryIDNSXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPCOTelephoneNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.PCOTelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPCOTelephoneNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.PCOTelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContactNameNull() {
                return this.IsNull(this.tablespOutwardDrug_ByIDInvoice.ContactNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContactNameNull() {
                this[this.tablespOutwardDrug_ByIDInvoice.ContactNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spOutwardDrugInvoices_ByIDVisitorRowChangeEvent : global::System.EventArgs {
            
            private spOutwardDrugInvoices_ByIDVisitorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrugInvoices_ByIDVisitorRowChangeEvent(spOutwardDrugInvoices_ByIDVisitorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrugInvoices_ByIDVisitorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class spOutwardDrug_ByIDInvoiceRowChangeEvent : global::System.EventArgs {
            
            private spOutwardDrug_ByIDInvoiceRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrug_ByIDInvoiceRowChangeEvent(spOutwardDrug_ByIDInvoiceRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public spOutwardDrug_ByIDInvoiceRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace eHCMS.ReportLib.RptPharmacies.DataSchema.dsXuatNoiBoTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spOutwardDrugInvoices_ByIDVisitorTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spOutwardDrugInvoices_ByIDVisitorTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spOutwardDrugInvoices_ByIDVisitor";
            tableMapping.ColumnMappings.Add("outiID", "outiID");
            tableMapping.ColumnMappings.Add("PrescriptID", "PrescriptID");
            tableMapping.ColumnMappings.Add("IMEID", "IMEID");
            tableMapping.ColumnMappings.Add("HITTypeID", "HITTypeID");
            tableMapping.ColumnMappings.Add("MSCID", "MSCID");
            tableMapping.ColumnMappings.Add("StaffID", "StaffID");
            tableMapping.ColumnMappings.Add("TypID", "TypID");
            tableMapping.ColumnMappings.Add("OutInvID", "OutInvID");
            tableMapping.ColumnMappings.Add("OutInvoiceNumber", "OutInvoiceNumber");
            tableMapping.ColumnMappings.Add("OutDate", "OutDate");
            tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
            tableMapping.ColumnMappings.Add("NumberPhone", "NumberPhone");
            tableMapping.ColumnMappings.Add("Address", "Address");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("StoreID", "StoreID");
            tableMapping.ColumnMappings.Add("StoreTypeID", "StoreTypeID");
            tableMapping.ColumnMappings.Add("DeptID", "DeptID");
            tableMapping.ColumnMappings.Add("swhlName", "swhlName");
            tableMapping.ColumnMappings.Add("swhlNotes", "swhlNotes");
            tableMapping.ColumnMappings.Add("swhlActive", "swhlActive");
            tableMapping.ColumnMappings.Add("PtRegistrationID", "PtRegistrationID");
            tableMapping.ColumnMappings.Add("V_OutDrugInvStatus", "V_OutDrugInvStatus");
            tableMapping.ColumnMappings.Add("OutDrugInvStatus", "OutDrugInvStatus");
            tableMapping.ColumnMappings.Add("ReqNumCode", "ReqNumCode");
            tableMapping.ColumnMappings.Add("ToStoreID", "ToStoreID");
            tableMapping.ColumnMappings.Add("ToStoreName", "ToStoreName");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("CheckedPoint", "CheckedPoint");
            tableMapping.ColumnMappings.Add("ToStaffID", "ToStaffID");
            tableMapping.ColumnMappings.Add("ToStaffIDName", "ToStaffIDName");
            tableMapping.ColumnMappings.Add("HosID", "HosID");
            tableMapping.ColumnMappings.Add("HosName", "HosName");
            tableMapping.ColumnMappings.Add("ByCost", "ByCost");
            tableMapping.ColumnMappings.Add("IsHICount", "IsHICount");
            tableMapping.ColumnMappings.Add("ReturnID", "ReturnID");
            tableMapping.ColumnMappings.Add("TypName", "TypName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spOutwardDrugInvoices_ByIDVisitor";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@outiID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsXuatNoiBo.spOutwardDrugInvoices_ByIDVisitorDataTable dataTable, global::System.Nullable<long> outiID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((outiID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(outiID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsXuatNoiBo.spOutwardDrugInvoices_ByIDVisitorDataTable GetData(global::System.Nullable<long> outiID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((outiID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(outiID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsXuatNoiBo.spOutwardDrugInvoices_ByIDVisitorDataTable dataTable = new dsXuatNoiBo.spOutwardDrugInvoices_ByIDVisitorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class spOutwardDrug_ByIDInvoiceTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public spOutwardDrug_ByIDInvoiceTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "spOutwardDrug_ByIDInvoice";
            tableMapping.ColumnMappings.Add("OutID", "OutID");
            tableMapping.ColumnMappings.Add("outiID", "outiID");
            tableMapping.ColumnMappings.Add("DrugID", "DrugID");
            tableMapping.ColumnMappings.Add("InID", "InID");
            tableMapping.ColumnMappings.Add("OutHIRebate", "OutHIRebate");
            tableMapping.ColumnMappings.Add("OutQuantity", "OutQuantity");
            tableMapping.ColumnMappings.Add("OutPrice", "OutPrice");
            tableMapping.ColumnMappings.Add("OutHIAllowedPrice", "OutHIAllowedPrice");
            tableMapping.ColumnMappings.Add("OutPriceDifference", "OutPriceDifference");
            tableMapping.ColumnMappings.Add("OutNotes", "OutNotes");
            tableMapping.ColumnMappings.Add("OutAmount", "OutAmount");
            tableMapping.ColumnMappings.Add("OutAmountCoPay", "OutAmountCoPay");
            tableMapping.ColumnMappings.Add("Qty", "Qty");
            tableMapping.ColumnMappings.Add("SellingPrice", "SellingPrice");
            tableMapping.ColumnMappings.Add("Remaining", "Remaining");
            tableMapping.ColumnMappings.Add("BrandName", "BrandName");
            tableMapping.ColumnMappings.Add("SdlDescription", "SdlDescription");
            tableMapping.ColumnMappings.Add("Content", "Content");
            tableMapping.ColumnMappings.Add("Administration", "Administration");
            tableMapping.ColumnMappings.Add("QtyReturn", "QtyReturn");
            tableMapping.ColumnMappings.Add("InsuranceCover", "InsuranceCover");
            tableMapping.ColumnMappings.Add("HIDrugCode", "HIDrugCode");
            tableMapping.ColumnMappings.Add("Visa", "Visa");
            tableMapping.ColumnMappings.Add("Packaging", "Packaging");
            tableMapping.ColumnMappings.Add("UnitID", "UnitID");
            tableMapping.ColumnMappings.Add("UnitCode", "UnitCode");
            tableMapping.ColumnMappings.Add("UnitName", "UnitName");
            tableMapping.ColumnMappings.Add("UnitActive", "UnitActive");
            tableMapping.ColumnMappings.Add("UnitUse", "UnitUse");
            tableMapping.ColumnMappings.Add("UnitUseID", "UnitUseID");
            tableMapping.ColumnMappings.Add("SdlID", "SdlID");
            tableMapping.ColumnMappings.Add("StaffID", "StaffID");
            tableMapping.ColumnMappings.Add("inviID", "inviID");
            tableMapping.ColumnMappings.Add("InBatchNumber", "InBatchNumber");
            tableMapping.ColumnMappings.Add("InProductionDate", "InProductionDate");
            tableMapping.ColumnMappings.Add("InExpiryDate", "InExpiryDate");
            tableMapping.ColumnMappings.Add("InQuantity", "InQuantity");
            tableMapping.ColumnMappings.Add("InBuyingPrice", "InBuyingPrice");
            tableMapping.ColumnMappings.Add("NormalPrice", "NormalPrice");
            tableMapping.ColumnMappings.Add("HIPatientPrice", "HIPatientPrice");
            tableMapping.ColumnMappings.Add("HIAllowedPrice", "HIAllowedPrice");
            tableMapping.ColumnMappings.Add("IsPercentage", "IsPercentage");
            tableMapping.ColumnMappings.Add("InCost", "InCost");
            tableMapping.ColumnMappings.Add("PsID", "PsID");
            tableMapping.ColumnMappings.Add("AtID", "AtID");
            tableMapping.ColumnMappings.Add("CountryID", "CountryID");
            tableMapping.ColumnMappings.Add("DrugClassID", "DrugClassID");
            tableMapping.ColumnMappings.Add("GenericName", "GenericName");
            tableMapping.ColumnMappings.Add("DrugDescription", "DrugDescription");
            tableMapping.ColumnMappings.Add("Composition", "Composition");
            tableMapping.ColumnMappings.Add("ActiveIngredient", "ActiveIngredient");
            tableMapping.ColumnMappings.Add("Indication", "Indication");
            tableMapping.ColumnMappings.Add("Contraindication", "Contraindication");
            tableMapping.ColumnMappings.Add("Dosage", "Dosage");
            tableMapping.ColumnMappings.Add("Precaution_Warn", "Precaution_Warn");
            tableMapping.ColumnMappings.Add("SideEffects", "SideEffects");
            tableMapping.ColumnMappings.Add("Interaction", "Interaction");
            tableMapping.ColumnMappings.Add("AdvTimeBeforeExpire", "AdvTimeBeforeExpire");
            tableMapping.ColumnMappings.Add("OutNotes1", "OutNotes1");
            tableMapping.ColumnMappings.Add("IsConsult", "IsConsult");
            tableMapping.ColumnMappings.Add("DIsActive", "DIsActive");
            tableMapping.ColumnMappings.Add("DrugCode", "DrugCode");
            tableMapping.ColumnMappings.Add("IsMedDept", "IsMedDept");
            tableMapping.ColumnMappings.Add("UnitPackaging", "UnitPackaging");
            tableMapping.ColumnMappings.Add("NumberOfEstimatedMonths", "NumberOfEstimatedMonths");
            tableMapping.ColumnMappings.Add("FactorSafety", "FactorSafety");
            tableMapping.ColumnMappings.Add("CountryName", "CountryName");
            tableMapping.ColumnMappings.Add("CountryCode", "CountryCode");
            tableMapping.ColumnMappings.Add("FaName", "FaName");
            tableMapping.ColumnMappings.Add("FaDescription", "FaDescription");
            tableMapping.ColumnMappings.Add("DrugClassCode", "DrugClassCode");
            tableMapping.ColumnMappings.Add("FaActive", "FaActive");
            tableMapping.ColumnMappings.Add("V_MedProductType", "V_MedProductType");
            tableMapping.ColumnMappings.Add("ParDrugClassID", "ParDrugClassID");
            tableMapping.ColumnMappings.Add("PCOID", "PCOID");
            tableMapping.ColumnMappings.Add("PCOName", "PCOName");
            tableMapping.ColumnMappings.Add("PCOAddress", "PCOAddress");
            tableMapping.ColumnMappings.Add("PCOState", "PCOState");
            tableMapping.ColumnMappings.Add("PCOZipCode", "PCOZipCode");
            tableMapping.ColumnMappings.Add("CountryIDNSX", "CountryIDNSX");
            tableMapping.ColumnMappings.Add("PCOTelephone", "PCOTelephone");
            tableMapping.ColumnMappings.Add("ContactName", "ContactName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::eHCMS.ReportLib.Properties.Settings.Default.eHCMS_DBConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.spRpt_OutwardDrug_ByIDInvoice";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@outiID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsXuatNoiBo.spOutwardDrug_ByIDInvoiceDataTable dataTable, global::System.Nullable<long> outiID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((outiID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(outiID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsXuatNoiBo.spOutwardDrug_ByIDInvoiceDataTable GetData(global::System.Nullable<long> outiID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((outiID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(outiID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsXuatNoiBo.spOutwardDrug_ByIDInvoiceDataTable dataTable = new dsXuatNoiBo.spOutwardDrug_ByIDInvoiceDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsXuatNoiBo dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsXuatNoiBo dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsXuatNoiBo dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsXuatNoiBo dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591